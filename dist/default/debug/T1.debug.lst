

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 21 17:02:56 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	12F1501
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 07/09/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC12F1501 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     008C                     	;# 
    82     0091                     	;# 
    83     0092                     	;# 
    84     0093                     	;# 
    85     0095                     	;# 
    86     0096                     	;# 
    87     0097                     	;# 
    88     0099                     	;# 
    89     009A                     	;# 
    90     009B                     	;# 
    91     009B                     	;# 
    92     009C                     	;# 
    93     009D                     	;# 
    94     009E                     	;# 
    95     009F                     	;# 
    96     010C                     	;# 
    97     0111                     	;# 
    98     0112                     	;# 
    99     0115                     	;# 
   100     0116                     	;# 
   101     0117                     	;# 
   102     0118                     	;# 
   103     0119                     	;# 
   104     011D                     	;# 
   105     018C                     	;# 
   106     0191                     	;# 
   107     0191                     	;# 
   108     0192                     	;# 
   109     0193                     	;# 
   110     0193                     	;# 
   111     0194                     	;# 
   112     0195                     	;# 
   113     0196                     	;# 
   114     0197                     	;# 
   115     020C                     	;# 
   116     0391                     	;# 
   117     0392                     	;# 
   118     0393                     	;# 
   119     0498                     	;# 
   120     0498                     	;# 
   121     0499                     	;# 
   122     049A                     	;# 
   123     049B                     	;# 
   124     049B                     	;# 
   125     049C                     	;# 
   126     049D                     	;# 
   127     049E                     	;# 
   128     049F                     	;# 
   129     0611                     	;# 
   130     0612                     	;# 
   131     0613                     	;# 
   132     0613                     	;# 
   133     0614                     	;# 
   134     0615                     	;# 
   135     0616                     	;# 
   136     0616                     	;# 
   137     0617                     	;# 
   138     0618                     	;# 
   139     0619                     	;# 
   140     0619                     	;# 
   141     061A                     	;# 
   142     061B                     	;# 
   143     061C                     	;# 
   144     061C                     	;# 
   145     0691                     	;# 
   146     0692                     	;# 
   147     0693                     	;# 
   148     0694                     	;# 
   149     0695                     	;# 
   150     0F0F                     	;# 
   151     0F10                     	;# 
   152     0F11                     	;# 
   153     0F12                     	;# 
   154     0F13                     	;# 
   155     0F14                     	;# 
   156     0F15                     	;# 
   157     0F16                     	;# 
   158     0F17                     	;# 
   159     0F18                     	;# 
   160     0F19                     	;# 
   161     0F1A                     	;# 
   162     0F1B                     	;# 
   163     0F1C                     	;# 
   164     0F1D                     	;# 
   165     0F1E                     	;# 
   166     0F1F                     	;# 
   167     0FE3                     	;# 
   168     0FE4                     	;# 
   169     0FE5                     	;# 
   170     0FE6                     	;# 
   171     0FE7                     	;# 
   172     0FE8                     	;# 
   173     0FE9                     	;# 
   174     0FEA                     	;# 
   175     0FEB                     	;# 
   176     0FED                     	;# 
   177     0FEE                     	;# 
   178     0FEF                     	;# 
   179     0000                     	;# 
   180     0001                     	;# 
   181     0002                     	;# 
   182     0003                     	;# 
   183     0004                     	;# 
   184     0005                     	;# 
   185     0006                     	;# 
   186     0007                     	;# 
   187     0008                     	;# 
   188     0009                     	;# 
   189     000A                     	;# 
   190     000B                     	;# 
   191     000C                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0016                     	;# 
   198     0017                     	;# 
   199     0018                     	;# 
   200     0019                     	;# 
   201     001A                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     008C                     	;# 
   205     0091                     	;# 
   206     0092                     	;# 
   207     0093                     	;# 
   208     0095                     	;# 
   209     0096                     	;# 
   210     0097                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009B                     	;# 
   215     009C                     	;# 
   216     009D                     	;# 
   217     009E                     	;# 
   218     009F                     	;# 
   219     010C                     	;# 
   220     0111                     	;# 
   221     0112                     	;# 
   222     0115                     	;# 
   223     0116                     	;# 
   224     0117                     	;# 
   225     0118                     	;# 
   226     0119                     	;# 
   227     011D                     	;# 
   228     018C                     	;# 
   229     0191                     	;# 
   230     0191                     	;# 
   231     0192                     	;# 
   232     0193                     	;# 
   233     0193                     	;# 
   234     0194                     	;# 
   235     0195                     	;# 
   236     0196                     	;# 
   237     0197                     	;# 
   238     020C                     	;# 
   239     0391                     	;# 
   240     0392                     	;# 
   241     0393                     	;# 
   242     0498                     	;# 
   243     0498                     	;# 
   244     0499                     	;# 
   245     049A                     	;# 
   246     049B                     	;# 
   247     049B                     	;# 
   248     049C                     	;# 
   249     049D                     	;# 
   250     049E                     	;# 
   251     049F                     	;# 
   252     0611                     	;# 
   253     0612                     	;# 
   254     0613                     	;# 
   255     0613                     	;# 
   256     0614                     	;# 
   257     0615                     	;# 
   258     0616                     	;# 
   259     0616                     	;# 
   260     0617                     	;# 
   261     0618                     	;# 
   262     0619                     	;# 
   263     0619                     	;# 
   264     061A                     	;# 
   265     061B                     	;# 
   266     061C                     	;# 
   267     061C                     	;# 
   268     0691                     	;# 
   269     0692                     	;# 
   270     0693                     	;# 
   271     0694                     	;# 
   272     0695                     	;# 
   273     0F0F                     	;# 
   274     0F10                     	;# 
   275     0F11                     	;# 
   276     0F12                     	;# 
   277     0F13                     	;# 
   278     0F14                     	;# 
   279     0F15                     	;# 
   280     0F16                     	;# 
   281     0F17                     	;# 
   282     0F18                     	;# 
   283     0F19                     	;# 
   284     0F1A                     	;# 
   285     0F1B                     	;# 
   286     0F1C                     	;# 
   287     0F1D                     	;# 
   288     0F1E                     	;# 
   289     0F1F                     	;# 
   290     0FE3                     	;# 
   291     0FE4                     	;# 
   292     0FE5                     	;# 
   293     0FE6                     	;# 
   294     0FE7                     	;# 
   295     0FE8                     	;# 
   296     0FE9                     	;# 
   297     0FEA                     	;# 
   298     0FEB                     	;# 
   299     0FED                     	;# 
   300     0FEE                     	;# 
   301     0FEF                     	;# 
   302                           
   303                           	psect	stringtext1
   304     0196                     __pstringtext1:
   305     0196                     _TABLE:
   306     0196  34F0               	retlw	240
   307     0197  3425               	retlw	37
   308     0198  34CE               	retlw	206
   309     0199  3423               	retlw	35
   310     019A  34CE               	retlw	206
   311     019B  3421               	retlw	33
   312     019C  34EC               	retlw	236
   313     019D  341F               	retlw	31
   314     019E  342A               	retlw	42
   315     019F  341E               	retlw	30
   316     01A0  3482               	retlw	130
   317     01A1  341C               	retlw	28
   318     01A2  34F4               	retlw	244
   319     01A3  341A               	retlw	26
   320     01A4  347E               	retlw	126
   321     01A5  3419               	retlw	25
   322     01A6  3420               	retlw	32
   323     01A7  3418               	retlw	24
   324     01A8  349E               	retlw	158
   325     01A9  3415               	retlw	21
   326     01AA  347A               	retlw	122
   327     01AB  3414               	retlw	20
   328     01AC  3466               	retlw	102
   329     01AD  3413               	retlw	19
   330     01AE  3464               	retlw	100
   331     01AF  3412               	retlw	18
   332     01B0  3470               	retlw	112
   333     01B1  3411               	retlw	17
   334     01B2  348A               	retlw	138
   335     01B3  3410               	retlw	16
   336     01B4  34B0               	retlw	176
   337     01B5  340F               	retlw	15
   338     01B6  34E4               	retlw	228
   339     01B7  340E               	retlw	14
   340     01B8  3424               	retlw	36
   341     01B9  340E               	retlw	14
   342     01BA  346E               	retlw	110
   343     01BB  340D               	retlw	13
   344     01BC  34C2               	retlw	194
   345     01BD  340C               	retlw	12
   346     01BE  3420               	retlw	32
   347     01BF  340C               	retlw	12
   348     01C0  3486               	retlw	134
   349     01C1  340B               	retlw	11
   350     01C2  34F6               	retlw	246
   351     01C3  340A               	retlw	10
   352     01C4  346C               	retlw	108
   353     01C5  340A               	retlw	10
   354     01C6  34EC               	retlw	236
   355     01C7  3409               	retlw	9
   356     01C8  3472               	retlw	114
   357     01C9  3409               	retlw	9
   358     01CA  34FE               	retlw	254
   359     01CB  3408               	retlw	8
   360     01CC  3490               	retlw	144
   361     01CD  3408               	retlw	8
   362     01CE  3428               	retlw	40
   363     01CF  3408               	retlw	8
   364     01D0  34C6               	retlw	198
   365     01D1  3407               	retlw	7
   366     01D2  3469               	retlw	105
   367     01D3  3407               	retlw	7
   368     01D4  3411               	retlw	17
   369     01D5  3407               	retlw	7
   370     01D6  34BE               	retlw	190
   371     01D7  3406               	retlw	6
   372     01D8  346E               	retlw	110
   373     01D9  3406               	retlw	6
   374     01DA  3423               	retlw	35
   375     01DB  3406               	retlw	6
   376     01DC  34DC               	retlw	220
   377     01DD  3405               	retlw	5
   378     01DE  3498               	retlw	152
   379     01DF  3405               	retlw	5
   380     01E0  3458               	retlw	88
   381     01E1  3405               	retlw	5
   382     01E2  341B               	retlw	27
   383     01E3  3405               	retlw	5
   384     01E4  34E1               	retlw	225
   385     01E5  3404               	retlw	4
   386     01E6  34AA               	retlw	170
   387     01E7  3404               	retlw	4
   388     01E8  3476               	retlw	118
   389     01E9  3404               	retlw	4
   390     01EA  3444               	retlw	68
   391     01EB  3404               	retlw	4
   392     01EC  3415               	retlw	21
   393     01ED  3404               	retlw	4
   394     01EE  34E8               	retlw	232
   395     01EF  3403               	retlw	3
   396     01F0  34BD               	retlw	189
   397     01F1  3403               	retlw	3
   398     01F2  3494               	retlw	148
   399     01F3  3403               	retlw	3
   400     01F4  346D               	retlw	109
   401     01F5  3403               	retlw	3
   402     01F6  3448               	retlw	72
   403     01F7  3403               	retlw	3
   404     01F8  3425               	retlw	37
   405     01F9  3403               	retlw	3
   406     01FA  3404               	retlw	4
   407     01FB  3403               	retlw	3
   408     01FC  34E4               	retlw	228
   409     01FD  3402               	retlw	2
   410     01FE  34C5               	retlw	197
   411     01FF  3402               	retlw	2
   412     0200  34A8               	retlw	168
   413     0201  3402               	retlw	2
   414     0202  348D               	retlw	141
   415     0203  3402               	retlw	2
   416     0204  3472               	retlw	114
   417     0205  3402               	retlw	2
   418     0206  3459               	retlw	89
   419     0207  3402               	retlw	2
   420     0208  3441               	retlw	65
   421     0209  3402               	retlw	2
   422     020A  342A               	retlw	42
   423     020B  3402               	retlw	2
   424     020C  3414               	retlw	20
   425     020D  3402               	retlw	2
   426     020E  34FF               	retlw	255
   427     020F  3401               	retlw	1
   428     0210  34EB               	retlw	235
   429     0211  3401               	retlw	1
   430     0212  34D8               	retlw	216
   431     0213  3401               	retlw	1
   432     0214  34C6               	retlw	198
   433     0215  3401               	retlw	1
   434     0216  34B4               	retlw	180
   435     0217  3401               	retlw	1
   436     0218  34A4               	retlw	164
   437     0219  3401               	retlw	1
   438     021A  3494               	retlw	148
   439     021B  3401               	retlw	1
   440     021C  3484               	retlw	132
   441     021D  3401               	retlw	1
   442     021E  3476               	retlw	118
   443     021F  3401               	retlw	1
   444     0220  3468               	retlw	104
   445     0221  3401               	retlw	1
   446     0222  345A               	retlw	90
   447     0223  3401               	retlw	1
   448     0224  344E               	retlw	78
   449     0225  3401               	retlw	1
   450     0226  3441               	retlw	65
   451     0227  3401               	retlw	1
   452     0228  3435               	retlw	53
   453     0229  3401               	retlw	1
   454     022A  342A               	retlw	42
   455     022B  3401               	retlw	1
   456     022C  341F               	retlw	31
   457     022D  3401               	retlw	1
   458     022E  3415               	retlw	21
   459     022F  3401               	retlw	1
   460     0230  340B               	retlw	11
   461     0231  3401               	retlw	1
   462     0232  3402               	retlw	2
   463     0233  3401               	retlw	1
   464     0234  34F8               	retlw	248
   465     0235  3400               	retlw	0
   466     0236                     __end_of_TABLE:
   467     000B                     _INTCONbits	set	11
   468     000C                     _PORTAbits	set	12
   469     001A                     _TMR2	set	26
   470     001B                     _PR2	set	27
   471     001C                     _T2CONbits	set	28
   472     0011                     _PIR1bits	set	17
   473     009E                     _ADCON1	set	158
   474     008C                     _TRISAbits	set	140
   475     0099                     _OSCCON	set	153
   476     0091                     _PIE1bits	set	145
   477     009B                     _ADRESL	set	155
   478     009C                     _ADRESH	set	156
   479     009D                     _ADCON0bits	set	157
   480     018C                     _ANSELAbits	set	396
   481     0611                     _PWM1DCL	set	1553
   482     0613                     _PWM1CONbits	set	1555
   483     0613                     _PWM1CON	set	1555
   484     0612                     _PWM1DCH	set	1554
   485                           
   486                           	psect	cinit
   487     00C2                     start_initialization:	
   488                           ; #config settings
   489                           
   490     00C2                     __initialization:
   491                           
   492                           ; Clear objects allocated to COMMON
   493     00C2  01F9               	clrf	__pbssCOMMON& (0+127)
   494     00C3  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   495                           
   496                           ; Clear objects allocated to BANK0
   497     00C4  0020               	movlb	0	; select bank0
   498     00C5  01C9               	clrf	__pbssBANK0& (0+127)
   499     00C6  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   500     00C7  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   501     00C8  01CC               	clrf	(__pbssBANK0+3)& (0+127)
   502     00C9                     end_of_initialization:	
   503                           ;End of C runtime variable initialization code
   504                           
   505     00C9                     __end_of__initialization:
   506     00C9  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   507     00CA  0020               	movlb	0
   508     00CB  28CC               	ljmp	_main	;jump to C main() function
   509                           
   510                           	psect	bssCOMMON
   511     0079                     __pbssCOMMON:
   512     0079                     _t:
   513     0079                     	ds	2
   514                           
   515                           	psect	bssBANK0
   516     0049                     __pbssBANK0:
   517     0049                     _Rt:
   518     0049                     	ds	4
   519                           
   520                           	psect	cstackCOMMON
   521     0070                     __pcstackCOMMON:
   522     0070                     ?_setup:
   523     0070                     ?_PWMinit:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ?_main:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ?_ISR:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ??_ISR:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           ; 1 bytes @ 0x0
   537     0070                     	ds	6
   538     0076                     ISR@v:
   539                           
   540                           ; 1 bytes @ 0x6
   541     0076                     	ds	1
   542     0077                     ISR@p:
   543                           
   544                           ; 1 bytes @ 0x7
   545     0077                     	ds	1
   546     0078                     ISR@i:
   547                           
   548                           ; 1 bytes @ 0x8
   549     0078                     	ds	1
   550                           
   551                           	psect	cstackBANK0
   552     0020                     __pcstackBANK0:
   553     0020                     ??_setup:
   554     0020                     ??_PWMinit:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0020                     ?_getADCValue:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0020                     ?___lwdiv:	
   561                           ; 2 bytes @ 0x0
   562                           
   563     0020                     ?___lmul:	
   564                           ; 2 bytes @ 0x0
   565                           
   566     0020                     ___lwdiv@divisor:	
   567                           ; 4 bytes @ 0x0
   568                           
   569     0020                     ___lmul@multiplier:	
   570                           ; 2 bytes @ 0x0
   571                           
   572                           
   573                           ; 4 bytes @ 0x0
   574     0020                     	ds	2
   575     0022                     ??_getADCValue:
   576     0022                     ___lwdiv@dividend:	
   577                           ; 1 bytes @ 0x2
   578                           
   579                           
   580                           ; 2 bytes @ 0x2
   581     0022                     	ds	2
   582     0024                     ??___lwdiv:
   583     0024                     ___lmul@multiplicand:	
   584                           ; 1 bytes @ 0x4
   585                           
   586                           
   587                           ; 4 bytes @ 0x4
   588     0024                     	ds	1
   589     0025                     ___lwdiv@quotient:
   590                           
   591                           ; 2 bytes @ 0x5
   592     0025                     	ds	2
   593     0027                     ___lwdiv@counter:
   594                           
   595                           ; 1 bytes @ 0x7
   596     0027                     	ds	1
   597     0028                     ??___lmul:
   598     0028                     ___lmul@product:	
   599                           ; 1 bytes @ 0x8
   600                           
   601                           
   602                           ; 4 bytes @ 0x8
   603     0028                     	ds	1
   604     0029                     getADCValue@channel:
   605                           
   606                           ; 1 bytes @ 0x9
   607     0029                     	ds	1
   608     002A                     ?_getADS:
   609                           
   610                           ; 2 bytes @ 0xA
   611     002A                     	ds	2
   612     002C                     ??_getADS:
   613     002C                     ?___lldiv:	
   614                           ; 1 bytes @ 0xC
   615                           
   616     002C                     ___lldiv@divisor:	
   617                           ; 4 bytes @ 0xC
   618                           
   619                           
   620                           ; 4 bytes @ 0xC
   621     002C                     	ds	2
   622     002E                     getADS@ac1:
   623                           
   624                           ; 2 bytes @ 0xE
   625     002E                     	ds	2
   626     0030                     getADS@ac2:
   627     0030                     ___lldiv@dividend:	
   628                           ; 2 bytes @ 0x10
   629                           
   630                           
   631                           ; 4 bytes @ 0x10
   632     0030                     	ds	2
   633     0032                     getADS@ac3:
   634                           
   635                           ; 2 bytes @ 0x12
   636     0032                     	ds	2
   637     0034                     ??___lldiv:
   638                           
   639                           ; 1 bytes @ 0x14
   640     0034                     	ds	1
   641     0035                     ___lldiv@quotient:
   642                           
   643                           ; 4 bytes @ 0x15
   644     0035                     	ds	4
   645     0039                     ___lldiv@counter:
   646                           
   647                           ; 1 bytes @ 0x19
   648     0039                     	ds	1
   649     003A                     ??_main:
   650                           
   651                           ; 1 bytes @ 0x1A
   652     003A                     	ds	4
   653     003E                     main@ad2:
   654                           
   655                           ; 2 bytes @ 0x1E
   656     003E                     	ds	2
   657     0040                     main@add:
   658                           
   659                           ; 1 bytes @ 0x20
   660     0040                     	ds	1
   661     0041                     main@VR:
   662                           
   663                           ; 4 bytes @ 0x21
   664     0041                     	ds	4
   665     0045                     main@ad1:
   666                           
   667                           ; 4 bytes @ 0x25
   668     0045                     	ds	4
   669                           
   670                           	psect	maintext
   671     00CC                     __pmaintext:	
   672 ;;
   673 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   674 ;;
   675 ;; *************** function _main *****************
   676 ;; Defined at:
   677 ;;		line 16 in file "main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  VR              4   33[BANK0 ] unsigned long 
   682 ;;  ad1             4   37[BANK0 ] unsigned long 
   683 ;;  ad2             2   30[BANK0 ] unsigned int 
   684 ;;  add             1   32[BANK0 ] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, pclath, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : B1F/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0
   694 ;;      Params:         0       0
   695 ;;      Locals:         0      11
   696 ;;      Temps:          0       4
   697 ;;      Totals:         0      15
   698 ;;Total ram usage:       15 bytes
   699 ;; Hardware stack levels required when called: 3
   700 ;; This function calls:
   701 ;;		_PWMinit
   702 ;;		___lldiv
   703 ;;		___lmul
   704 ;;		___lwdiv
   705 ;;		_getADCValue
   706 ;;		_getADS
   707 ;;		_setup
   708 ;; This function is called by:
   709 ;;		Startup code after reset
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713     00CC                     _main:	
   714                           ;psect for function _main
   715                           
   716     00CC                     l989:	
   717                           ;incstack = 0
   718                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   719                           
   720                           
   721                           ;main.c: 18:     char add = 0;
   722     00CC  0020               	movlb	0	; select bank0
   723     00CD  01C0               	clrf	main@add
   724     00CE                     l991:
   725                           
   726                           ;main.c: 19:     unsigned long ad1;;main.c: 20:     unsigned int ad2;;main.c: 21:     se
      +                          tup();
   727     00CE  3183  239A  3180   	fcall	_setup
   728     00D1                     l993:
   729                           
   730                           ;main.c: 22:     PWMinit();
   731     00D1  3183  237E  3180   	fcall	_PWMinit
   732     00D4                     l995:
   733                           
   734                           ;main.c: 23:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   735     00D4  3015               	movlw	21
   736     00D5  0020               	movlb	0	; select bank0
   737     00D6  00BB               	movwf	??_main+1
   738     00D7  304B               	movlw	75
   739     00D8  00BA               	movwf	??_main
   740     00D9  30BE               	movlw	190
   741     00DA                     u697:
   742     00DA  0B89               	decfsz	9,f
   743     00DB  28DA               	goto	u697
   744     00DC  0BBA               	decfsz	??_main,f
   745     00DD  28DA               	goto	u697
   746     00DE  0BBB               	decfsz	??_main+1,f
   747     00DF  28DA               	goto	u697
   748     00E0  0000               	nop
   749     00E1                     l997:
   750                           
   751                           ;main.c: 26:     {;main.c: 27:         if(add == 3)
   752     00E1  3003               	movlw	3
   753     00E2  0020               	movlb	0	; select bank0
   754     00E3  0640               	xorwf	main@add,w
   755     00E4  1D03               	btfss	3,2
   756     00E5  28E7               	goto	u551
   757     00E6  28E8               	goto	u550
   758     00E7                     u551:
   759     00E7  2978               	goto	l1009
   760     00E8                     u550:
   761     00E8                     l999:
   762                           
   763                           ;main.c: 28:         {;main.c: 29:             unsigned long VR;;main.c: 30:            
      +                           ad1 = getADCValue(0x00);
   764     00E8  3000               	movlw	0
   765     00E9  3183  230F  3180   	fcall	_getADCValue
   766     00EC  0020               	movlb	0	; select bank0
   767     00ED  0820               	movf	?_getADCValue,w
   768     00EE  00C5               	movwf	main@ad1
   769     00EF  0821               	movf	?_getADCValue+1,w
   770     00F0  00C6               	movwf	main@ad1+1
   771     00F1  01C7               	clrf	main@ad1+2
   772     00F2  01C8               	clrf	main@ad1+3
   773     00F3                     l1001:
   774                           
   775                           ;main.c: 31:             ad1 = 1024 - ad1;
   776     00F3  3000               	movlw	0
   777     00F4  00BA               	movwf	??_main
   778     00F5  3004               	movlw	4
   779     00F6  00BB               	movwf	??_main+1
   780     00F7  3000               	movlw	0
   781     00F8  00BC               	movwf	??_main+2
   782     00F9  3000               	movlw	0
   783     00FA  00BD               	movwf	??_main+3
   784     00FB  0845               	movf	main@ad1,w
   785     00FC  02BA               	subwf	??_main,f
   786     00FD  0846               	movf	main@ad1+1,w
   787     00FE  3BBB               	subwfb	??_main+1,f
   788     00FF  0847               	movf	main@ad1+2,w
   789     0100  3BBC               	subwfb	??_main+2,f
   790     0101  0848               	movf	main@ad1+3,w
   791     0102  3BBD               	subwfb	??_main+3,f
   792     0103  083D               	movf	??_main+3,w
   793     0104  00C8               	movwf	main@ad1+3
   794     0105  083C               	movf	??_main+2,w
   795     0106  00C7               	movwf	main@ad1+2
   796     0107  083B               	movf	??_main+1,w
   797     0108  00C6               	movwf	main@ad1+1
   798     0109  083A               	movf	??_main,w
   799     010A  00C5               	movwf	main@ad1
   800     010B                     l1003:
   801                           
   802                           ;main.c: 32:             VR = ad1 * 500 / 1024;
   803     010B  0848               	movf	main@ad1+3,w
   804     010C  00A3               	movwf	___lmul@multiplier+3
   805     010D  0847               	movf	main@ad1+2,w
   806     010E  00A2               	movwf	___lmul@multiplier+2
   807     010F  0846               	movf	main@ad1+1,w
   808     0110  00A1               	movwf	___lmul@multiplier+1
   809     0111  0845               	movf	main@ad1,w
   810     0112  00A0               	movwf	___lmul@multiplier
   811     0113  3000               	movlw	0
   812     0114  00A7               	movwf	___lmul@multiplicand+3
   813     0115  3000               	movlw	0
   814     0116  00A6               	movwf	___lmul@multiplicand+2
   815     0117  3001               	movlw	1
   816     0118  00A5               	movwf	___lmul@multiplicand+1
   817     0119  30F4               	movlw	244
   818     011A  00A4               	movwf	___lmul@multiplicand
   819     011B  3183  234A  3180   	fcall	___lmul
   820     011E  0020               	movlb	0	; select bank0
   821     011F  0820               	movf	?___lmul,w
   822     0120  00BA               	movwf	??_main
   823     0121  0821               	movf	?___lmul+1,w
   824     0122  00BB               	movwf	??_main+1
   825     0123  0822               	movf	?___lmul+2,w
   826     0124  00BC               	movwf	??_main+2
   827     0125  0823               	movf	?___lmul+3,w
   828     0126  00BD               	movwf	??_main+3
   829     0127  300A               	movlw	10
   830     0128                     u565:
   831     0128  36BD               	lsrf	??_main+3,f
   832     0129  0CBC               	rrf	??_main+2,f
   833     012A  0CBB               	rrf	??_main+1,f
   834     012B  0CBA               	rrf	??_main,f
   835     012C                     u560:
   836     012C  0B89               	decfsz	9,f
   837     012D  2928               	goto	u565
   838     012E  083D               	movf	??_main+3,w
   839     012F  00C4               	movwf	main@VR+3
   840     0130  083C               	movf	??_main+2,w
   841     0131  00C3               	movwf	main@VR+2
   842     0132  083B               	movf	??_main+1,w
   843     0133  00C2               	movwf	main@VR+1
   844     0134  083A               	movf	??_main,w
   845     0135  00C1               	movwf	main@VR
   846     0136                     l1005:
   847                           
   848                           ;main.c: 33:             Rt = (unsigned long)(500 - VR) * 1000 / VR;
   849     0136  0844               	movf	main@VR+3,w
   850     0137  00AF               	movwf	___lldiv@divisor+3
   851     0138  0843               	movf	main@VR+2,w
   852     0139  00AE               	movwf	___lldiv@divisor+2
   853     013A  0842               	movf	main@VR+1,w
   854     013B  00AD               	movwf	___lldiv@divisor+1
   855     013C  0841               	movf	main@VR,w
   856     013D  00AC               	movwf	___lldiv@divisor
   857     013E  30F4               	movlw	244
   858     013F  00BA               	movwf	??_main
   859     0140  3001               	movlw	1
   860     0141  00BB               	movwf	??_main+1
   861     0142  3000               	movlw	0
   862     0143  00BC               	movwf	??_main+2
   863     0144  3000               	movlw	0
   864     0145  00BD               	movwf	??_main+3
   865     0146  0841               	movf	main@VR,w
   866     0147  02BA               	subwf	??_main,f
   867     0148  0842               	movf	main@VR+1,w
   868     0149  3BBB               	subwfb	??_main+1,f
   869     014A  0843               	movf	main@VR+2,w
   870     014B  3BBC               	subwfb	??_main+2,f
   871     014C  0844               	movf	main@VR+3,w
   872     014D  3BBD               	subwfb	??_main+3,f
   873     014E  083D               	movf	??_main+3,w
   874     014F  00A3               	movwf	___lmul@multiplier+3
   875     0150  083C               	movf	??_main+2,w
   876     0151  00A2               	movwf	___lmul@multiplier+2
   877     0152  083B               	movf	??_main+1,w
   878     0153  00A1               	movwf	___lmul@multiplier+1
   879     0154  083A               	movf	??_main,w
   880     0155  00A0               	movwf	___lmul@multiplier
   881     0156  3000               	movlw	0
   882     0157  00A7               	movwf	___lmul@multiplicand+3
   883     0158  3000               	movlw	0
   884     0159  00A6               	movwf	___lmul@multiplicand+2
   885     015A  3003               	movlw	3
   886     015B  00A5               	movwf	___lmul@multiplicand+1
   887     015C  30E8               	movlw	232
   888     015D  00A4               	movwf	___lmul@multiplicand
   889     015E  3183  234A  3180   	fcall	___lmul
   890     0161  0020               	movlb	0	; select bank0
   891     0162  0823               	movf	?___lmul+3,w
   892     0163  00B3               	movwf	___lldiv@dividend+3
   893     0164  0822               	movf	?___lmul+2,w
   894     0165  00B2               	movwf	___lldiv@dividend+2
   895     0166  0821               	movf	?___lmul+1,w
   896     0167  00B1               	movwf	___lldiv@dividend+1
   897     0168  0820               	movf	?___lmul,w
   898     0169  00B0               	movwf	___lldiv@dividend
   899     016A  3182  2236  3180   	fcall	___lldiv
   900     016D  0020               	movlb	0	; select bank0
   901     016E  082F               	movf	?___lldiv+3,w
   902     016F  00CC               	movwf	_Rt+3
   903     0170  082E               	movf	?___lldiv+2,w
   904     0171  00CB               	movwf	_Rt+2
   905     0172  082D               	movf	?___lldiv+1,w
   906     0173  00CA               	movwf	_Rt+1
   907     0174  082C               	movf	?___lldiv,w
   908     0175  00C9               	movwf	_Rt
   909     0176                     l1007:
   910                           
   911                           ;main.c: 34:             add = 0;
   912     0176  01C0               	clrf	main@add
   913                           
   914                           ;main.c: 35:         }
   915     0177  28E1               	goto	l997
   916     0178                     l1009:
   917                           
   918                           ;main.c: 37:         {;main.c: 38:             ad2 = getADS();
   919     0178  3182  2291  3180   	fcall	_getADS
   920     017B  0020               	movlb	0	; select bank0
   921     017C  082B               	movf	?_getADS+1,w
   922     017D  00BF               	movwf	main@ad2+1
   923     017E  082A               	movf	?_getADS,w
   924     017F  00BE               	movwf	main@ad2
   925                           
   926                           ;main.c: 40:             t = (int)(ad2 / 12);
   927     0180  300C               	movlw	12
   928     0181  00A0               	movwf	___lwdiv@divisor
   929     0182  3000               	movlw	0
   930     0183  00A1               	movwf	___lwdiv@divisor+1
   931     0184  083F               	movf	main@ad2+1,w
   932     0185  00A3               	movwf	___lwdiv@dividend+1
   933     0186  083E               	movf	main@ad2,w
   934     0187  00A2               	movwf	___lwdiv@dividend
   935     0188  3182  22D2  3180   	fcall	___lwdiv
   936     018B  0020               	movlb	0	; select bank0
   937     018C  0821               	movf	?___lwdiv+1,w
   938     018D  00FA               	movwf	_t+1
   939     018E  0820               	movf	?___lwdiv,w
   940     018F  00F9               	movwf	_t
   941     0190                     l1011:
   942                           
   943                           ;main.c: 41:             add++;
   944     0190  3001               	movlw	1
   945     0191  00BA               	movwf	??_main
   946     0192  083A               	movf	??_main,w
   947     0193  07C0               	addwf	main@add,f
   948     0194  28E1               	goto	l997
   949     0195  28C1               	ljmp	start
   950     0196                     __end_of_main:
   951                           
   952                           	psect	text1
   953     039A                     __ptext1:	
   954 ;; *************** function _setup *****************
   955 ;; Defined at:
   956 ;;		line 5 in file "KF1.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0
   970 ;;      Params:         0       0
   971 ;;      Locals:         0       0
   972 ;;      Temps:          0       0
   973 ;;      Totals:         0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984     039A                     _setup:	
   985                           ;psect for function _setup
   986                           
   987     039A                     l891:	
   988                           ;incstack = 0
   989                           ; Regs used in _setup: [wreg]
   990                           
   991                           
   992                           ;KF1.c: 7:     OSCCON = 0b01110000;
   993     039A  3070               	movlw	112
   994     039B  0021               	movlb	1	; select bank1
   995     039C  0099               	movwf	25	;volatile
   996     039D                     l893:
   997                           
   998                           ;KF1.c: 10:     PORTAbits.RA1 = 0;
   999     039D  0020               	movlb	0	; select bank0
  1000     039E  108C               	bcf	12,1	;volatile
  1001     039F                     l895:
  1002                           
  1003                           ;KF1.c: 11:     TRISAbits.TRISA1 = 0;
  1004     039F  0021               	movlb	1	; select bank1
  1005     03A0  108C               	bcf	12,1	;volatile
  1006     03A1                     l897:
  1007                           
  1008                           ;KF1.c: 14:     ANSELAbits.ANSA0 = 1;
  1009     03A1  0023               	movlb	3	; select bank3
  1010     03A2  140C               	bsf	12,0	;volatile
  1011     03A3                     l899:
  1012                           
  1013                           ;KF1.c: 15:     ANSELAbits.ANSA4 = 1;
  1014     03A3  160C               	bsf	12,4	;volatile
  1015                           
  1016                           ;KF1.c: 18:     ADCON1 = 0x50;
  1017     03A4  3050               	movlw	80
  1018     03A5  0021               	movlb	1	; select bank1
  1019     03A6  009E               	movwf	30	;volatile
  1020     03A7                     l901:
  1021                           
  1022                           ;KF1.c: 19:     PIE1bits.ADIE = 1;
  1023     03A7  1711               	bsf	17,6	;volatile
  1024     03A8                     l903:
  1025                           
  1026                           ;KF1.c: 20:     PIR1bits.ADIF = 0;
  1027     03A8  0020               	movlb	0	; select bank0
  1028     03A9  1311               	bcf	17,6	;volatile
  1029     03AA                     l905:
  1030                           
  1031                           ;KF1.c: 21:     ADCON0bits.GO = 0;
  1032     03AA  0021               	movlb	1	; select bank1
  1033     03AB  109D               	bcf	29,1	;volatile
  1034     03AC                     l907:
  1035                           
  1036                           ;KF1.c: 22:     ADCON0bits.ADON = 1;
  1037     03AC  141D               	bsf	29,0	;volatile
  1038     03AD                     l110:
  1039     03AD  0008               	return
  1040     03AE                     __end_of_setup:
  1041                           
  1042                           	psect	text2
  1043     0291                     __ptext2:	
  1044 ;; *************** function _getADS *****************
  1045 ;; Defined at:
  1046 ;;		line 55 in file "main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  ac3             2   18[BANK0 ] unsigned int 
  1051 ;;  ac2             2   16[BANK0 ] unsigned int 
  1052 ;;  ac1             2   14[BANK0 ] unsigned int 
  1053 ;;  acd             2    0        unsigned int 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  2   10[BANK0 ] unsigned int 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, pclath, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0
  1063 ;;      Params:         0       2
  1064 ;;      Locals:         0       6
  1065 ;;      Temps:          0       2
  1066 ;;      Totals:         0      10
  1067 ;;Total ram usage:       10 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 2
  1070 ;; This function calls:
  1071 ;;		___lwdiv
  1072 ;;		_getADCValue
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078     0291                     _getADS:	
  1079                           ;psect for function _getADS
  1080                           
  1081     0291                     l939:	
  1082                           ;incstack = 0
  1083                           ; Regs used in _getADS: [wreg+status,2+status,0+pclath+cstack]
  1084                           
  1085                           
  1086                           ;main.c: 57:     unsigned int ac1, ac2, ac3, acd;;main.c: 58:     ac1 = getADCValue(0x03
      +                          );
  1087     0291  3003               	movlw	3
  1088     0292  3183  230F  3182   	fcall	_getADCValue
  1089     0295  0020               	movlb	0	; select bank0
  1090     0296  0821               	movf	?_getADCValue+1,w
  1091     0297  00AF               	movwf	getADS@ac1+1
  1092     0298  0820               	movf	?_getADCValue,w
  1093     0299  00AE               	movwf	getADS@ac1
  1094     029A                     l941:
  1095                           
  1096                           ;main.c: 59:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1097     029A  3003               	movlw	3
  1098     029B                     u707:
  1099     029B  0B89               	decfsz	9,f
  1100     029C  2A9B               	goto	u707
  1101     029D  0000               	nop
  1102     029E                     l943:
  1103                           
  1104                           ;main.c: 60:     ac2 = getADCValue(0x03);
  1105     029E  3003               	movlw	3
  1106     029F  3183  230F  3182   	fcall	_getADCValue
  1107     02A2  0020               	movlb	0	; select bank0
  1108     02A3  0821               	movf	?_getADCValue+1,w
  1109     02A4  00B1               	movwf	getADS@ac2+1
  1110     02A5  0820               	movf	?_getADCValue,w
  1111     02A6  00B0               	movwf	getADS@ac2
  1112                           
  1113                           ;main.c: 61:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1114     02A7  3003               	movlw	3
  1115     02A8                     u717:
  1116     02A8  0B89               	decfsz	9,f
  1117     02A9  2AA8               	goto	u717
  1118     02AA  0000               	nop
  1119     02AB                     l945:
  1120                           
  1121                           ;main.c: 62:     ac3 = getADCValue(0x03);
  1122     02AB  3003               	movlw	3
  1123     02AC  3183  230F  3182   	fcall	_getADCValue
  1124     02AF  0020               	movlb	0	; select bank0
  1125     02B0  0821               	movf	?_getADCValue+1,w
  1126     02B1  00B3               	movwf	getADS@ac3+1
  1127     02B2  0820               	movf	?_getADCValue,w
  1128     02B3  00B2               	movwf	getADS@ac3
  1129     02B4                     l947:
  1130                           
  1131                           ;main.c: 63:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1132     02B4  3003               	movlw	3
  1133     02B5                     u727:
  1134     02B5  0B89               	decfsz	9,f
  1135     02B6  2AB5               	goto	u727
  1136     02B7  0000               	nop
  1137                           
  1138                           ;main.c: 64:     return ((ac1 + ac2 + ac3) / 3);
  1139     02B8  3003               	movlw	3
  1140     02B9  0020               	movlb	0	; select bank0
  1141     02BA  00A0               	movwf	___lwdiv@divisor
  1142     02BB  3000               	movlw	0
  1143     02BC  00A1               	movwf	___lwdiv@divisor+1
  1144     02BD  0830               	movf	getADS@ac2,w
  1145     02BE  072E               	addwf	getADS@ac1,w
  1146     02BF  00AC               	movwf	??_getADS
  1147     02C0  0831               	movf	getADS@ac2+1,w
  1148     02C1  3D2F               	addwfc	getADS@ac1+1,w
  1149     02C2  00AD               	movwf	??_getADS+1
  1150     02C3  0832               	movf	getADS@ac3,w
  1151     02C4  072C               	addwf	??_getADS,w
  1152     02C5  00A2               	movwf	___lwdiv@dividend
  1153     02C6  0833               	movf	getADS@ac3+1,w
  1154     02C7  3D2D               	addwfc	??_getADS+1,w
  1155     02C8  00A3               	movwf	___lwdiv@dividend+1
  1156     02C9  3182  22D2  3182   	fcall	___lwdiv
  1157     02CC  0020               	movlb	0	; select bank0
  1158     02CD  0821               	movf	?___lwdiv+1,w
  1159     02CE  00AB               	movwf	?_getADS+1
  1160     02CF  0820               	movf	?___lwdiv,w
  1161     02D0  00AA               	movwf	?_getADS
  1162     02D1                     l55:
  1163     02D1  0008               	return
  1164     02D2                     __end_of_getADS:
  1165                           
  1166                           	psect	text3
  1167     030F                     __ptext3:	
  1168 ;; *************** function _getADCValue *****************
  1169 ;; Defined at:
  1170 ;;		line 46 in file "main.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  channel         1    wreg     unsigned char 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  channel         1    9[BANK0 ] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  2    0[BANK0 ] unsigned int 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0
  1184 ;;      Params:         0       2
  1185 ;;      Locals:         0       1
  1186 ;;      Temps:          0       7
  1187 ;;      Totals:         0      10
  1188 ;;Total ram usage:       10 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;;		_getADS
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199     030F                     _getADCValue:	
  1200                           ;psect for function _getADCValue
  1201                           
  1202                           
  1203                           ;incstack = 0
  1204                           ; Regs used in _getADCValue: [wreg+status,2+status,0]
  1205                           ;getADCValue@channel stored from wreg
  1206     030F  0020               	movlb	0	; select bank0
  1207     0310  00A9               	movwf	getADCValue@channel
  1208     0311                     l855:
  1209                           
  1210                           ;main.c: 46: unsigned int getADCValue(unsigned char channel);main.c: 47: {;main.c: 48:  
      +                             ADCON0bits.CHS = channel;
  1211     0311  0829               	movf	getADCValue@channel,w
  1212     0312  00A2               	movwf	??_getADCValue
  1213     0313  0DA2               	rlf	??_getADCValue,f
  1214     0314  0DA2               	rlf	??_getADCValue,f
  1215     0315  0021               	movlb	1	; select bank1
  1216     0316  081D               	movf	29,w	;volatile
  1217     0317  0020               	movlb	0	; select bank0
  1218     0318  0622               	xorwf	??_getADCValue,w
  1219     0319  3983               	andlw	-125
  1220     031A  0622               	xorwf	??_getADCValue,w
  1221     031B  0021               	movlb	1	; select bank1
  1222     031C  009D               	movwf	29	;volatile
  1223     031D                     l857:
  1224                           
  1225                           ;main.c: 49:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1226     031D  300D               	movlw	13
  1227     031E  0020               	movlb	0	; select bank0
  1228     031F  00A2               	movwf	??_getADCValue
  1229     0320  30FB               	movlw	251
  1230     0321                     u737:
  1231     0321  0B89               	decfsz	9,f
  1232     0322  2B21               	goto	u737
  1233     0323  0BA2               	decfsz	??_getADCValue,f
  1234     0324  2B21               	goto	u737
  1235     0325  3200               	nop2
  1236     0326                     l859:
  1237                           
  1238                           ;main.c: 50:     ADCON0bits.GO = 1;
  1239     0326  0021               	movlb	1	; select bank1
  1240     0327  149D               	bsf	29,1	;volatile
  1241     0328                     l49:	
  1242                           ;main.c: 51:     while (ADCON0bits.GO);
  1243                           
  1244     0328  189D               	btfsc	29,1	;volatile
  1245     0329  2B2B               	goto	u351
  1246     032A  2B2C               	goto	u350
  1247     032B                     u351:
  1248     032B  2B28               	goto	l49
  1249     032C                     u350:
  1250     032C                     l861:
  1251                           
  1252                           ;main.c: 52:     return (unsigned int)((ADRESH << 2) | (ADRESL >> 6));
  1253     032C  081B               	movf	27,w	;volatile
  1254     032D  0020               	movlb	0	; select bank0
  1255     032E  00A2               	movwf	??_getADCValue
  1256     032F  3006               	movlw	6
  1257     0330                     u365:
  1258     0330  36A2               	lsrf	??_getADCValue,f
  1259     0331  0B89               	decfsz	9,f
  1260     0332  2B30               	goto	u365
  1261     0333  0822               	movf	??_getADCValue,w
  1262     0334  00A3               	movwf	??_getADCValue+1
  1263     0335  01A4               	clrf	??_getADCValue+2
  1264     0336  0021               	movlb	1	; select bank1
  1265     0337  081C               	movf	28,w	;volatile
  1266     0338  0020               	movlb	0	; select bank0
  1267     0339  00A5               	movwf	??_getADCValue+3
  1268     033A  01A6               	clrf	??_getADCValue+4
  1269     033B  35A5               	lslf	??_getADCValue+3,f
  1270     033C  0DA6               	rlf	??_getADCValue+4,f
  1271     033D  35A5               	lslf	??_getADCValue+3,f
  1272     033E  0DA6               	rlf	??_getADCValue+4,f
  1273     033F  0823               	movf	??_getADCValue+1,w
  1274     0340  0425               	iorwf	??_getADCValue+3,w
  1275     0341  00A7               	movwf	??_getADCValue+5
  1276     0342  0824               	movf	??_getADCValue+2,w
  1277     0343  0426               	iorwf	??_getADCValue+4,w
  1278     0344  00A8               	movwf	??_getADCValue+6
  1279     0345  0827               	movf	??_getADCValue+5,w
  1280     0346  00A0               	movwf	?_getADCValue
  1281     0347  0828               	movf	??_getADCValue+6,w
  1282     0348  00A1               	movwf	?_getADCValue+1
  1283     0349                     l52:
  1284     0349  0008               	return
  1285     034A                     __end_of_getADCValue:
  1286                           
  1287                           	psect	text4
  1288     02D2                     __ptext4:	
  1289 ;; *************** function ___lwdiv *****************
  1290 ;; Defined at:
  1291 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\lwdiv.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  divisor         2    0[BANK0 ] unsigned int 
  1294 ;;  dividend        2    2[BANK0 ] unsigned int 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  quotient        2    5[BANK0 ] unsigned int 
  1297 ;;  counter         1    7[BANK0 ] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  2    0[BANK0 ] unsigned int 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0
  1307 ;;      Params:         0       4
  1308 ;;      Locals:         0       3
  1309 ;;      Temps:          0       1
  1310 ;;      Totals:         0       8
  1311 ;;Total ram usage:        8 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;;		_getADS
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322     02D2                     ___lwdiv:	
  1323                           ;psect for function ___lwdiv
  1324                           
  1325     02D2                     l865:	
  1326                           ;incstack = 0
  1327                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1328                           
  1329     02D2  0020               	movlb	0	; select bank0
  1330     02D3  01A5               	clrf	___lwdiv@quotient
  1331     02D4  01A6               	clrf	___lwdiv@quotient+1
  1332     02D5                     l867:
  1333     02D5  0820               	movf	___lwdiv@divisor,w
  1334     02D6  0421               	iorwf	___lwdiv@divisor+1,w
  1335     02D7  1903               	btfsc	3,2
  1336     02D8  2ADA               	goto	u371
  1337     02D9  2ADB               	goto	u370
  1338     02DA                     u371:
  1339     02DA  2B0A               	goto	l887
  1340     02DB                     u370:
  1341     02DB                     l869:
  1342     02DB  01A7               	clrf	___lwdiv@counter
  1343     02DC  0AA7               	incf	___lwdiv@counter,f
  1344     02DD  2AE7               	goto	l875
  1345     02DE                     l871:
  1346     02DE  3001               	movlw	1
  1347     02DF                     u385:
  1348     02DF  35A0               	lslf	___lwdiv@divisor,f
  1349     02E0  0DA1               	rlf	___lwdiv@divisor+1,f
  1350     02E1  0B89               	decfsz	9,f
  1351     02E2  2ADF               	goto	u385
  1352     02E3                     l873:
  1353     02E3  3001               	movlw	1
  1354     02E4  00A4               	movwf	??___lwdiv
  1355     02E5  0824               	movf	??___lwdiv,w
  1356     02E6  07A7               	addwf	___lwdiv@counter,f
  1357     02E7                     l875:
  1358     02E7  1FA1               	btfss	___lwdiv@divisor+1,7
  1359     02E8  2AEA               	goto	u391
  1360     02E9  2AEB               	goto	u390
  1361     02EA                     u391:
  1362     02EA  2ADE               	goto	l871
  1363     02EB                     u390:
  1364     02EB                     l877:
  1365     02EB  3001               	movlw	1
  1366     02EC                     u405:
  1367     02EC  35A5               	lslf	___lwdiv@quotient,f
  1368     02ED  0DA6               	rlf	___lwdiv@quotient+1,f
  1369     02EE  0B89               	decfsz	9,f
  1370     02EF  2AEC               	goto	u405
  1371     02F0  0821               	movf	___lwdiv@divisor+1,w
  1372     02F1  0223               	subwf	___lwdiv@dividend+1,w
  1373     02F2  1D03               	skipz
  1374     02F3  2AF6               	goto	u415
  1375     02F4  0820               	movf	___lwdiv@divisor,w
  1376     02F5  0222               	subwf	___lwdiv@dividend,w
  1377     02F6                     u415:
  1378     02F6  1C03               	skipc
  1379     02F7  2AF9               	goto	u411
  1380     02F8  2AFA               	goto	u410
  1381     02F9                     u411:
  1382     02F9  2AFF               	goto	l883
  1383     02FA                     u410:
  1384     02FA                     l879:
  1385     02FA  0820               	movf	___lwdiv@divisor,w
  1386     02FB  02A2               	subwf	___lwdiv@dividend,f
  1387     02FC  0821               	movf	___lwdiv@divisor+1,w
  1388     02FD  3BA3               	subwfb	___lwdiv@dividend+1,f
  1389     02FE                     l881:
  1390     02FE  1425               	bsf	___lwdiv@quotient,0
  1391     02FF                     l883:
  1392     02FF  3001               	movlw	1
  1393     0300                     u425:
  1394     0300  36A1               	lsrf	___lwdiv@divisor+1,f
  1395     0301  0CA0               	rrf	___lwdiv@divisor,f
  1396     0302  0B89               	decfsz	9,f
  1397     0303  2B00               	goto	u425
  1398     0304                     l885:
  1399     0304  3001               	movlw	1
  1400     0305  02A7               	subwf	___lwdiv@counter,f
  1401     0306  1D03               	btfss	3,2
  1402     0307  2B09               	goto	u431
  1403     0308  2B0A               	goto	u430
  1404     0309                     u431:
  1405     0309  2AEB               	goto	l877
  1406     030A                     u430:
  1407     030A                     l887:
  1408     030A  0826               	movf	___lwdiv@quotient+1,w
  1409     030B  00A1               	movwf	?___lwdiv+1
  1410     030C  0825               	movf	___lwdiv@quotient,w
  1411     030D  00A0               	movwf	?___lwdiv
  1412     030E                     l461:
  1413     030E  0008               	return
  1414     030F                     __end_of___lwdiv:
  1415                           
  1416                           	psect	text5
  1417     034A                     __ptext5:	
  1418 ;; *************** function ___lmul *****************
  1419 ;; Defined at:
  1420 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul32.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1423 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  product         4    8[BANK0 ] unsigned long 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  4    0[BANK0 ] unsigned long 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0
  1435 ;;      Params:         0       8
  1436 ;;      Locals:         0       4
  1437 ;;      Temps:          0       0
  1438 ;;      Totals:         0      12
  1439 ;;Total ram usage:       12 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_main
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449     034A                     ___lmul:	
  1450                           ;psect for function ___lmul
  1451                           
  1452     034A                     l951:	
  1453                           ;incstack = 0
  1454                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1455                           
  1456     034A  3000               	movlw	0
  1457     034B  0020               	movlb	0	; select bank0
  1458     034C  00AB               	movwf	___lmul@product+3
  1459     034D  3000               	movlw	0
  1460     034E  00AA               	movwf	___lmul@product+2
  1461     034F  3000               	movlw	0
  1462     0350  00A9               	movwf	___lmul@product+1
  1463     0351  3000               	movlw	0
  1464     0352  00A8               	movwf	___lmul@product
  1465     0353                     l953:
  1466     0353  1C20               	btfss	___lmul@multiplier,0
  1467     0354  2B56               	goto	u441
  1468     0355  2B57               	goto	u440
  1469     0356                     u441:
  1470     0356  2B5F               	goto	l957
  1471     0357                     u440:
  1472     0357                     l955:
  1473     0357  0824               	movf	___lmul@multiplicand,w
  1474     0358  07A8               	addwf	___lmul@product,f
  1475     0359  0825               	movf	___lmul@multiplicand+1,w
  1476     035A  3DA9               	addwfc	___lmul@product+1,f
  1477     035B  0826               	movf	___lmul@multiplicand+2,w
  1478     035C  3DAA               	addwfc	___lmul@product+2,f
  1479     035D  0827               	movf	___lmul@multiplicand+3,w
  1480     035E  3DAB               	addwfc	___lmul@product+3,f
  1481     035F                     l957:
  1482     035F  3001               	movlw	1
  1483     0360                     u455:
  1484     0360  35A4               	lslf	___lmul@multiplicand,f
  1485     0361  0DA5               	rlf	___lmul@multiplicand+1,f
  1486     0362  0DA6               	rlf	___lmul@multiplicand+2,f
  1487     0363  0DA7               	rlf	___lmul@multiplicand+3,f
  1488     0364  0B89               	decfsz	9,f
  1489     0365  2B60               	goto	u455
  1490     0366                     l959:
  1491     0366  3001               	movlw	1
  1492     0367                     u465:
  1493     0367  36A3               	lsrf	___lmul@multiplier+3,f
  1494     0368  0CA2               	rrf	___lmul@multiplier+2,f
  1495     0369  0CA1               	rrf	___lmul@multiplier+1,f
  1496     036A  0CA0               	rrf	___lmul@multiplier,f
  1497     036B  0B89               	decfsz	9,f
  1498     036C  2B67               	goto	u465
  1499     036D  0823               	movf	___lmul@multiplier+3,w
  1500     036E  0422               	iorwf	___lmul@multiplier+2,w
  1501     036F  0421               	iorwf	___lmul@multiplier+1,w
  1502     0370  0420               	iorwf	___lmul@multiplier,w
  1503     0371  1D03               	skipz
  1504     0372  2B74               	goto	u471
  1505     0373  2B75               	goto	u470
  1506     0374                     u471:
  1507     0374  2B53               	goto	l953
  1508     0375                     u470:
  1509     0375                     l961:
  1510     0375  082B               	movf	___lmul@product+3,w
  1511     0376  00A3               	movwf	?___lmul+3
  1512     0377  082A               	movf	___lmul@product+2,w
  1513     0378  00A2               	movwf	?___lmul+2
  1514     0379  0829               	movf	___lmul@product+1,w
  1515     037A  00A1               	movwf	?___lmul+1
  1516     037B  0828               	movf	___lmul@product,w
  1517     037C  00A0               	movwf	?___lmul
  1518     037D                     l195:
  1519     037D  0008               	return
  1520     037E                     __end_of___lmul:
  1521                           
  1522                           	psect	text6
  1523     0236                     __ptext6:	
  1524 ;; *************** function ___lldiv *****************
  1525 ;; Defined at:
  1526 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\__lldiv.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  divisor         4   12[BANK0 ] unsigned long 
  1529 ;;  dividend        4   16[BANK0 ] unsigned long 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  quotient        4   21[BANK0 ] unsigned long 
  1532 ;;  counter         1   25[BANK0 ] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  4   12[BANK0 ] unsigned long 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0
  1542 ;;      Params:         0       8
  1543 ;;      Locals:         0       5
  1544 ;;      Temps:          0       1
  1545 ;;      Totals:         0      14
  1546 ;;Total ram usage:       14 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 1
  1549 ;; This function calls:
  1550 ;;		Nothing
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556     0236                     ___lldiv:	
  1557                           ;psect for function ___lldiv
  1558                           
  1559     0236                     l965:	
  1560                           ;incstack = 0
  1561                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1562                           
  1563     0236  3000               	movlw	0
  1564     0237  0020               	movlb	0	; select bank0
  1565     0238  00B8               	movwf	___lldiv@quotient+3
  1566     0239  3000               	movlw	0
  1567     023A  00B7               	movwf	___lldiv@quotient+2
  1568     023B  3000               	movlw	0
  1569     023C  00B6               	movwf	___lldiv@quotient+1
  1570     023D  3000               	movlw	0
  1571     023E  00B5               	movwf	___lldiv@quotient
  1572     023F  082F               	movf	___lldiv@divisor+3,w
  1573     0240  042E               	iorwf	___lldiv@divisor+2,w
  1574     0241  042D               	iorwf	___lldiv@divisor+1,w
  1575     0242  042C               	iorwf	___lldiv@divisor,w
  1576     0243  1903               	skipnz
  1577     0244  2A46               	goto	u481
  1578     0245  2A47               	goto	u480
  1579     0246                     u481:
  1580     0246  2A88               	goto	l985
  1581     0247                     u480:
  1582     0247                     l967:
  1583     0247  01B9               	clrf	___lldiv@counter
  1584     0248  0AB9               	incf	___lldiv@counter,f
  1585     0249  2A55               	goto	l971
  1586     024A                     l969:
  1587     024A  3001               	movlw	1
  1588     024B                     u495:
  1589     024B  35AC               	lslf	___lldiv@divisor,f
  1590     024C  0DAD               	rlf	___lldiv@divisor+1,f
  1591     024D  0DAE               	rlf	___lldiv@divisor+2,f
  1592     024E  0DAF               	rlf	___lldiv@divisor+3,f
  1593     024F  0B89               	decfsz	9,f
  1594     0250  2A4B               	goto	u495
  1595     0251  3001               	movlw	1
  1596     0252  00B4               	movwf	??___lldiv
  1597     0253  0834               	movf	??___lldiv,w
  1598     0254  07B9               	addwf	___lldiv@counter,f
  1599     0255                     l971:
  1600     0255  1FAF               	btfss	___lldiv@divisor+3,7
  1601     0256  2A58               	goto	u501
  1602     0257  2A59               	goto	u500
  1603     0258                     u501:
  1604     0258  2A4A               	goto	l969
  1605     0259                     u500:
  1606     0259                     l973:
  1607     0259  3001               	movlw	1
  1608     025A                     u515:
  1609     025A  35B5               	lslf	___lldiv@quotient,f
  1610     025B  0DB6               	rlf	___lldiv@quotient+1,f
  1611     025C  0DB7               	rlf	___lldiv@quotient+2,f
  1612     025D  0DB8               	rlf	___lldiv@quotient+3,f
  1613     025E  0B89               	decfsz	9,f
  1614     025F  2A5A               	goto	u515
  1615     0260                     l975:
  1616     0260  082F               	movf	___lldiv@divisor+3,w
  1617     0261  0233               	subwf	___lldiv@dividend+3,w
  1618     0262  1D03               	skipz
  1619     0263  2A6E               	goto	u525
  1620     0264  082E               	movf	___lldiv@divisor+2,w
  1621     0265  0232               	subwf	___lldiv@dividend+2,w
  1622     0266  1D03               	skipz
  1623     0267  2A6E               	goto	u525
  1624     0268  082D               	movf	___lldiv@divisor+1,w
  1625     0269  0231               	subwf	___lldiv@dividend+1,w
  1626     026A  1D03               	skipz
  1627     026B  2A6E               	goto	u525
  1628     026C  082C               	movf	___lldiv@divisor,w
  1629     026D  0230               	subwf	___lldiv@dividend,w
  1630     026E                     u525:
  1631     026E  1C03               	skipc
  1632     026F  2A71               	goto	u521
  1633     0270  2A72               	goto	u520
  1634     0271                     u521:
  1635     0271  2A7B               	goto	l981
  1636     0272                     u520:
  1637     0272                     l977:
  1638     0272  082C               	movf	___lldiv@divisor,w
  1639     0273  02B0               	subwf	___lldiv@dividend,f
  1640     0274  082D               	movf	___lldiv@divisor+1,w
  1641     0275  3BB1               	subwfb	___lldiv@dividend+1,f
  1642     0276  082E               	movf	___lldiv@divisor+2,w
  1643     0277  3BB2               	subwfb	___lldiv@dividend+2,f
  1644     0278  082F               	movf	___lldiv@divisor+3,w
  1645     0279  3BB3               	subwfb	___lldiv@dividend+3,f
  1646     027A                     l979:
  1647     027A  1435               	bsf	___lldiv@quotient,0
  1648     027B                     l981:
  1649     027B  3001               	movlw	1
  1650     027C                     u535:
  1651     027C  36AF               	lsrf	___lldiv@divisor+3,f
  1652     027D  0CAE               	rrf	___lldiv@divisor+2,f
  1653     027E  0CAD               	rrf	___lldiv@divisor+1,f
  1654     027F  0CAC               	rrf	___lldiv@divisor,f
  1655     0280  0B89               	decfsz	9,f
  1656     0281  2A7C               	goto	u535
  1657     0282                     l983:
  1658     0282  3001               	movlw	1
  1659     0283  02B9               	subwf	___lldiv@counter,f
  1660     0284  1D03               	btfss	3,2
  1661     0285  2A87               	goto	u541
  1662     0286  2A88               	goto	u540
  1663     0287                     u541:
  1664     0287  2A59               	goto	l973
  1665     0288                     u540:
  1666     0288                     l985:
  1667     0288  0838               	movf	___lldiv@quotient+3,w
  1668     0289  00AF               	movwf	?___lldiv+3
  1669     028A  0837               	movf	___lldiv@quotient+2,w
  1670     028B  00AE               	movwf	?___lldiv+2
  1671     028C  0836               	movf	___lldiv@quotient+1,w
  1672     028D  00AD               	movwf	?___lldiv+1
  1673     028E  0835               	movf	___lldiv@quotient,w
  1674     028F  00AC               	movwf	?___lldiv
  1675     0290                     l217:
  1676     0290  0008               	return
  1677     0291                     __end_of___lldiv:
  1678                           
  1679                           	psect	text7
  1680     037E                     __ptext7:	
  1681 ;; *************** function _PWMinit *****************
  1682 ;; Defined at:
  1683 ;;		line 25 in file "KF1.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0
  1697 ;;      Params:         0       0
  1698 ;;      Locals:         0       0
  1699 ;;      Temps:          0       0
  1700 ;;      Totals:         0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711     037E                     _PWMinit:	
  1712                           ;psect for function _PWMinit
  1713                           
  1714     037E                     l909:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _PWMinit: [wreg+status,2+status,0]
  1717                           
  1718                           
  1719                           ;KF1.c: 27:     TRISAbits.TRISA2 = 1;
  1720     037E  0021               	movlb	1	; select bank1
  1721     037F  150C               	bsf	12,2	;volatile
  1722     0380                     l911:
  1723                           
  1724                           ;KF1.c: 28:     PWM1CON = 0x00;
  1725     0380  002C               	movlb	12	; select bank12
  1726     0381  0193               	clrf	19	;volatile
  1727     0382                     l913:
  1728                           
  1729                           ;KF1.c: 29:     PWM1CONbits.PWM1POL = 0;
  1730     0382  1213               	bcf	19,4	;volatile
  1731     0383                     l915:
  1732                           
  1733                           ;KF1.c: 30:     PR2 = 200;
  1734     0383  30C8               	movlw	200
  1735     0384  0020               	movlb	0	; select bank0
  1736     0385  009B               	movwf	27	;volatile
  1737     0386                     l917:
  1738                           
  1739                           ;KF1.c: 31:     PWM1DCH = 0x00;
  1740     0386  002C               	movlb	12	; select bank12
  1741     0387  0192               	clrf	18	;volatile
  1742     0388                     l919:
  1743                           
  1744                           ;KF1.c: 32:     PWM1DCL = 0x00;
  1745     0388  0191               	clrf	17	;volatile
  1746     0389                     l921:
  1747                           
  1748                           ;KF1.c: 33:     INTCONbits.GIE = 1;
  1749     0389  178B               	bsf	11,7	;volatile
  1750     038A                     l923:
  1751                           
  1752                           ;KF1.c: 34:     INTCONbits.PEIE = 1;
  1753     038A  170B               	bsf	11,6	;volatile
  1754     038B                     l925:
  1755                           
  1756                           ;KF1.c: 35:     PIE1bits.TMR2IE = 1;
  1757     038B  0021               	movlb	1	; select bank1
  1758     038C  1491               	bsf	17,1	;volatile
  1759     038D                     l927:
  1760                           
  1761                           ;KF1.c: 36:     PIR1bits.TMR2IF = 0;
  1762     038D  0020               	movlb	0	; select bank0
  1763     038E  1091               	bcf	17,1	;volatile
  1764     038F                     l929:
  1765                           
  1766                           ;KF1.c: 37:     T2CONbits.T2CKPS = 3;
  1767     038F  3003               	movlw	3
  1768     0390  049C               	iorwf	28,f	;volatile
  1769     0391                     l931:
  1770                           
  1771                           ;KF1.c: 38:     PWM1CONbits.PWM1EN = 1;
  1772     0391  002C               	movlb	12	; select bank12
  1773     0392  1793               	bsf	19,7	;volatile
  1774     0393                     l933:
  1775                           
  1776                           ;KF1.c: 39:     TRISAbits.TRISA2 = 0;
  1777     0393  0021               	movlb	1	; select bank1
  1778     0394  110C               	bcf	12,2	;volatile
  1779     0395                     l935:
  1780                           
  1781                           ;KF1.c: 40:     PWM1CONbits.PWM1OE = 1;
  1782     0395  002C               	movlb	12	; select bank12
  1783     0396  1713               	bsf	19,6	;volatile
  1784     0397                     l937:
  1785                           
  1786                           ;KF1.c: 41:     T2CONbits.TMR2ON = 1;
  1787     0397  0020               	movlb	0	; select bank0
  1788     0398  151C               	bsf	28,2	;volatile
  1789     0399                     l113:
  1790     0399  0008               	return
  1791     039A                     __end_of_PWMinit:
  1792                           
  1793                           	psect	intentry
  1794     0004                     __pintentry:	
  1795 ;; *************** function _ISR *****************
  1796 ;; Defined at:
  1797 ;;		line 67 in file "main.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  i               1    8[COMMON] char 
  1802 ;;  p               1    7[COMMON] char 
  1803 ;;  v               1    6[COMMON] char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0
  1813 ;;      Params:         0       0
  1814 ;;      Locals:         3       0
  1815 ;;      Temps:          6       0
  1816 ;;      Totals:         9       0
  1817 ;;Total ram usage:        9 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		Interrupt level 1
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826     0004                     _ISR:
  1827                           
  1828                           ;incstack = 0
  1829     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1830                           
  1831                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  1832     0005  3180               	pagesel	$
  1833     0006                     i1l1013:
  1834                           
  1835                           ;main.c: 69:     signed char v, i, p;;main.c: 70:     if(PIR1bits.TMR2IF == 1)
  1836     0006  0020               	movlb	0	; select bank0
  1837     0007  1C91               	btfss	17,1	;volatile
  1838     0008  280A               	goto	u57_21
  1839     0009  280B               	goto	u57_20
  1840     000A                     u57_21:
  1841     000A  2837               	goto	i1l1039
  1842     000B                     u57_20:
  1843     000B                     i1l1015:
  1844                           
  1845                           ;main.c: 71:  {;main.c: 72:   PIE1bits.TMR2IE = 0;
  1846     000B  0021               	movlb	1	; select bank1
  1847     000C  1091               	bcf	17,1	;volatile
  1848                           
  1849                           ;main.c: 73:         T2CONbits.TMR2ON = 0;
  1850     000D  0020               	movlb	0	; select bank0
  1851     000E  111C               	bcf	28,2	;volatile
  1852                           
  1853                           ;main.c: 74:         PIR1bits.TMR2IF = 0;
  1854     000F  1091               	bcf	17,1	;volatile
  1855     0010                     i1l1017:
  1856                           
  1857                           ;main.c: 75:   if(PWM1DCH >= PR2)
  1858     0010  081B               	movf	27,w	;volatile
  1859     0011  002C               	movlb	12	; select bank12
  1860     0012  0212               	subwf	18,w	;volatile
  1861     0013  1C03               	skipc
  1862     0014  2816               	goto	u58_21
  1863     0015  2817               	goto	u58_20
  1864     0016                     u58_21:
  1865     0016  281A               	goto	i1l1021
  1866     0017                     u58_20:
  1867     0017                     i1l1019:
  1868                           
  1869                           ;main.c: 76:         {;main.c: 77:             p = -1;
  1870     0017  01F7               	clrf	ISR@p
  1871     0018  03F7               	decf	ISR@p,f
  1872                           
  1873                           ;main.c: 78:   }
  1874     0019  2821               	goto	i1l1025
  1875     001A                     i1l1021:
  1876     001A  0812               	movf	18,w	;volatile
  1877     001B  1D03               	btfss	3,2
  1878     001C  281E               	goto	u59_21
  1879     001D  281F               	goto	u59_20
  1880     001E                     u59_21:
  1881     001E  2821               	goto	i1l1025
  1882     001F                     u59_20:
  1883     001F                     i1l1023:
  1884                           
  1885                           ;main.c: 80:         {;main.c: 81:    p = 1;
  1886     001F  01F7               	clrf	ISR@p
  1887     0020  0AF7               	incf	ISR@p,f
  1888     0021                     i1l1025:
  1889                           
  1890                           ;main.c: 83:         if(p == 1)
  1891     0021  0377               	decf	ISR@p,w
  1892     0022  1D03               	btfss	3,2
  1893     0023  2825               	goto	u60_21
  1894     0024  2826               	goto	u60_20
  1895     0025                     u60_21:
  1896     0025  282B               	goto	i1l1029
  1897     0026                     u60_20:
  1898     0026                     i1l1027:
  1899                           
  1900                           ;main.c: 84:         {;main.c: 85:             PWM1DCH++;
  1901     0026  3001               	movlw	1
  1902     0027  00F0               	movwf	??_ISR
  1903     0028  0870               	movf	??_ISR,w
  1904     0029  0792               	addwf	18,f	;volatile
  1905                           
  1906                           ;main.c: 86:         }
  1907     002A  2832               	goto	i1l1033
  1908     002B                     i1l1029:
  1909     002B  0A77               	incf	ISR@p,w
  1910     002C  1D03               	btfss	3,2
  1911     002D  282F               	goto	u61_21
  1912     002E  2830               	goto	u61_20
  1913     002F                     u61_21:
  1914     002F  2832               	goto	i1l1033
  1915     0030                     u61_20:
  1916     0030                     i1l1031:
  1917                           
  1918                           ;main.c: 88:         {;main.c: 89:             PWM1DCH--;
  1919     0030  3001               	movlw	1
  1920     0031  0292               	subwf	18,f	;volatile
  1921     0032                     i1l1033:
  1922                           
  1923                           ;main.c: 91:         TMR2 = 0x00;
  1924     0032  0020               	movlb	0	; select bank0
  1925     0033  019A               	clrf	26	;volatile
  1926     0034                     i1l1035:
  1927                           
  1928                           ;main.c: 92:   T2CONbits.TMR2ON = 1;
  1929     0034  151C               	bsf	28,2	;volatile
  1930     0035                     i1l1037:
  1931                           
  1932                           ;main.c: 93:         PIE1bits.TMR2IE = 1;
  1933     0035  0021               	movlb	1	; select bank1
  1934     0036  1491               	bsf	17,1	;volatile
  1935     0037                     i1l1039:
  1936                           
  1937                           ;main.c: 96:     if(PIR1bits.ADIF == 1)
  1938     0037  0020               	movlb	0	; select bank0
  1939     0038  1F11               	btfss	17,6	;volatile
  1940     0039  283B               	goto	u62_21
  1941     003A  283C               	goto	u62_20
  1942     003B                     u62_21:
  1943     003B  28BF               	goto	i1l77
  1944     003C                     u62_20:
  1945     003C                     i1l1041:
  1946                           
  1947                           ;main.c: 97:     {;main.c: 98:         PIE1bits.ADIE = 0;
  1948     003C  0021               	movlb	1	; select bank1
  1949     003D  1311               	bcf	17,6	;volatile
  1950                           
  1951                           ;main.c: 99:         PIR1bits.ADIF = 0;
  1952     003E  0020               	movlb	0	; select bank0
  1953     003F  1311               	bcf	17,6	;volatile
  1954     0040                     i1l1043:
  1955                           
  1956                           ;main.c: 101:         if(ADCON0bits.CHS == 0x00)
  1957     0040  0021               	movlb	1	; select bank1
  1958     0041  0C1D               	rrf	29,w	;volatile
  1959     0042  0C89               	rrf	9,f
  1960     0043  391F               	andlw	31
  1961     0044  3A00               	xorlw	0
  1962     0045  1D03               	skipz
  1963     0046  2848               	goto	u63_21
  1964     0047  2849               	goto	u63_20
  1965     0048                     u63_21:
  1966     0048  287C               	goto	i1l1059
  1967     0049                     u63_20:
  1968     0049                     i1l1045:
  1969                           
  1970                           ;main.c: 102:         {;main.c: 103:             for(i = 0; i < 80; i++)
  1971     0049  01F8               	clrf	ISR@i
  1972     004A                     i1l1051:
  1973                           
  1974                           ;main.c: 104:             {;main.c: 105:                 if(Rt >= TABLE[i])
  1975     004A  0878               	movf	ISR@i,w
  1976     004B  00F0               	movwf	??_ISR
  1977     004C  01F1               	clrf	??_ISR+1
  1978     004D  35F0               	lslf	??_ISR,f
  1979     004E  0DF1               	rlf	??_ISR+1,f
  1980     004F  3096               	movlw	low _TABLE
  1981     0050  0770               	addwf	??_ISR,w
  1982     0051  0084               	movwf	4
  1983     0052  3001               	movlw	high _TABLE
  1984     0053  3D71               	addwfc	??_ISR+1,w
  1985     0054  3880               	iorlw	128
  1986     0055  0085               	movwf	5
  1987     0056  3F00               	moviw [0]fsr0
  1988     0057  00F2               	movwf	??_ISR+2
  1989     0058  3F01               	moviw [1]fsr0
  1990     0059  00F3               	movwf	??_ISR+3
  1991     005A  01F4               	clrf	??_ISR+4
  1992     005B  01F5               	clrf	??_ISR+5
  1993     005C  0875               	movf	??_ISR+5,w
  1994     005D  0020               	movlb	0	; select bank0
  1995     005E  024C               	subwf	_Rt+3,w
  1996     005F  1D03               	skipz
  1997     0060  286B               	goto	u64_25
  1998     0061  0874               	movf	??_ISR+4,w
  1999     0062  024B               	subwf	_Rt+2,w
  2000     0063  1D03               	skipz
  2001     0064  286B               	goto	u64_25
  2002     0065  0873               	movf	??_ISR+3,w
  2003     0066  024A               	subwf	_Rt+1,w
  2004     0067  1D03               	skipz
  2005     0068  286B               	goto	u64_25
  2006     0069  0872               	movf	??_ISR+2,w
  2007     006A  0249               	subwf	_Rt,w
  2008     006B                     u64_25:
  2009     006B  1C03               	skipc
  2010     006C  286E               	goto	u64_21
  2011     006D  286F               	goto	u64_20
  2012     006E                     u64_21:
  2013     006E  2870               	goto	i1l1055
  2014     006F                     u64_20:
  2015     006F                     i1l1053:
  2016                           
  2017                           ;main.c: 108:                     break;
  2018     006F  28BD               	goto	i1l72
  2019     0070                     i1l1055:
  2020                           
  2021                           ;main.c: 110:             }
  2022     0070  3001               	movlw	1
  2023     0071  00F0               	movwf	??_ISR
  2024     0072  0870               	movf	??_ISR,w
  2025     0073  07F8               	addwf	ISR@i,f
  2026     0074                     i1l1057:
  2027     0074  0878               	movf	ISR@i,w
  2028     0075  3A80               	xorlw	128
  2029     0076  3E30               	addlw	-208
  2030     0077  1C03               	skipc
  2031     0078  287A               	goto	u65_21
  2032     0079  287B               	goto	u65_20
  2033     007A                     u65_21:
  2034     007A  284A               	goto	i1l1051
  2035     007B                     u65_20:
  2036     007B  28BD               	goto	i1l72
  2037     007C                     i1l1059:
  2038     007C  0C1D               	rrf	29,w	;volatile
  2039     007D  0C89               	rrf	9,f
  2040     007E  391F               	andlw	31
  2041     007F  3A03               	xorlw	3
  2042     0080  1D03               	skipz
  2043     0081  2883               	goto	u66_21
  2044     0082  2884               	goto	u66_20
  2045     0083                     u66_21:
  2046     0083  28BD               	goto	i1l72
  2047     0084                     u66_20:
  2048     0084                     i1l1061:
  2049                           
  2050                           ;main.c: 113:         {;main.c: 114:             if(v <= (t - 2))
  2051     0084  0876               	movf	ISR@v,w
  2052     0085  00F0               	movwf	??_ISR
  2053     0086  01F1               	clrf	??_ISR+1
  2054     0087  1BF0               	btfsc	??_ISR,7
  2055     0088  03F1               	decf	??_ISR+1,f
  2056     0089  0879               	movf	_t,w
  2057     008A  3EFE               	addlw	254
  2058     008B  00F2               	movwf	??_ISR+2
  2059     008C  30FF               	movlw	255
  2060     008D  3D7A               	addwfc	_t+1,w
  2061     008E  00F3               	movwf	??_ISR+3
  2062     008F  0873               	movf	??_ISR+3,w
  2063     0090  3A80               	xorlw	128
  2064     0091  00F4               	movwf	??_ISR+4
  2065     0092  0871               	movf	??_ISR+1,w
  2066     0093  3A80               	xorlw	128
  2067     0094  0274               	subwf	??_ISR+4,w
  2068     0095  1D03               	skipz
  2069     0096  2899               	goto	u67_25
  2070     0097  0870               	movf	??_ISR,w
  2071     0098  0272               	subwf	??_ISR+2,w
  2072     0099                     u67_25:
  2073     0099  1C03               	skipc
  2074     009A  289C               	goto	u67_21
  2075     009B  289D               	goto	u67_20
  2076     009C                     u67_21:
  2077     009C  28A6               	goto	i1l1067
  2078     009D                     u67_20:
  2079     009D                     i1l1063:
  2080                           
  2081                           ;main.c: 115:             {;main.c: 116:                 PORTAbits.RA1 = 1;
  2082     009D  0020               	movlb	0	; select bank0
  2083     009E  148C               	bsf	12,1	;volatile
  2084                           
  2085                           ;main.c: 117:                 PIE1bits.TMR2IE = 0;
  2086     009F  0021               	movlb	1	; select bank1
  2087     00A0  1091               	bcf	17,1	;volatile
  2088     00A1                     i1l1065:
  2089                           
  2090                           ;main.c: 118:                 PWM1DCH = PR2;
  2091     00A1  0020               	movlb	0	; select bank0
  2092     00A2  081B               	movf	27,w	;volatile
  2093     00A3  002C               	movlb	12	; select bank12
  2094     00A4  0092               	movwf	18	;volatile
  2095                           
  2096                           ;main.c: 119:             }
  2097     00A5  28BD               	goto	i1l72
  2098     00A6                     i1l1067:
  2099     00A6  0876               	movf	ISR@v,w
  2100     00A7  00F0               	movwf	??_ISR
  2101     00A8  01F1               	clrf	??_ISR+1
  2102     00A9  1BF0               	btfsc	??_ISR,7
  2103     00AA  03F1               	decf	??_ISR+1,f
  2104     00AB  087A               	movf	_t+1,w
  2105     00AC  3A80               	xorlw	128
  2106     00AD  00F2               	movwf	??_ISR+2
  2107     00AE  0871               	movf	??_ISR+1,w
  2108     00AF  3A80               	xorlw	128
  2109     00B0  0272               	subwf	??_ISR+2,w
  2110     00B1  1D03               	skipz
  2111     00B2  28B5               	goto	u68_25
  2112     00B3  0870               	movf	??_ISR,w
  2113     00B4  0279               	subwf	_t,w
  2114     00B5                     u68_25:
  2115     00B5  1803               	skipnc
  2116     00B6  28B8               	goto	u68_21
  2117     00B7  28B9               	goto	u68_20
  2118     00B8                     u68_21:
  2119     00B8  28BD               	goto	i1l72
  2120     00B9                     u68_20:
  2121     00B9                     i1l1069:
  2122                           
  2123                           ;main.c: 121:             {;main.c: 122:                 PORTAbits.RA1 = 0;
  2124     00B9  0020               	movlb	0	; select bank0
  2125     00BA  108C               	bcf	12,1	;volatile
  2126                           
  2127                           ;main.c: 123:                 PIE1bits.TMR2IE = 1;
  2128     00BB  0021               	movlb	1	; select bank1
  2129     00BC  1491               	bsf	17,1	;volatile
  2130     00BD                     i1l72:
  2131                           
  2132                           ;main.c: 126:         PIE1bits.ADIE = 1;
  2133     00BD  0021               	movlb	1	; select bank1
  2134     00BE  1711               	bsf	17,6	;volatile
  2135     00BF                     i1l77:
  2136     00BF  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2137     00C0  0009               	retfie
  2138     00C1                     __end_of_ISR:
  2139     007E                     btemp	set	126	;btemp
  2140     007E                     int$flags	set	126
  2141     007E                     wtemp0	set	126
  2142                           
  2143                           	psect	config
  2144                           
  2145                           ;Config register CONFIG1 @ 0x8007
  2146                           ;	Oscillator Selection Bits
  2147                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2148                           ;	Watchdog Timer Enable
  2149                           ;	WDTE = OFF, WDT disabled
  2150                           ;	Power-up Timer Enable
  2151                           ;	PWRTE = OFF, PWRT disabled
  2152                           ;	MCLR Pin Function Select
  2153                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2154                           ;	Flash Program Memory Code Protection
  2155                           ;	CP = OFF, Program memory code protection is disabled
  2156                           ;	Brown-out Reset Enable
  2157                           ;	BOREN = OFF, Brown-out Reset disabled
  2158                           ;	Clock Out Enable
  2159                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2160     8007                     	org	32775
  2161     8007  39E4               	dw	14820
  2162                           
  2163                           ;Config register CONFIG2 @ 0x8008
  2164                           ;	Flash Memory Self-Write Protection
  2165                           ;	WRT = OFF, Write protection off
  2166                           ;	Stack Overflow/Underflow Reset Enable
  2167                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  2168                           ;	Brown-out Reset Voltage Selection
  2169                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2170                           ;	Low-Power Brown Out Reset
  2171                           ;	LPBOR = OFF, Low-Power BOR is disabled
  2172                           ;	Low-Voltage Programming Enable
  2173                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2174     8008                     	org	32776
  2175     8008  1DFF               	dw	7679

Data Sizes:
    Strings     0
    Constant    160
    Data        0
    BSS         6
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            48     41      45

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    _getADS->_getADCValue
    ___lldiv->___lmul

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    1894
                                             26 BANK0     15    15      0
                            _PWMinit
                            ___lldiv
                             ___lmul
                            ___lwdiv
                        _getADCValue
                             _getADS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getADS                                              12    10      2     557
                                             10 BANK0     10     8      2
                            ___lwdiv
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         10     8      2      22
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     314
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWMinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  9     9      0     181
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMinit
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___lwdiv
   _getADCValue
   _getADS
     ___lwdiv
     _getADCValue
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              30      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            30      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               30     29      2D       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      38       6        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
DATA                 0      0      38       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 21 17:02:56 2023

                      _t 0079                       l52 0349                       l55 02D1  
                     l49 0328                       _Rt 0049                      l110 03AD  
                    l113 0399                      l217 0290                      l195 037D  
                    l461 030E                      l901 03A7                      l911 0380  
                    l903 03A8                      l921 0389                      l913 0382  
                    l905 03AA                      l931 0391                      l923 038A  
                    l915 0383                      l907 03AC                      l933 0393  
                    l925 038B                      l917 0386                      l909 037E  
                    l861 032C                      l941 029A                      l935 0395  
                    l927 038D                      l919 0388                      l951 034A  
                    l871 02DE                      l855 0311                      l943 029E  
                    l937 0397                      l929 038F                      l961 0375  
                    l953 0353                      l881 02FE                      l873 02E3  
                    l865 02D2                      l857 031D                      l945 02AB  
                    l971 0255                      l955 0357                      l883 02FF  
                    l875 02E7                      l867 02D5                      l859 0326  
                    l947 02B4                      l939 0291                      l891 039A  
                    l981 027B                      l973 0259                      l965 0236  
                    l957 035F                      l885 0304                      l877 02EB  
                    l869 02DB                      l893 039D                      l983 0282  
                    l975 0260                      l967 0247                      l959 0366  
                    l879 02FA                      l887 030A                      l895 039F  
                    l991 00CE                      l977 0272                      l969 024A  
                    l985 0288                      l897 03A1                      l993 00D1  
                    l979 027A                      l899 03A3                      l995 00D4  
                    l997 00E1                      l989 00CC                      l999 00E8  
                    u410 02FA                      u411 02F9                      u500 0259  
                    u501 0258                      u405 02EC                      u430 030A  
                    u350 032C                      _PR2 001B                      u431 0309  
                    u415 02F6                      u351 032B                      u520 0272  
                    u440 0357                      u521 0271                      u441 0356  
                    u425 0300                      u370 02DB                      u515 025A  
                    u371 02DA                      u540 0288                      _ISR 0004  
                    u541 0287                      u525 026E                      u365 0330  
                    u470 0375                      u390 02EB                      u550 00E8  
                    u535 027C                      u471 0374                      u455 0360  
                    u391 02EA                      u551 00E7                      u480 0247  
                    u560 012C                      u481 0246                      u465 0367  
                    u385 02DF                      u707 029B                      u717 02A8  
                    u565 0128                      u495 024B                      u727 02B5  
                    u737 0321                      u697 00DA                      wreg 0009  
                   ?_ISR 0070                     ISR@i 0078                     ISR@p 0077  
                   ISR@v 0076                     l1001 00F3                     l1011 0190  
                   l1003 010B                     l1005 0136                     l1007 0176  
                   l1009 0178                     i1l72 00BD                     i1l77 00BF  
                   _TMR2 001A                     _main 00CC                     fsr0h 0005  
                   fsr0l 0004                     btemp 007E                     start 00C1  
        __end_of_PWMinit 039A                    ??_ISR 0070                    ?_main 0070  
        __end_of___lldiv 0291          __end_of___lwdiv 030F                    _TABLE 0196  
                  u60_20 0026                    u60_21 0025                    u61_20 0030  
                  u61_21 002F                    u62_20 003C                    u62_21 003B  
                  u63_20 0049                    u63_21 0048                    u64_20 006F  
                  u64_21 006E                    u64_25 006B                    u65_20 007B  
                  u57_20 000B                    u65_21 007A                    u57_21 000A  
                  u66_20 0084                    u58_20 0017                    u66_21 0083  
                  u58_21 0016                    u67_20 009D                    u59_20 001F  
                  u67_21 009C                    u59_21 001E                    u67_25 0099  
                  u68_20 00B9                    u68_21 00B8                    u68_25 00B5  
    ___lmul@multiplicand 0024                    _setup 039A                    status 0003  
                  wtemp0 007E          __initialization 00C2             __end_of_main 0196  
                 ??_main 003A                   _ADCON1 009E                   _ADRESH 009C  
                 _ADRESL 009B                   ?_setup 0070                   i1l1021 001A  
                 i1l1013 0006                   i1l1031 0030                   i1l1023 001F  
                 i1l1015 000B                   i1l1041 003C                   i1l1033 0032  
                 i1l1025 0021                   i1l1017 0010                   i1l1051 004A  
                 i1l1043 0040                   i1l1035 0034                   i1l1027 0026  
                 i1l1019 0017                   i1l1061 0084                   i1l1053 006F  
                 i1l1045 0049                   i1l1037 0035                   i1l1029 002B  
                 i1l1063 009D                   i1l1055 0070                   i1l1039 0037  
                 i1l1065 00A1                   i1l1057 0074                   i1l1067 00A6  
                 i1l1059 007C                   i1l1069 00B9                ??_PWMinit 0020  
                 _OSCCON 0099                   ___lmul 034A                   _getADS 0291  
              ??___lldiv 0034                ??___lwdiv 0024                   main@VR 0041  
__end_of__initialization 00C9       getADCValue@channel 0029            __end_of_TABLE 0236  
         __pcstackCOMMON 0070            __end_of_setup 03AE                  ??_setup 0020  
             __pbssBANK0 0049               __pmaintext 00CC                  ?___lmul 0020  
                ?_getADS 002A               __pintentry 0004           ___lmul@product 0028  
                _PWM1DCH 0612                  _PWM1DCL 0611                  _PWM1CON 0613  
                _PWMinit 037E            ??_getADCValue 0022                  ___lldiv 0236  
                ___lwdiv 02D2                  __ptext1 039A                  __ptext2 0291  
                __ptext3 030F                  __ptext4 02D2                  __ptext5 034A  
                __ptext6 0236                  __ptext7 037E                _T2CONbits 001C  
                main@ad1 0045                  main@ad2 003E                  main@add 0040  
   end_of_initialization 00C9          ___lldiv@divisor 002C          ___lldiv@counter 0039  
    __end_of_getADCValue 034A                _PORTAbits 000C                _TRISAbits 008C  
         __end_of___lmul 037E           __end_of_getADS 02D2      start_initialization 00C2  
            __end_of_ISR 00C1              _getADCValue 030F                 ??___lmul 0028  
               ??_getADS 002C              __pbssCOMMON 0079                ___latbits 0000  
          __pcstackBANK0 0020                 ?_PWMinit 0070         ___lwdiv@dividend 0022  
               ?___lldiv 002C                 ?___lwdiv 0020                getADS@ac1 002E  
              getADS@ac2 0030                getADS@ac3 0032         ___lwdiv@quotient 0025  
               _PIE1bits 0091                 _PIR1bits 0011               _ADCON0bits 009D  
      ___lmul@multiplier 0020               _ANSELAbits 018C          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0027             ?_getADCValue 0020                 int$flags 007E  
             _INTCONbits 000B              _PWM1CONbits 0613                 intlevel1 0000  
       ___lldiv@dividend 0030            __pstringtext1 0196         ___lldiv@quotient 0035  
