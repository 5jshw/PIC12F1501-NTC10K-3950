

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Nov 20 16:54:02 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	12F1501
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 07/09/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC12F1501 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     008C                     	;# 
    83     0091                     	;# 
    84     0092                     	;# 
    85     0093                     	;# 
    86     0095                     	;# 
    87     0096                     	;# 
    88     0097                     	;# 
    89     0099                     	;# 
    90     009A                     	;# 
    91     009B                     	;# 
    92     009B                     	;# 
    93     009C                     	;# 
    94     009D                     	;# 
    95     009E                     	;# 
    96     009F                     	;# 
    97     010C                     	;# 
    98     0111                     	;# 
    99     0112                     	;# 
   100     0115                     	;# 
   101     0116                     	;# 
   102     0117                     	;# 
   103     0118                     	;# 
   104     0119                     	;# 
   105     011D                     	;# 
   106     018C                     	;# 
   107     0191                     	;# 
   108     0191                     	;# 
   109     0192                     	;# 
   110     0193                     	;# 
   111     0193                     	;# 
   112     0194                     	;# 
   113     0195                     	;# 
   114     0196                     	;# 
   115     0197                     	;# 
   116     020C                     	;# 
   117     0391                     	;# 
   118     0392                     	;# 
   119     0393                     	;# 
   120     0498                     	;# 
   121     0498                     	;# 
   122     0499                     	;# 
   123     049A                     	;# 
   124     049B                     	;# 
   125     049B                     	;# 
   126     049C                     	;# 
   127     049D                     	;# 
   128     049E                     	;# 
   129     049F                     	;# 
   130     0611                     	;# 
   131     0612                     	;# 
   132     0613                     	;# 
   133     0613                     	;# 
   134     0614                     	;# 
   135     0615                     	;# 
   136     0616                     	;# 
   137     0616                     	;# 
   138     0617                     	;# 
   139     0618                     	;# 
   140     0619                     	;# 
   141     0619                     	;# 
   142     061A                     	;# 
   143     061B                     	;# 
   144     061C                     	;# 
   145     061C                     	;# 
   146     0691                     	;# 
   147     0692                     	;# 
   148     0693                     	;# 
   149     0694                     	;# 
   150     0695                     	;# 
   151     0F0F                     	;# 
   152     0F10                     	;# 
   153     0F11                     	;# 
   154     0F12                     	;# 
   155     0F13                     	;# 
   156     0F14                     	;# 
   157     0F15                     	;# 
   158     0F16                     	;# 
   159     0F17                     	;# 
   160     0F18                     	;# 
   161     0F19                     	;# 
   162     0F1A                     	;# 
   163     0F1B                     	;# 
   164     0F1C                     	;# 
   165     0F1D                     	;# 
   166     0F1E                     	;# 
   167     0F1F                     	;# 
   168     0FE3                     	;# 
   169     0FE4                     	;# 
   170     0FE5                     	;# 
   171     0FE6                     	;# 
   172     0FE7                     	;# 
   173     0FE8                     	;# 
   174     0FE9                     	;# 
   175     0FEA                     	;# 
   176     0FEB                     	;# 
   177     0FED                     	;# 
   178     0FEE                     	;# 
   179     0FEF                     	;# 
   180     0000                     	;# 
   181     0001                     	;# 
   182     0002                     	;# 
   183     0003                     	;# 
   184     0004                     	;# 
   185     0005                     	;# 
   186     0006                     	;# 
   187     0007                     	;# 
   188     0008                     	;# 
   189     0009                     	;# 
   190     000A                     	;# 
   191     000B                     	;# 
   192     000C                     	;# 
   193     0011                     	;# 
   194     0012                     	;# 
   195     0013                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     008C                     	;# 
   206     0091                     	;# 
   207     0092                     	;# 
   208     0093                     	;# 
   209     0095                     	;# 
   210     0096                     	;# 
   211     0097                     	;# 
   212     0099                     	;# 
   213     009A                     	;# 
   214     009B                     	;# 
   215     009B                     	;# 
   216     009C                     	;# 
   217     009D                     	;# 
   218     009E                     	;# 
   219     009F                     	;# 
   220     010C                     	;# 
   221     0111                     	;# 
   222     0112                     	;# 
   223     0115                     	;# 
   224     0116                     	;# 
   225     0117                     	;# 
   226     0118                     	;# 
   227     0119                     	;# 
   228     011D                     	;# 
   229     018C                     	;# 
   230     0191                     	;# 
   231     0191                     	;# 
   232     0192                     	;# 
   233     0193                     	;# 
   234     0193                     	;# 
   235     0194                     	;# 
   236     0195                     	;# 
   237     0196                     	;# 
   238     0197                     	;# 
   239     020C                     	;# 
   240     0391                     	;# 
   241     0392                     	;# 
   242     0393                     	;# 
   243     0498                     	;# 
   244     0498                     	;# 
   245     0499                     	;# 
   246     049A                     	;# 
   247     049B                     	;# 
   248     049B                     	;# 
   249     049C                     	;# 
   250     049D                     	;# 
   251     049E                     	;# 
   252     049F                     	;# 
   253     0611                     	;# 
   254     0612                     	;# 
   255     0613                     	;# 
   256     0613                     	;# 
   257     0614                     	;# 
   258     0615                     	;# 
   259     0616                     	;# 
   260     0616                     	;# 
   261     0617                     	;# 
   262     0618                     	;# 
   263     0619                     	;# 
   264     0619                     	;# 
   265     061A                     	;# 
   266     061B                     	;# 
   267     061C                     	;# 
   268     061C                     	;# 
   269     0691                     	;# 
   270     0692                     	;# 
   271     0693                     	;# 
   272     0694                     	;# 
   273     0695                     	;# 
   274     0F0F                     	;# 
   275     0F10                     	;# 
   276     0F11                     	;# 
   277     0F12                     	;# 
   278     0F13                     	;# 
   279     0F14                     	;# 
   280     0F15                     	;# 
   281     0F16                     	;# 
   282     0F17                     	;# 
   283     0F18                     	;# 
   284     0F19                     	;# 
   285     0F1A                     	;# 
   286     0F1B                     	;# 
   287     0F1C                     	;# 
   288     0F1D                     	;# 
   289     0F1E                     	;# 
   290     0F1F                     	;# 
   291     0FE3                     	;# 
   292     0FE4                     	;# 
   293     0FE5                     	;# 
   294     0FE6                     	;# 
   295     0FE7                     	;# 
   296     0FE8                     	;# 
   297     0FE9                     	;# 
   298     0FEA                     	;# 
   299     0FEB                     	;# 
   300     0FED                     	;# 
   301     0FEE                     	;# 
   302     0FEF                     	;# 
   303                           
   304                           	psect	stringtext1
   305     01CF                     __pstringtext1:
   306     01CF                     _TABLE:
   307     01CF  34F0               	retlw	240
   308     01D0  3425               	retlw	37
   309     01D1  34CE               	retlw	206
   310     01D2  3423               	retlw	35
   311     01D3  34CE               	retlw	206
   312     01D4  3421               	retlw	33
   313     01D5  34EC               	retlw	236
   314     01D6  341F               	retlw	31
   315     01D7  342A               	retlw	42
   316     01D8  341E               	retlw	30
   317     01D9  3482               	retlw	130
   318     01DA  341C               	retlw	28
   319     01DB  34F4               	retlw	244
   320     01DC  341A               	retlw	26
   321     01DD  347E               	retlw	126
   322     01DE  3419               	retlw	25
   323     01DF  3420               	retlw	32
   324     01E0  3418               	retlw	24
   325     01E1  349E               	retlw	158
   326     01E2  3415               	retlw	21
   327     01E3  347A               	retlw	122
   328     01E4  3414               	retlw	20
   329     01E5  3466               	retlw	102
   330     01E6  3413               	retlw	19
   331     01E7  3464               	retlw	100
   332     01E8  3412               	retlw	18
   333     01E9  3470               	retlw	112
   334     01EA  3411               	retlw	17
   335     01EB  348A               	retlw	138
   336     01EC  3410               	retlw	16
   337     01ED  34B0               	retlw	176
   338     01EE  340F               	retlw	15
   339     01EF  34E4               	retlw	228
   340     01F0  340E               	retlw	14
   341     01F1  3424               	retlw	36
   342     01F2  340E               	retlw	14
   343     01F3  346E               	retlw	110
   344     01F4  340D               	retlw	13
   345     01F5  34C2               	retlw	194
   346     01F6  340C               	retlw	12
   347     01F7  3420               	retlw	32
   348     01F8  340C               	retlw	12
   349     01F9  3486               	retlw	134
   350     01FA  340B               	retlw	11
   351     01FB  34F6               	retlw	246
   352     01FC  340A               	retlw	10
   353     01FD  346C               	retlw	108
   354     01FE  340A               	retlw	10
   355     01FF  34EC               	retlw	236
   356     0200  3409               	retlw	9
   357     0201  3472               	retlw	114
   358     0202  3409               	retlw	9
   359     0203  34FE               	retlw	254
   360     0204  3408               	retlw	8
   361     0205  3490               	retlw	144
   362     0206  3408               	retlw	8
   363     0207  3428               	retlw	40
   364     0208  3408               	retlw	8
   365     0209  34C6               	retlw	198
   366     020A  3407               	retlw	7
   367     020B  3469               	retlw	105
   368     020C  3407               	retlw	7
   369     020D  3411               	retlw	17
   370     020E  3407               	retlw	7
   371     020F  34BE               	retlw	190
   372     0210  3406               	retlw	6
   373     0211  346E               	retlw	110
   374     0212  3406               	retlw	6
   375     0213  3423               	retlw	35
   376     0214  3406               	retlw	6
   377     0215  34DC               	retlw	220
   378     0216  3405               	retlw	5
   379     0217  3498               	retlw	152
   380     0218  3405               	retlw	5
   381     0219  3458               	retlw	88
   382     021A  3405               	retlw	5
   383     021B  341B               	retlw	27
   384     021C  3405               	retlw	5
   385     021D  34E1               	retlw	225
   386     021E  3404               	retlw	4
   387     021F  34AA               	retlw	170
   388     0220  3404               	retlw	4
   389     0221  3476               	retlw	118
   390     0222  3404               	retlw	4
   391     0223  3444               	retlw	68
   392     0224  3404               	retlw	4
   393     0225  3415               	retlw	21
   394     0226  3404               	retlw	4
   395     0227  34E8               	retlw	232
   396     0228  3403               	retlw	3
   397     0229  34BD               	retlw	189
   398     022A  3403               	retlw	3
   399     022B  3494               	retlw	148
   400     022C  3403               	retlw	3
   401     022D  346D               	retlw	109
   402     022E  3403               	retlw	3
   403     022F  3448               	retlw	72
   404     0230  3403               	retlw	3
   405     0231  3425               	retlw	37
   406     0232  3403               	retlw	3
   407     0233  3404               	retlw	4
   408     0234  3403               	retlw	3
   409     0235  34E4               	retlw	228
   410     0236  3402               	retlw	2
   411     0237  34C5               	retlw	197
   412     0238  3402               	retlw	2
   413     0239  34A8               	retlw	168
   414     023A  3402               	retlw	2
   415     023B  348D               	retlw	141
   416     023C  3402               	retlw	2
   417     023D  3472               	retlw	114
   418     023E  3402               	retlw	2
   419     023F  3459               	retlw	89
   420     0240  3402               	retlw	2
   421     0241  3441               	retlw	65
   422     0242  3402               	retlw	2
   423     0243  342A               	retlw	42
   424     0244  3402               	retlw	2
   425     0245  3414               	retlw	20
   426     0246  3402               	retlw	2
   427     0247  34FF               	retlw	255
   428     0248  3401               	retlw	1
   429     0249  34EB               	retlw	235
   430     024A  3401               	retlw	1
   431     024B  34D8               	retlw	216
   432     024C  3401               	retlw	1
   433     024D  34C6               	retlw	198
   434     024E  3401               	retlw	1
   435     024F  34B4               	retlw	180
   436     0250  3401               	retlw	1
   437     0251  34A4               	retlw	164
   438     0252  3401               	retlw	1
   439     0253  3494               	retlw	148
   440     0254  3401               	retlw	1
   441     0255  3484               	retlw	132
   442     0256  3401               	retlw	1
   443     0257  3476               	retlw	118
   444     0258  3401               	retlw	1
   445     0259  3468               	retlw	104
   446     025A  3401               	retlw	1
   447     025B  345A               	retlw	90
   448     025C  3401               	retlw	1
   449     025D  344E               	retlw	78
   450     025E  3401               	retlw	1
   451     025F  3441               	retlw	65
   452     0260  3401               	retlw	1
   453     0261  3435               	retlw	53
   454     0262  3401               	retlw	1
   455     0263  342A               	retlw	42
   456     0264  3401               	retlw	1
   457     0265  341F               	retlw	31
   458     0266  3401               	retlw	1
   459     0267  3415               	retlw	21
   460     0268  3401               	retlw	1
   461     0269  340B               	retlw	11
   462     026A  3401               	retlw	1
   463     026B  3402               	retlw	2
   464     026C  3401               	retlw	1
   465     026D  34F8               	retlw	248
   466     026E  3400               	retlw	0
   467     026F                     __end_of_TABLE:
   468     000B                     _INTCONbits	set	11
   469     000C                     _PORTAbits	set	12
   470     001A                     _TMR2	set	26
   471     001B                     _PR2	set	27
   472     001C                     _T2CONbits	set	28
   473     0011                     _PIR1bits	set	17
   474     009E                     _ADCON1	set	158
   475     008C                     _TRISAbits	set	140
   476     0099                     _OSCCON	set	153
   477     0091                     _PIE1bits	set	145
   478     009D                     _ADCON0bits	set	157
   479     009B                     _ADRESL	set	155
   480     009C                     _ADRESH	set	156
   481     018C                     _ANSELAbits	set	396
   482     0611                     _PWM1DCL	set	1553
   483     0613                     _PWM1CONbits	set	1555
   484     0613                     _PWM1CON	set	1555
   485     0612                     _PWM1DCH	set	1554
   486                           
   487                           	psect	cinit
   488     00D9                     start_initialization:	
   489                           ; #config settings
   490                           
   491     00D9                     __initialization:
   492                           
   493                           ; Clear objects allocated to COMMON
   494     00D9  01F0               	clrf	__pbssCOMMON& (0+127)
   495     00DA  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   496     00DB  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   497     00DC  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   498     00DD  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   499     00DE  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   500                           
   501                           ; Clear objects allocated to BANK0
   502     00DF  3040               	movlw	low __pbssBANK0
   503     00E0  0084               	movwf	4
   504     00E1  3000               	movlw	high __pbssBANK0
   505     00E2  0085               	movwf	5
   506     00E3  300E               	movlw	14
   507     00E4  3183  23F7  3180   	fcall	clear_ram0
   508     00E7                     end_of_initialization:	
   509                           ;End of C runtime variable initialization code
   510                           
   511     00E7                     __end_of__initialization:
   512     00E7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   513     00E8  0020               	movlb	0
   514     00E9  28EA               	ljmp	_main	;jump to C main() function
   515                           
   516                           	psect	bssCOMMON
   517     0070                     __pbssCOMMON:
   518     0070                     _i:
   519     0070                     	ds	2
   520     0072                     _v:
   521     0072                     	ds	2
   522     0074                     _t:
   523     0074                     	ds	2
   524                           
   525                           	psect	bssBANK0
   526     0040                     __pbssBANK0:
   527     0040                     _Rt:
   528     0040                     	ds	4
   529     0044                     _ad1:
   530     0044                     	ds	4
   531     0048                     _ad2:
   532     0048                     	ds	2
   533     004A                     _VR:
   534     004A                     	ds	4
   535                           
   536                           	psect	clrtext
   537     03F7                     clear_ram0:	
   538                           ;	Called with FSR0 containing the base address, and
   539                           ;	WREG with the size to clear
   540                           
   541     03F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   542     03F8                     clrloop0:
   543     03F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   544     03F9  3101               	addfsr 0,1
   545     03FA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   546     03FB  2BF8               	goto	clrloop0	;have we reached the end yet?
   547     03FC  3400               	retlw	0	;all done for this memory range, return
   548                           
   549                           	psect	cstackCOMMON
   550     0076                     __pcstackCOMMON:
   551     0076                     ?_setup:
   552     0076                     ?_PWMinit:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0076                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0076                     ?_ISR:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0076                     ??_ISR:	
   562                           ; 1 bytes @ 0x0
   563                           
   564                           
   565                           ; 1 bytes @ 0x0
   566     0076                     	ds	4
   567     007A                     ISR@p:
   568                           
   569                           ; 2 bytes @ 0x4
   570     007A                     	ds	2
   571                           
   572                           	psect	cstackBANK0
   573     0020                     __pcstackBANK0:
   574     0020                     ??_setup:
   575     0020                     ??_PWMinit:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0020                     ?_getADCValue:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0020                     ?___lwdiv:	
   582                           ; 2 bytes @ 0x0
   583                           
   584     0020                     ?___lmul:	
   585                           ; 2 bytes @ 0x0
   586                           
   587     0020                     ___lwdiv@divisor:	
   588                           ; 4 bytes @ 0x0
   589                           
   590     0020                     ___lmul@multiplier:	
   591                           ; 2 bytes @ 0x0
   592                           
   593                           
   594                           ; 4 bytes @ 0x0
   595     0020                     	ds	2
   596     0022                     ??_getADCValue:
   597     0022                     ___lwdiv@dividend:	
   598                           ; 1 bytes @ 0x2
   599                           
   600                           
   601                           ; 2 bytes @ 0x2
   602     0022                     	ds	2
   603     0024                     ??___lwdiv:
   604     0024                     ___lmul@multiplicand:	
   605                           ; 1 bytes @ 0x4
   606                           
   607                           
   608                           ; 4 bytes @ 0x4
   609     0024                     	ds	1
   610     0025                     ___lwdiv@counter:
   611                           
   612                           ; 1 bytes @ 0x5
   613     0025                     	ds	1
   614     0026                     ___lwdiv@quotient:
   615                           
   616                           ; 2 bytes @ 0x6
   617     0026                     	ds	2
   618     0028                     ??___lmul:
   619     0028                     ___lmul@product:	
   620                           ; 1 bytes @ 0x8
   621                           
   622                           
   623                           ; 4 bytes @ 0x8
   624     0028                     	ds	1
   625     0029                     getADCValue@channel:
   626                           
   627                           ; 1 bytes @ 0x9
   628     0029                     	ds	1
   629     002A                     getADCValue@acc:
   630                           
   631                           ; 2 bytes @ 0xA
   632     002A                     	ds	2
   633     002C                     ?_getADS:
   634     002C                     ?___lldiv:	
   635                           ; 2 bytes @ 0xC
   636                           
   637     002C                     ___lldiv@divisor:	
   638                           ; 4 bytes @ 0xC
   639                           
   640                           
   641                           ; 4 bytes @ 0xC
   642     002C                     	ds	2
   643     002E                     ??_getADS:
   644                           
   645                           ; 1 bytes @ 0xE
   646     002E                     	ds	2
   647     0030                     getADS@ac1:
   648     0030                     ___lldiv@dividend:	
   649                           ; 2 bytes @ 0x10
   650                           
   651                           
   652                           ; 4 bytes @ 0x10
   653     0030                     	ds	2
   654     0032                     getADS@ac2:
   655                           
   656                           ; 2 bytes @ 0x12
   657     0032                     	ds	2
   658     0034                     ??___lldiv:
   659     0034                     getADS@ac3:	
   660                           ; 1 bytes @ 0x14
   661                           
   662                           
   663                           ; 2 bytes @ 0x14
   664     0034                     	ds	1
   665     0035                     ___lldiv@quotient:
   666                           
   667                           ; 4 bytes @ 0x15
   668     0035                     	ds	1
   669     0036                     getADS@acd:
   670                           
   671                           ; 2 bytes @ 0x16
   672     0036                     	ds	3
   673     0039                     ___lldiv@counter:
   674                           
   675                           ; 1 bytes @ 0x19
   676     0039                     	ds	1
   677     003A                     ??_main:
   678                           
   679                           ; 1 bytes @ 0x1A
   680     003A                     	ds	4
   681     003E                     main@add:
   682                           
   683                           ; 2 bytes @ 0x1E
   684     003E                     	ds	2
   685                           
   686                           	psect	maintext
   687     00EA                     __pmaintext:	
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   690 ;;
   691 ;; *************** function _main *****************
   692 ;; Defined at:
   693 ;;		line 18 in file "main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  add             2   30[BANK0 ] int 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, status,2, status,0, pclath, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : B1F/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0
   707 ;;      Params:         0       0
   708 ;;      Locals:         0       2
   709 ;;      Temps:          0       4
   710 ;;      Totals:         0       6
   711 ;;Total ram usage:        6 bytes
   712 ;; Hardware stack levels required when called: 3
   713 ;; This function calls:
   714 ;;		_PWMinit
   715 ;;		___lldiv
   716 ;;		___lmul
   717 ;;		___lwdiv
   718 ;;		_getADCValue
   719 ;;		_getADS
   720 ;;		_setup
   721 ;; This function is called by:
   722 ;;		Startup code after reset
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726     00EA                     _main:	
   727                           ;psect for function _main
   728                           
   729     00EA                     l1237:	
   730                           ;incstack = 0
   731                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   732                           
   733                           
   734                           ;main.c: 20:     int add = 0;
   735     00EA  0020               	movlb	0	; select bank0
   736     00EB  01BE               	clrf	main@add
   737     00EC  01BF               	clrf	main@add+1
   738     00ED                     l1239:
   739                           
   740                           ;main.c: 21:     setup();
   741     00ED  3183  23E3  3180   	fcall	_setup
   742     00F0                     l1241:
   743                           
   744                           ;main.c: 22:     PWMinit();
   745     00F0  3183  23C7  3180   	fcall	_PWMinit
   746     00F3                     l1243:
   747                           
   748                           ;main.c: 23:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   749     00F3  3015               	movlw	21
   750     00F4  0020               	movlb	0	; select bank0
   751     00F5  00BB               	movwf	??_main+1
   752     00F6  304B               	movlw	75
   753     00F7  00BA               	movwf	??_main
   754     00F8  30BE               	movlw	190
   755     00F9                     u937:
   756     00F9  0B89               	decfsz	9,f
   757     00FA  28F9               	goto	u937
   758     00FB  0BBA               	decfsz	??_main,f
   759     00FC  28F9               	goto	u937
   760     00FD  0BBB               	decfsz	??_main+1,f
   761     00FE  28F9               	goto	u937
   762     00FF  0000               	nop
   763     0100                     l1245:
   764                           
   765                           ;main.c: 25:     {;main.c: 26:         if(add == 3)
   766     0100  3003               	movlw	3
   767     0101  0020               	movlb	0	; select bank0
   768     0102  063E               	xorwf	main@add,w
   769     0103  043F               	iorwf	main@add+1,w
   770     0104  1D03               	btfss	3,2
   771     0105  2907               	goto	u911
   772     0106  2908               	goto	u910
   773     0107                     u911:
   774     0107  29B1               	goto	l1261
   775     0108                     u910:
   776     0108                     l1247:
   777                           
   778                           ;main.c: 27:         {;main.c: 28:             ad1 = getADCValue(0x00);
   779     0108  3000               	movlw	0
   780     0109  3182  22CA  3180   	fcall	_getADCValue
   781     010C  0020               	movlb	0	; select bank0
   782     010D  0820               	movf	?_getADCValue,w
   783     010E  00C4               	movwf	_ad1
   784     010F  0821               	movf	?_getADCValue+1,w
   785     0110  00C5               	movwf	_ad1+1
   786     0111  01C6               	clrf	_ad1+2
   787     0112  01C7               	clrf	_ad1+3
   788     0113                     l1249:
   789                           
   790                           ;main.c: 29:             ad1 = 1024 - ad1;
   791     0113  3000               	movlw	0
   792     0114  00BA               	movwf	??_main
   793     0115  3004               	movlw	4
   794     0116  00BB               	movwf	??_main+1
   795     0117  3000               	movlw	0
   796     0118  00BC               	movwf	??_main+2
   797     0119  3000               	movlw	0
   798     011A  00BD               	movwf	??_main+3
   799     011B  0844               	movf	_ad1,w
   800     011C  02BA               	subwf	??_main,f
   801     011D  0845               	movf	_ad1+1,w
   802     011E  3BBB               	subwfb	??_main+1,f
   803     011F  0846               	movf	_ad1+2,w
   804     0120  3BBC               	subwfb	??_main+2,f
   805     0121  0847               	movf	_ad1+3,w
   806     0122  3BBD               	subwfb	??_main+3,f
   807     0123  083D               	movf	??_main+3,w
   808     0124  00C7               	movwf	_ad1+3
   809     0125  083C               	movf	??_main+2,w
   810     0126  00C6               	movwf	_ad1+2
   811     0127  083B               	movf	??_main+1,w
   812     0128  00C5               	movwf	_ad1+1
   813     0129  083A               	movf	??_main,w
   814     012A  00C4               	movwf	_ad1
   815     012B                     l1251:
   816                           
   817                           ;main.c: 30:             VR = ad1 * 500 / 1024;
   818     012B  0847               	movf	_ad1+3,w
   819     012C  00A3               	movwf	___lmul@multiplier+3
   820     012D  0846               	movf	_ad1+2,w
   821     012E  00A2               	movwf	___lmul@multiplier+2
   822     012F  0845               	movf	_ad1+1,w
   823     0130  00A1               	movwf	___lmul@multiplier+1
   824     0131  0844               	movf	_ad1,w
   825     0132  00A0               	movwf	___lmul@multiplier
   826     0133  3000               	movlw	0
   827     0134  00A7               	movwf	___lmul@multiplicand+3
   828     0135  3000               	movlw	0
   829     0136  00A6               	movwf	___lmul@multiplicand+2
   830     0137  3001               	movlw	1
   831     0138  00A5               	movwf	___lmul@multiplicand+1
   832     0139  30F4               	movlw	244
   833     013A  00A4               	movwf	___lmul@multiplicand
   834     013B  3183  2393  3180   	fcall	___lmul
   835     013E  0020               	movlb	0	; select bank0
   836     013F  0820               	movf	?___lmul,w
   837     0140  00BA               	movwf	??_main
   838     0141  0821               	movf	?___lmul+1,w
   839     0142  00BB               	movwf	??_main+1
   840     0143  0822               	movf	?___lmul+2,w
   841     0144  00BC               	movwf	??_main+2
   842     0145  0823               	movf	?___lmul+3,w
   843     0146  00BD               	movwf	??_main+3
   844     0147  300A               	movlw	10
   845     0148                     u925:
   846     0148  36BD               	lsrf	??_main+3,f
   847     0149  0CBC               	rrf	??_main+2,f
   848     014A  0CBB               	rrf	??_main+1,f
   849     014B  0CBA               	rrf	??_main,f
   850     014C                     u920:
   851     014C  0B89               	decfsz	9,f
   852     014D  2948               	goto	u925
   853     014E  083D               	movf	??_main+3,w
   854     014F  00CD               	movwf	_VR+3
   855     0150  083C               	movf	??_main+2,w
   856     0151  00CC               	movwf	_VR+2
   857     0152  083B               	movf	??_main+1,w
   858     0153  00CB               	movwf	_VR+1
   859     0154  083A               	movf	??_main,w
   860     0155  00CA               	movwf	_VR
   861     0156                     l1253:
   862                           
   863                           ;main.c: 31:             Rt = (unsigned long)(500 - VR) * 1000 / VR;
   864     0156  084D               	movf	_VR+3,w
   865     0157  00AF               	movwf	___lldiv@divisor+3
   866     0158  084C               	movf	_VR+2,w
   867     0159  00AE               	movwf	___lldiv@divisor+2
   868     015A  084B               	movf	_VR+1,w
   869     015B  00AD               	movwf	___lldiv@divisor+1
   870     015C  084A               	movf	_VR,w
   871     015D  00AC               	movwf	___lldiv@divisor
   872     015E  30F4               	movlw	244
   873     015F  00BA               	movwf	??_main
   874     0160  3001               	movlw	1
   875     0161  00BB               	movwf	??_main+1
   876     0162  3000               	movlw	0
   877     0163  00BC               	movwf	??_main+2
   878     0164  3000               	movlw	0
   879     0165  00BD               	movwf	??_main+3
   880     0166  084A               	movf	_VR,w
   881     0167  02BA               	subwf	??_main,f
   882     0168  084B               	movf	_VR+1,w
   883     0169  3BBB               	subwfb	??_main+1,f
   884     016A  084C               	movf	_VR+2,w
   885     016B  3BBC               	subwfb	??_main+2,f
   886     016C  084D               	movf	_VR+3,w
   887     016D  3BBD               	subwfb	??_main+3,f
   888     016E  083D               	movf	??_main+3,w
   889     016F  00A3               	movwf	___lmul@multiplier+3
   890     0170  083C               	movf	??_main+2,w
   891     0171  00A2               	movwf	___lmul@multiplier+2
   892     0172  083B               	movf	??_main+1,w
   893     0173  00A1               	movwf	___lmul@multiplier+1
   894     0174  083A               	movf	??_main,w
   895     0175  00A0               	movwf	___lmul@multiplier
   896     0176  3000               	movlw	0
   897     0177  00A7               	movwf	___lmul@multiplicand+3
   898     0178  3000               	movlw	0
   899     0179  00A6               	movwf	___lmul@multiplicand+2
   900     017A  3003               	movlw	3
   901     017B  00A5               	movwf	___lmul@multiplicand+1
   902     017C  30E8               	movlw	232
   903     017D  00A4               	movwf	___lmul@multiplicand
   904     017E  3183  2393  3180   	fcall	___lmul
   905     0181  0020               	movlb	0	; select bank0
   906     0182  0823               	movf	?___lmul+3,w
   907     0183  00B3               	movwf	___lldiv@dividend+3
   908     0184  0822               	movf	?___lmul+2,w
   909     0185  00B2               	movwf	___lldiv@dividend+2
   910     0186  0821               	movf	?___lmul+1,w
   911     0187  00B1               	movwf	___lldiv@dividend+1
   912     0188  0820               	movf	?___lmul,w
   913     0189  00B0               	movwf	___lldiv@dividend
   914     018A  3182  226F  3180   	fcall	___lldiv
   915     018D  0020               	movlb	0	; select bank0
   916     018E  082F               	movf	?___lldiv+3,w
   917     018F  00C3               	movwf	_Rt+3
   918     0190  082E               	movf	?___lldiv+2,w
   919     0191  00C2               	movwf	_Rt+2
   920     0192  082D               	movf	?___lldiv+1,w
   921     0193  00C1               	movwf	_Rt+1
   922     0194  082C               	movf	?___lldiv,w
   923     0195  00C0               	movwf	_Rt
   924     0196                     l1255:
   925                           
   926                           ;main.c: 32:             ad2 = getADS();
   927     0196  3183  2311  3180   	fcall	_getADS
   928     0199  0020               	movlb	0	; select bank0
   929     019A  082D               	movf	?_getADS+1,w
   930     019B  00C9               	movwf	_ad2+1
   931     019C  082C               	movf	?_getADS,w
   932     019D  00C8               	movwf	_ad2
   933     019E                     l1257:
   934                           
   935                           ;main.c: 33:             t = ad2 / 12;
   936     019E  300C               	movlw	12
   937     019F  00A0               	movwf	___lwdiv@divisor
   938     01A0  3000               	movlw	0
   939     01A1  00A1               	movwf	___lwdiv@divisor+1
   940     01A2  0849               	movf	_ad2+1,w
   941     01A3  00A3               	movwf	___lwdiv@dividend+1
   942     01A4  0848               	movf	_ad2,w
   943     01A5  00A2               	movwf	___lwdiv@dividend
   944     01A6  3183  2356  3180   	fcall	___lwdiv
   945     01A9  0020               	movlb	0	; select bank0
   946     01AA  0821               	movf	?___lwdiv+1,w
   947     01AB  00F5               	movwf	_t+1
   948     01AC  0820               	movf	?___lwdiv,w
   949     01AD  00F4               	movwf	_t
   950     01AE                     l1259:
   951                           
   952                           ;main.c: 34:             add = 0;
   953     01AE  01BE               	clrf	main@add
   954     01AF  01BF               	clrf	main@add+1
   955                           
   956                           ;main.c: 35:         }
   957     01B0  2900               	goto	l1245
   958     01B1                     l1261:
   959                           
   960                           ;main.c: 37:         {;main.c: 38:             ad2 = getADS();
   961     01B1  3183  2311  3180   	fcall	_getADS
   962     01B4  0020               	movlb	0	; select bank0
   963     01B5  082D               	movf	?_getADS+1,w
   964     01B6  00C9               	movwf	_ad2+1
   965     01B7  082C               	movf	?_getADS,w
   966     01B8  00C8               	movwf	_ad2
   967                           
   968                           ;main.c: 39:             t = ad2 / 12;
   969     01B9  300C               	movlw	12
   970     01BA  00A0               	movwf	___lwdiv@divisor
   971     01BB  3000               	movlw	0
   972     01BC  00A1               	movwf	___lwdiv@divisor+1
   973     01BD  0849               	movf	_ad2+1,w
   974     01BE  00A3               	movwf	___lwdiv@dividend+1
   975     01BF  0848               	movf	_ad2,w
   976     01C0  00A2               	movwf	___lwdiv@dividend
   977     01C1  3183  2356  3180   	fcall	___lwdiv
   978     01C4  0020               	movlb	0	; select bank0
   979     01C5  0821               	movf	?___lwdiv+1,w
   980     01C6  00F5               	movwf	_t+1
   981     01C7  0820               	movf	?___lwdiv,w
   982     01C8  00F4               	movwf	_t
   983     01C9                     l1263:
   984                           
   985                           ;main.c: 41:             add++;
   986     01C9  3001               	movlw	1
   987     01CA  07BE               	addwf	main@add,f
   988     01CB  3000               	movlw	0
   989     01CC  3DBF               	addwfc	main@add+1,f
   990     01CD  2900               	goto	l1245
   991     01CE  28D8               	ljmp	start
   992     01CF                     __end_of_main:
   993                           
   994                           	psect	text1
   995     03E3                     __ptext1:	
   996 ;; *************** function _setup *****************
   997 ;; Defined at:
   998 ;;		line 5 in file "KF1.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0
  1012 ;;      Params:         0       0
  1013 ;;      Locals:         0       0
  1014 ;;      Temps:          0       0
  1015 ;;      Totals:         0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; Hardware stack levels required when called: 1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026     03E3                     _setup:	
  1027                           ;psect for function _setup
  1028                           
  1029     03E3                     l1137:	
  1030                           ;incstack = 0
  1031                           ; Regs used in _setup: [wreg]
  1032                           
  1033                           
  1034                           ;KF1.c: 7:     OSCCON = 0b01110000;
  1035     03E3  3070               	movlw	112
  1036     03E4  0021               	movlb	1	; select bank1
  1037     03E5  0099               	movwf	25	;volatile
  1038     03E6                     l1139:
  1039                           
  1040                           ;KF1.c: 10:     PORTAbits.RA1 = 0;
  1041     03E6  0020               	movlb	0	; select bank0
  1042     03E7  108C               	bcf	12,1	;volatile
  1043     03E8                     l1141:
  1044                           
  1045                           ;KF1.c: 11:     TRISAbits.TRISA1 = 0;
  1046     03E8  0021               	movlb	1	; select bank1
  1047     03E9  108C               	bcf	12,1	;volatile
  1048     03EA                     l1143:
  1049                           
  1050                           ;KF1.c: 14:     ANSELAbits.ANSA0 = 1;
  1051     03EA  0023               	movlb	3	; select bank3
  1052     03EB  140C               	bsf	12,0	;volatile
  1053     03EC                     l1145:
  1054                           
  1055                           ;KF1.c: 15:     ANSELAbits.ANSA4 = 1;
  1056     03EC  160C               	bsf	12,4	;volatile
  1057                           
  1058                           ;KF1.c: 18:     ADCON1 = 0x50;
  1059     03ED  3050               	movlw	80
  1060     03EE  0021               	movlb	1	; select bank1
  1061     03EF  009E               	movwf	30	;volatile
  1062     03F0                     l1147:
  1063                           
  1064                           ;KF1.c: 19:     PIE1bits.ADIE = 1;
  1065     03F0  1711               	bsf	17,6	;volatile
  1066     03F1                     l1149:
  1067                           
  1068                           ;KF1.c: 20:     PIR1bits.ADIF = 0;
  1069     03F1  0020               	movlb	0	; select bank0
  1070     03F2  1311               	bcf	17,6	;volatile
  1071     03F3                     l1151:
  1072                           
  1073                           ;KF1.c: 21:     ADCON0bits.GO = 0;
  1074     03F3  0021               	movlb	1	; select bank1
  1075     03F4  109D               	bcf	29,1	;volatile
  1076     03F5                     l1153:
  1077                           
  1078                           ;KF1.c: 22:     ADCON0bits.ADON = 1;
  1079     03F5  141D               	bsf	29,0	;volatile
  1080     03F6                     l120:
  1081     03F6  0008               	return
  1082     03F7                     __end_of_setup:
  1083                           
  1084                           	psect	text2
  1085     0311                     __ptext2:	
  1086 ;; *************** function _getADS *****************
  1087 ;; Defined at:
  1088 ;;		line 59 in file "main.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  acd             2   22[BANK0 ] unsigned int 
  1093 ;;  ac3             2   20[BANK0 ] unsigned int 
  1094 ;;  ac2             2   18[BANK0 ] unsigned int 
  1095 ;;  ac1             2   16[BANK0 ] unsigned int 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  2   12[BANK0 ] unsigned int 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0, pclath, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0
  1105 ;;      Params:         0       2
  1106 ;;      Locals:         0       8
  1107 ;;      Temps:          0       2
  1108 ;;      Totals:         0      12
  1109 ;;Total ram usage:       12 bytes
  1110 ;; Hardware stack levels used: 1
  1111 ;; Hardware stack levels required when called: 2
  1112 ;; This function calls:
  1113 ;;		___lwdiv
  1114 ;;		_getADCValue
  1115 ;; This function is called by:
  1116 ;;		_main
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120     0311                     _getADS:	
  1121                           ;psect for function _getADS
  1122                           
  1123     0311                     l1185:	
  1124                           ;incstack = 0
  1125                           ; Regs used in _getADS: [wreg+status,2+status,0+pclath+cstack]
  1126                           
  1127                           
  1128                           ;main.c: 61:     unsigned int ac1, ac2, ac3, acd;;main.c: 62:     ac1 = getADCValue(0x03
      +                          );
  1129     0311  3003               	movlw	3
  1130     0312  3182  22CA  3183   	fcall	_getADCValue
  1131     0315  0020               	movlb	0	; select bank0
  1132     0316  0821               	movf	?_getADCValue+1,w
  1133     0317  00B1               	movwf	getADS@ac1+1
  1134     0318  0820               	movf	?_getADCValue,w
  1135     0319  00B0               	movwf	getADS@ac1
  1136     031A                     l1187:
  1137                           
  1138                           ;main.c: 63:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1139     031A  3003               	movlw	3
  1140     031B                     u947:
  1141     031B  0B89               	decfsz	9,f
  1142     031C  2B1B               	goto	u947
  1143     031D  0000               	nop
  1144     031E                     l1189:
  1145                           
  1146                           ;main.c: 64:     ac2 = getADCValue(0x03);
  1147     031E  3003               	movlw	3
  1148     031F  3182  22CA  3183   	fcall	_getADCValue
  1149     0322  0020               	movlb	0	; select bank0
  1150     0323  0821               	movf	?_getADCValue+1,w
  1151     0324  00B3               	movwf	getADS@ac2+1
  1152     0325  0820               	movf	?_getADCValue,w
  1153     0326  00B2               	movwf	getADS@ac2
  1154                           
  1155                           ;main.c: 65:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1156     0327  3003               	movlw	3
  1157     0328                     u957:
  1158     0328  0B89               	decfsz	9,f
  1159     0329  2B28               	goto	u957
  1160     032A  0000               	nop
  1161     032B                     l1191:
  1162                           
  1163                           ;main.c: 66:     ac3 = getADCValue(0x03);
  1164     032B  3003               	movlw	3
  1165     032C  3182  22CA  3183   	fcall	_getADCValue
  1166     032F  0020               	movlb	0	; select bank0
  1167     0330  0821               	movf	?_getADCValue+1,w
  1168     0331  00B5               	movwf	getADS@ac3+1
  1169     0332  0820               	movf	?_getADCValue,w
  1170     0333  00B4               	movwf	getADS@ac3
  1171     0334                     l1193:
  1172                           
  1173                           ;main.c: 67:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1174     0334  3003               	movlw	3
  1175     0335                     u967:
  1176     0335  0B89               	decfsz	9,f
  1177     0336  2B35               	goto	u967
  1178     0337  0000               	nop
  1179                           
  1180                           ;main.c: 68:     acd = (ac1 + ac2 + ac3) / 3;
  1181     0338  3003               	movlw	3
  1182     0339  0020               	movlb	0	; select bank0
  1183     033A  00A0               	movwf	___lwdiv@divisor
  1184     033B  3000               	movlw	0
  1185     033C  00A1               	movwf	___lwdiv@divisor+1
  1186     033D  0832               	movf	getADS@ac2,w
  1187     033E  0730               	addwf	getADS@ac1,w
  1188     033F  00AE               	movwf	??_getADS
  1189     0340  0833               	movf	getADS@ac2+1,w
  1190     0341  3D31               	addwfc	getADS@ac1+1,w
  1191     0342  00AF               	movwf	??_getADS+1
  1192     0343  0834               	movf	getADS@ac3,w
  1193     0344  072E               	addwf	??_getADS,w
  1194     0345  00A2               	movwf	___lwdiv@dividend
  1195     0346  0835               	movf	getADS@ac3+1,w
  1196     0347  3D2F               	addwfc	??_getADS+1,w
  1197     0348  00A3               	movwf	___lwdiv@dividend+1
  1198     0349  3183  2356  3183   	fcall	___lwdiv
  1199     034C  0020               	movlb	0	; select bank0
  1200     034D  0821               	movf	?___lwdiv+1,w
  1201     034E  00B7               	movwf	getADS@acd+1
  1202     034F  0820               	movf	?___lwdiv,w
  1203     0350  00B6               	movwf	getADS@acd
  1204     0351                     l1195:
  1205                           
  1206                           ;main.c: 69:     return acd;
  1207     0351  0837               	movf	getADS@acd+1,w
  1208     0352  00AD               	movwf	?_getADS+1
  1209     0353  0836               	movf	getADS@acd,w
  1210     0354  00AC               	movwf	?_getADS
  1211     0355                     l65:
  1212     0355  0008               	return
  1213     0356                     __end_of_getADS:
  1214                           
  1215                           	psect	text3
  1216     02CA                     __ptext3:	
  1217 ;; *************** function _getADCValue *****************
  1218 ;; Defined at:
  1219 ;;		line 46 in file "main.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  channel         1    wreg     unsigned char 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  channel         1    9[BANK0 ] unsigned char 
  1224 ;;  acc             2   10[BANK0 ] int 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  2    0[BANK0 ] unsigned int 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0
  1234 ;;      Params:         0       2
  1235 ;;      Locals:         0       3
  1236 ;;      Temps:          0       7
  1237 ;;      Totals:         0      12
  1238 ;;Total ram usage:       12 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 1
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;;		_getADS
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249     02CA                     _getADCValue:	
  1250                           ;psect for function _getADCValue
  1251                           
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _getADCValue: [wreg+status,2+status,0]
  1255                           ;getADCValue@channel stored from wreg
  1256     02CA  0020               	movlb	0	; select bank0
  1257     02CB  00A9               	movwf	getADCValue@channel
  1258     02CC                     l1097:
  1259                           
  1260                           ;main.c: 46: unsigned int getADCValue(unsigned char channel);main.c: 47: {;main.c: 48:  
      +                             int acc;;main.c: 49:     ADRESH = 0;
  1261     02CC  0021               	movlb	1	; select bank1
  1262     02CD  019C               	clrf	28	;volatile
  1263                           
  1264                           ;main.c: 50:     ADRESL = 0;
  1265     02CE  019B               	clrf	27	;volatile
  1266     02CF                     l1099:
  1267                           
  1268                           ;main.c: 51:     ADCON0bits.CHS = channel;
  1269     02CF  0020               	movlb	0	; select bank0
  1270     02D0  0829               	movf	getADCValue@channel,w
  1271     02D1  00A2               	movwf	??_getADCValue
  1272     02D2  0DA2               	rlf	??_getADCValue,f
  1273     02D3  0DA2               	rlf	??_getADCValue,f
  1274     02D4  0021               	movlb	1	; select bank1
  1275     02D5  081D               	movf	29,w	;volatile
  1276     02D6  0020               	movlb	0	; select bank0
  1277     02D7  0622               	xorwf	??_getADCValue,w
  1278     02D8  3983               	andlw	-125
  1279     02D9  0622               	xorwf	??_getADCValue,w
  1280     02DA  0021               	movlb	1	; select bank1
  1281     02DB  009D               	movwf	29	;volatile
  1282     02DC                     l1101:
  1283                           
  1284                           ;main.c: 52:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1285     02DC  300D               	movlw	13
  1286     02DD  0020               	movlb	0	; select bank0
  1287     02DE  00A2               	movwf	??_getADCValue
  1288     02DF  30FB               	movlw	251
  1289     02E0                     u977:
  1290     02E0  0B89               	decfsz	9,f
  1291     02E1  2AE0               	goto	u977
  1292     02E2  0BA2               	decfsz	??_getADCValue,f
  1293     02E3  2AE0               	goto	u977
  1294     02E4  3200               	nop2
  1295     02E5                     l1103:
  1296                           
  1297                           ;main.c: 53:     ADCON0bits.GO = 1;
  1298     02E5  0021               	movlb	1	; select bank1
  1299     02E6  149D               	bsf	29,1	;volatile
  1300     02E7                     l59:	
  1301                           ;main.c: 54:     while (ADCON0bits.GO);
  1302                           
  1303     02E7  189D               	btfsc	29,1	;volatile
  1304     02E8  2AEA               	goto	u711
  1305     02E9  2AEB               	goto	u710
  1306     02EA                     u711:
  1307     02EA  2AE7               	goto	l59
  1308     02EB                     u710:
  1309     02EB                     l1105:
  1310                           
  1311                           ;main.c: 55:     acc = ADRESH;
  1312     02EB  081C               	movf	28,w	;volatile
  1313     02EC  0020               	movlb	0	; select bank0
  1314     02ED  00A2               	movwf	??_getADCValue
  1315     02EE  01A3               	clrf	??_getADCValue+1
  1316     02EF  0822               	movf	??_getADCValue,w
  1317     02F0  00AA               	movwf	getADCValue@acc
  1318     02F1  0823               	movf	??_getADCValue+1,w
  1319     02F2  00AB               	movwf	getADCValue@acc+1
  1320     02F3                     l1107:
  1321                           
  1322                           ;main.c: 56:     return (unsigned int)((acc << 2) | (ADRESL >> 6));
  1323     02F3  0021               	movlb	1	; select bank1
  1324     02F4  081B               	movf	27,w	;volatile
  1325     02F5  0020               	movlb	0	; select bank0
  1326     02F6  00A2               	movwf	??_getADCValue
  1327     02F7  3006               	movlw	6
  1328     02F8                     u725:
  1329     02F8  36A2               	lsrf	??_getADCValue,f
  1330     02F9  0B89               	decfsz	9,f
  1331     02FA  2AF8               	goto	u725
  1332     02FB  0822               	movf	??_getADCValue,w
  1333     02FC  00A3               	movwf	??_getADCValue+1
  1334     02FD  01A4               	clrf	??_getADCValue+2
  1335     02FE  082B               	movf	getADCValue@acc+1,w
  1336     02FF  00A6               	movwf	??_getADCValue+4
  1337     0300  082A               	movf	getADCValue@acc,w
  1338     0301  00A5               	movwf	??_getADCValue+3
  1339     0302  35A5               	lslf	??_getADCValue+3,f
  1340     0303  0DA6               	rlf	??_getADCValue+4,f
  1341     0304  35A5               	lslf	??_getADCValue+3,f
  1342     0305  0DA6               	rlf	??_getADCValue+4,f
  1343     0306  0823               	movf	??_getADCValue+1,w
  1344     0307  0425               	iorwf	??_getADCValue+3,w
  1345     0308  00A7               	movwf	??_getADCValue+5
  1346     0309  0824               	movf	??_getADCValue+2,w
  1347     030A  0426               	iorwf	??_getADCValue+4,w
  1348     030B  00A8               	movwf	??_getADCValue+6
  1349     030C  0827               	movf	??_getADCValue+5,w
  1350     030D  00A0               	movwf	?_getADCValue
  1351     030E  0828               	movf	??_getADCValue+6,w
  1352     030F  00A1               	movwf	?_getADCValue+1
  1353     0310                     l62:
  1354     0310  0008               	return
  1355     0311                     __end_of_getADCValue:
  1356                           
  1357                           	psect	text4
  1358     0356                     __ptext4:	
  1359 ;; *************** function ___lwdiv *****************
  1360 ;; Defined at:
  1361 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\lwdiv.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  divisor         2    0[BANK0 ] unsigned int 
  1364 ;;  dividend        2    2[BANK0 ] unsigned int 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  quotient        2    6[BANK0 ] unsigned int 
  1367 ;;  counter         1    5[BANK0 ] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  2    0[BANK0 ] unsigned int 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0
  1377 ;;      Params:         0       4
  1378 ;;      Locals:         0       3
  1379 ;;      Temps:          0       1
  1380 ;;      Totals:         0       8
  1381 ;;Total ram usage:        8 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 1
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;;		_getADS
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392     0356                     ___lwdiv:	
  1393                           ;psect for function ___lwdiv
  1394                           
  1395     0356                     l1111:	
  1396                           ;incstack = 0
  1397                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1398                           
  1399     0356  0020               	movlb	0	; select bank0
  1400     0357  01A6               	clrf	___lwdiv@quotient
  1401     0358  01A7               	clrf	___lwdiv@quotient+1
  1402     0359                     l1113:
  1403     0359  0820               	movf	___lwdiv@divisor,w
  1404     035A  0421               	iorwf	___lwdiv@divisor+1,w
  1405     035B  1903               	btfsc	3,2
  1406     035C  2B5E               	goto	u731
  1407     035D  2B5F               	goto	u730
  1408     035E                     u731:
  1409     035E  2B8E               	goto	l1133
  1410     035F                     u730:
  1411     035F                     l1115:
  1412     035F  01A5               	clrf	___lwdiv@counter
  1413     0360  0AA5               	incf	___lwdiv@counter,f
  1414     0361  2B6B               	goto	l1121
  1415     0362                     l1117:
  1416     0362  3001               	movlw	1
  1417     0363                     u745:
  1418     0363  35A0               	lslf	___lwdiv@divisor,f
  1419     0364  0DA1               	rlf	___lwdiv@divisor+1,f
  1420     0365  0B89               	decfsz	9,f
  1421     0366  2B63               	goto	u745
  1422     0367                     l1119:
  1423     0367  3001               	movlw	1
  1424     0368  00A4               	movwf	??___lwdiv
  1425     0369  0824               	movf	??___lwdiv,w
  1426     036A  07A5               	addwf	___lwdiv@counter,f
  1427     036B                     l1121:
  1428     036B  1FA1               	btfss	___lwdiv@divisor+1,7
  1429     036C  2B6E               	goto	u751
  1430     036D  2B6F               	goto	u750
  1431     036E                     u751:
  1432     036E  2B62               	goto	l1117
  1433     036F                     u750:
  1434     036F                     l1123:
  1435     036F  3001               	movlw	1
  1436     0370                     u765:
  1437     0370  35A6               	lslf	___lwdiv@quotient,f
  1438     0371  0DA7               	rlf	___lwdiv@quotient+1,f
  1439     0372  0B89               	decfsz	9,f
  1440     0373  2B70               	goto	u765
  1441     0374  0821               	movf	___lwdiv@divisor+1,w
  1442     0375  0223               	subwf	___lwdiv@dividend+1,w
  1443     0376  1D03               	skipz
  1444     0377  2B7A               	goto	u775
  1445     0378  0820               	movf	___lwdiv@divisor,w
  1446     0379  0222               	subwf	___lwdiv@dividend,w
  1447     037A                     u775:
  1448     037A  1C03               	skipc
  1449     037B  2B7D               	goto	u771
  1450     037C  2B7E               	goto	u770
  1451     037D                     u771:
  1452     037D  2B83               	goto	l1129
  1453     037E                     u770:
  1454     037E                     l1125:
  1455     037E  0820               	movf	___lwdiv@divisor,w
  1456     037F  02A2               	subwf	___lwdiv@dividend,f
  1457     0380  0821               	movf	___lwdiv@divisor+1,w
  1458     0381  3BA3               	subwfb	___lwdiv@dividend+1,f
  1459     0382                     l1127:
  1460     0382  1426               	bsf	___lwdiv@quotient,0
  1461     0383                     l1129:
  1462     0383  3001               	movlw	1
  1463     0384                     u785:
  1464     0384  36A1               	lsrf	___lwdiv@divisor+1,f
  1465     0385  0CA0               	rrf	___lwdiv@divisor,f
  1466     0386  0B89               	decfsz	9,f
  1467     0387  2B84               	goto	u785
  1468     0388                     l1131:
  1469     0388  3001               	movlw	1
  1470     0389  02A5               	subwf	___lwdiv@counter,f
  1471     038A  1D03               	btfss	3,2
  1472     038B  2B8D               	goto	u791
  1473     038C  2B8E               	goto	u790
  1474     038D                     u791:
  1475     038D  2B6F               	goto	l1123
  1476     038E                     u790:
  1477     038E                     l1133:
  1478     038E  0827               	movf	___lwdiv@quotient+1,w
  1479     038F  00A1               	movwf	?___lwdiv+1
  1480     0390  0826               	movf	___lwdiv@quotient,w
  1481     0391  00A0               	movwf	?___lwdiv
  1482     0392                     l471:
  1483     0392  0008               	return
  1484     0393                     __end_of___lwdiv:
  1485                           
  1486                           	psect	text5
  1487     0393                     __ptext5:	
  1488 ;; *************** function ___lmul *****************
  1489 ;; Defined at:
  1490 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul32.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1493 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  product         4    8[BANK0 ] unsigned long 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  4    0[BANK0 ] unsigned long 
  1498 ;; Registers used:
  1499 ;;		wreg, status,2, status,0
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0
  1505 ;;      Params:         0       8
  1506 ;;      Locals:         0       4
  1507 ;;      Temps:          0       0
  1508 ;;      Totals:         0      12
  1509 ;;Total ram usage:       12 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 1
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519     0393                     ___lmul:	
  1520                           ;psect for function ___lmul
  1521                           
  1522     0393                     l1199:	
  1523                           ;incstack = 0
  1524                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1525                           
  1526     0393  3000               	movlw	0
  1527     0394  0020               	movlb	0	; select bank0
  1528     0395  00AB               	movwf	___lmul@product+3
  1529     0396  3000               	movlw	0
  1530     0397  00AA               	movwf	___lmul@product+2
  1531     0398  3000               	movlw	0
  1532     0399  00A9               	movwf	___lmul@product+1
  1533     039A  3000               	movlw	0
  1534     039B  00A8               	movwf	___lmul@product
  1535     039C                     l1201:
  1536     039C  1C20               	btfss	___lmul@multiplier,0
  1537     039D  2B9F               	goto	u801
  1538     039E  2BA0               	goto	u800
  1539     039F                     u801:
  1540     039F  2BA8               	goto	l1205
  1541     03A0                     u800:
  1542     03A0                     l1203:
  1543     03A0  0824               	movf	___lmul@multiplicand,w
  1544     03A1  07A8               	addwf	___lmul@product,f
  1545     03A2  0825               	movf	___lmul@multiplicand+1,w
  1546     03A3  3DA9               	addwfc	___lmul@product+1,f
  1547     03A4  0826               	movf	___lmul@multiplicand+2,w
  1548     03A5  3DAA               	addwfc	___lmul@product+2,f
  1549     03A6  0827               	movf	___lmul@multiplicand+3,w
  1550     03A7  3DAB               	addwfc	___lmul@product+3,f
  1551     03A8                     l1205:
  1552     03A8  3001               	movlw	1
  1553     03A9                     u815:
  1554     03A9  35A4               	lslf	___lmul@multiplicand,f
  1555     03AA  0DA5               	rlf	___lmul@multiplicand+1,f
  1556     03AB  0DA6               	rlf	___lmul@multiplicand+2,f
  1557     03AC  0DA7               	rlf	___lmul@multiplicand+3,f
  1558     03AD  0B89               	decfsz	9,f
  1559     03AE  2BA9               	goto	u815
  1560     03AF                     l1207:
  1561     03AF  3001               	movlw	1
  1562     03B0                     u825:
  1563     03B0  36A3               	lsrf	___lmul@multiplier+3,f
  1564     03B1  0CA2               	rrf	___lmul@multiplier+2,f
  1565     03B2  0CA1               	rrf	___lmul@multiplier+1,f
  1566     03B3  0CA0               	rrf	___lmul@multiplier,f
  1567     03B4  0B89               	decfsz	9,f
  1568     03B5  2BB0               	goto	u825
  1569     03B6  0823               	movf	___lmul@multiplier+3,w
  1570     03B7  0422               	iorwf	___lmul@multiplier+2,w
  1571     03B8  0421               	iorwf	___lmul@multiplier+1,w
  1572     03B9  0420               	iorwf	___lmul@multiplier,w
  1573     03BA  1D03               	skipz
  1574     03BB  2BBD               	goto	u831
  1575     03BC  2BBE               	goto	u830
  1576     03BD                     u831:
  1577     03BD  2B9C               	goto	l1201
  1578     03BE                     u830:
  1579     03BE                     l1209:
  1580     03BE  082B               	movf	___lmul@product+3,w
  1581     03BF  00A3               	movwf	?___lmul+3
  1582     03C0  082A               	movf	___lmul@product+2,w
  1583     03C1  00A2               	movwf	?___lmul+2
  1584     03C2  0829               	movf	___lmul@product+1,w
  1585     03C3  00A1               	movwf	?___lmul+1
  1586     03C4  0828               	movf	___lmul@product,w
  1587     03C5  00A0               	movwf	?___lmul
  1588     03C6                     l205:
  1589     03C6  0008               	return
  1590     03C7                     __end_of___lmul:
  1591                           
  1592                           	psect	text6
  1593     026F                     __ptext6:	
  1594 ;; *************** function ___lldiv *****************
  1595 ;; Defined at:
  1596 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\__lldiv.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  divisor         4   12[BANK0 ] unsigned long 
  1599 ;;  dividend        4   16[BANK0 ] unsigned long 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  quotient        4   21[BANK0 ] unsigned long 
  1602 ;;  counter         1   25[BANK0 ] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  4   12[BANK0 ] unsigned long 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0
  1612 ;;      Params:         0       8
  1613 ;;      Locals:         0       5
  1614 ;;      Temps:          0       1
  1615 ;;      Totals:         0      14
  1616 ;;Total ram usage:       14 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626     026F                     ___lldiv:	
  1627                           ;psect for function ___lldiv
  1628                           
  1629     026F                     l1213:	
  1630                           ;incstack = 0
  1631                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1632                           
  1633     026F  3000               	movlw	0
  1634     0270  0020               	movlb	0	; select bank0
  1635     0271  00B8               	movwf	___lldiv@quotient+3
  1636     0272  3000               	movlw	0
  1637     0273  00B7               	movwf	___lldiv@quotient+2
  1638     0274  3000               	movlw	0
  1639     0275  00B6               	movwf	___lldiv@quotient+1
  1640     0276  3000               	movlw	0
  1641     0277  00B5               	movwf	___lldiv@quotient
  1642     0278  082F               	movf	___lldiv@divisor+3,w
  1643     0279  042E               	iorwf	___lldiv@divisor+2,w
  1644     027A  042D               	iorwf	___lldiv@divisor+1,w
  1645     027B  042C               	iorwf	___lldiv@divisor,w
  1646     027C  1903               	skipnz
  1647     027D  2A7F               	goto	u841
  1648     027E  2A80               	goto	u840
  1649     027F                     u841:
  1650     027F  2AC1               	goto	l1233
  1651     0280                     u840:
  1652     0280                     l1215:
  1653     0280  01B9               	clrf	___lldiv@counter
  1654     0281  0AB9               	incf	___lldiv@counter,f
  1655     0282  2A8E               	goto	l1219
  1656     0283                     l1217:
  1657     0283  3001               	movlw	1
  1658     0284                     u855:
  1659     0284  35AC               	lslf	___lldiv@divisor,f
  1660     0285  0DAD               	rlf	___lldiv@divisor+1,f
  1661     0286  0DAE               	rlf	___lldiv@divisor+2,f
  1662     0287  0DAF               	rlf	___lldiv@divisor+3,f
  1663     0288  0B89               	decfsz	9,f
  1664     0289  2A84               	goto	u855
  1665     028A  3001               	movlw	1
  1666     028B  00B4               	movwf	??___lldiv
  1667     028C  0834               	movf	??___lldiv,w
  1668     028D  07B9               	addwf	___lldiv@counter,f
  1669     028E                     l1219:
  1670     028E  1FAF               	btfss	___lldiv@divisor+3,7
  1671     028F  2A91               	goto	u861
  1672     0290  2A92               	goto	u860
  1673     0291                     u861:
  1674     0291  2A83               	goto	l1217
  1675     0292                     u860:
  1676     0292                     l1221:
  1677     0292  3001               	movlw	1
  1678     0293                     u875:
  1679     0293  35B5               	lslf	___lldiv@quotient,f
  1680     0294  0DB6               	rlf	___lldiv@quotient+1,f
  1681     0295  0DB7               	rlf	___lldiv@quotient+2,f
  1682     0296  0DB8               	rlf	___lldiv@quotient+3,f
  1683     0297  0B89               	decfsz	9,f
  1684     0298  2A93               	goto	u875
  1685     0299                     l1223:
  1686     0299  082F               	movf	___lldiv@divisor+3,w
  1687     029A  0233               	subwf	___lldiv@dividend+3,w
  1688     029B  1D03               	skipz
  1689     029C  2AA7               	goto	u885
  1690     029D  082E               	movf	___lldiv@divisor+2,w
  1691     029E  0232               	subwf	___lldiv@dividend+2,w
  1692     029F  1D03               	skipz
  1693     02A0  2AA7               	goto	u885
  1694     02A1  082D               	movf	___lldiv@divisor+1,w
  1695     02A2  0231               	subwf	___lldiv@dividend+1,w
  1696     02A3  1D03               	skipz
  1697     02A4  2AA7               	goto	u885
  1698     02A5  082C               	movf	___lldiv@divisor,w
  1699     02A6  0230               	subwf	___lldiv@dividend,w
  1700     02A7                     u885:
  1701     02A7  1C03               	skipc
  1702     02A8  2AAA               	goto	u881
  1703     02A9  2AAB               	goto	u880
  1704     02AA                     u881:
  1705     02AA  2AB4               	goto	l1229
  1706     02AB                     u880:
  1707     02AB                     l1225:
  1708     02AB  082C               	movf	___lldiv@divisor,w
  1709     02AC  02B0               	subwf	___lldiv@dividend,f
  1710     02AD  082D               	movf	___lldiv@divisor+1,w
  1711     02AE  3BB1               	subwfb	___lldiv@dividend+1,f
  1712     02AF  082E               	movf	___lldiv@divisor+2,w
  1713     02B0  3BB2               	subwfb	___lldiv@dividend+2,f
  1714     02B1  082F               	movf	___lldiv@divisor+3,w
  1715     02B2  3BB3               	subwfb	___lldiv@dividend+3,f
  1716     02B3                     l1227:
  1717     02B3  1435               	bsf	___lldiv@quotient,0
  1718     02B4                     l1229:
  1719     02B4  3001               	movlw	1
  1720     02B5                     u895:
  1721     02B5  36AF               	lsrf	___lldiv@divisor+3,f
  1722     02B6  0CAE               	rrf	___lldiv@divisor+2,f
  1723     02B7  0CAD               	rrf	___lldiv@divisor+1,f
  1724     02B8  0CAC               	rrf	___lldiv@divisor,f
  1725     02B9  0B89               	decfsz	9,f
  1726     02BA  2AB5               	goto	u895
  1727     02BB                     l1231:
  1728     02BB  3001               	movlw	1
  1729     02BC  02B9               	subwf	___lldiv@counter,f
  1730     02BD  1D03               	btfss	3,2
  1731     02BE  2AC0               	goto	u901
  1732     02BF  2AC1               	goto	u900
  1733     02C0                     u901:
  1734     02C0  2A92               	goto	l1221
  1735     02C1                     u900:
  1736     02C1                     l1233:
  1737     02C1  0838               	movf	___lldiv@quotient+3,w
  1738     02C2  00AF               	movwf	?___lldiv+3
  1739     02C3  0837               	movf	___lldiv@quotient+2,w
  1740     02C4  00AE               	movwf	?___lldiv+2
  1741     02C5  0836               	movf	___lldiv@quotient+1,w
  1742     02C6  00AD               	movwf	?___lldiv+1
  1743     02C7  0835               	movf	___lldiv@quotient,w
  1744     02C8  00AC               	movwf	?___lldiv
  1745     02C9                     l227:
  1746     02C9  0008               	return
  1747     02CA                     __end_of___lldiv:
  1748                           
  1749                           	psect	text7
  1750     03C7                     __ptext7:	
  1751 ;; *************** function _PWMinit *****************
  1752 ;; Defined at:
  1753 ;;		line 25 in file "KF1.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0
  1767 ;;      Params:         0       0
  1768 ;;      Locals:         0       0
  1769 ;;      Temps:          0       0
  1770 ;;      Totals:         0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781     03C7                     _PWMinit:	
  1782                           ;psect for function _PWMinit
  1783                           
  1784     03C7                     l1155:	
  1785                           ;incstack = 0
  1786                           ; Regs used in _PWMinit: [wreg+status,2+status,0]
  1787                           
  1788                           
  1789                           ;KF1.c: 27:     TRISAbits.TRISA2 = 1;
  1790     03C7  0021               	movlb	1	; select bank1
  1791     03C8  150C               	bsf	12,2	;volatile
  1792     03C9                     l1157:
  1793                           
  1794                           ;KF1.c: 28:     PWM1CON = 0x00;
  1795     03C9  002C               	movlb	12	; select bank12
  1796     03CA  0193               	clrf	19	;volatile
  1797     03CB                     l1159:
  1798                           
  1799                           ;KF1.c: 29:     PWM1CONbits.PWM1POL = 0;
  1800     03CB  1213               	bcf	19,4	;volatile
  1801     03CC                     l1161:
  1802                           
  1803                           ;KF1.c: 30:     PR2 = 200;
  1804     03CC  30C8               	movlw	200
  1805     03CD  0020               	movlb	0	; select bank0
  1806     03CE  009B               	movwf	27	;volatile
  1807     03CF                     l1163:
  1808                           
  1809                           ;KF1.c: 31:     PWM1DCH = 0x00;
  1810     03CF  002C               	movlb	12	; select bank12
  1811     03D0  0192               	clrf	18	;volatile
  1812     03D1                     l1165:
  1813                           
  1814                           ;KF1.c: 32:     PWM1DCL = 0x00;
  1815     03D1  0191               	clrf	17	;volatile
  1816     03D2                     l1167:
  1817                           
  1818                           ;KF1.c: 33:     INTCONbits.GIE = 1;
  1819     03D2  178B               	bsf	11,7	;volatile
  1820     03D3                     l1169:
  1821                           
  1822                           ;KF1.c: 34:     INTCONbits.PEIE = 1;
  1823     03D3  170B               	bsf	11,6	;volatile
  1824     03D4                     l1171:
  1825                           
  1826                           ;KF1.c: 35:     PIE1bits.TMR2IE = 1;
  1827     03D4  0021               	movlb	1	; select bank1
  1828     03D5  1491               	bsf	17,1	;volatile
  1829     03D6                     l1173:
  1830                           
  1831                           ;KF1.c: 36:     PIR1bits.TMR2IF = 0;
  1832     03D6  0020               	movlb	0	; select bank0
  1833     03D7  1091               	bcf	17,1	;volatile
  1834     03D8                     l1175:
  1835                           
  1836                           ;KF1.c: 37:     T2CONbits.T2CKPS = 3;
  1837     03D8  3003               	movlw	3
  1838     03D9  049C               	iorwf	28,f	;volatile
  1839     03DA                     l1177:
  1840                           
  1841                           ;KF1.c: 38:     PWM1CONbits.PWM1EN = 1;
  1842     03DA  002C               	movlb	12	; select bank12
  1843     03DB  1793               	bsf	19,7	;volatile
  1844     03DC                     l1179:
  1845                           
  1846                           ;KF1.c: 39:     TRISAbits.TRISA2 = 0;
  1847     03DC  0021               	movlb	1	; select bank1
  1848     03DD  110C               	bcf	12,2	;volatile
  1849     03DE                     l1181:
  1850                           
  1851                           ;KF1.c: 40:     PWM1CONbits.PWM1OE = 1;
  1852     03DE  002C               	movlb	12	; select bank12
  1853     03DF  1713               	bsf	19,6	;volatile
  1854     03E0                     l1183:
  1855                           
  1856                           ;KF1.c: 41:     T2CONbits.TMR2ON = 1;
  1857     03E0  0020               	movlb	0	; select bank0
  1858     03E1  151C               	bsf	28,2	;volatile
  1859     03E2                     l123:
  1860     03E2  0008               	return
  1861     03E3                     __end_of_PWMinit:
  1862                           
  1863                           	psect	intentry
  1864     0004                     __pintentry:	
  1865 ;; *************** function _ISR *****************
  1866 ;; Defined at:
  1867 ;;		line 72 in file "main.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  p               2    4[COMMON] short 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0
  1881 ;;      Params:         0       0
  1882 ;;      Locals:         2       0
  1883 ;;      Temps:          4       0
  1884 ;;      Totals:         6       0
  1885 ;;Total ram usage:        6 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		Interrupt level 1
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894     0004                     _ISR:
  1895                           
  1896                           ;incstack = 0
  1897     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1898                           
  1899                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  1900     0005  3180               	pagesel	$
  1901     0006                     i1l1041:
  1902                           
  1903                           ;main.c: 74:     short p;;main.c: 75:     if(PIR1bits.TMR2IF == 1)
  1904     0006  0020               	movlb	0	; select bank0
  1905     0007  1C91               	btfss	17,1	;volatile
  1906     0008  280A               	goto	u58_21
  1907     0009  280B               	goto	u58_20
  1908     000A                     u58_21:
  1909     000A  2840               	goto	i1l1067
  1910     000B                     u58_20:
  1911     000B                     i1l1043:
  1912                           
  1913                           ;main.c: 76:  {;main.c: 77:   PIE1bits.TMR2IE = 0;
  1914     000B  0021               	movlb	1	; select bank1
  1915     000C  1091               	bcf	17,1	;volatile
  1916                           
  1917                           ;main.c: 78:         T2CONbits.TMR2ON = 0;
  1918     000D  0020               	movlb	0	; select bank0
  1919     000E  111C               	bcf	28,2	;volatile
  1920                           
  1921                           ;main.c: 79:         PIR1bits.TMR2IF = 0;
  1922     000F  1091               	bcf	17,1	;volatile
  1923     0010                     i1l1045:
  1924                           
  1925                           ;main.c: 80:   if(PWM1DCH >= PR2)
  1926     0010  081B               	movf	27,w	;volatile
  1927     0011  002C               	movlb	12	; select bank12
  1928     0012  0212               	subwf	18,w	;volatile
  1929     0013  1C03               	skipc
  1930     0014  2816               	goto	u59_21
  1931     0015  2817               	goto	u59_20
  1932     0016                     u59_21:
  1933     0016  281C               	goto	i1l1049
  1934     0017                     u59_20:
  1935     0017                     i1l1047:
  1936                           
  1937                           ;main.c: 81:         {;main.c: 82:             p = -1;
  1938     0017  30FF               	movlw	255
  1939     0018  00FA               	movwf	ISR@p
  1940     0019  30FF               	movlw	255
  1941     001A  00FB               	movwf	ISR@p+1
  1942                           
  1943                           ;main.c: 83:   }
  1944     001B  2825               	goto	i1l1053
  1945     001C                     i1l1049:
  1946     001C  0812               	movf	18,w	;volatile
  1947     001D  1D03               	btfss	3,2
  1948     001E  2820               	goto	u60_21
  1949     001F  2821               	goto	u60_20
  1950     0020                     u60_21:
  1951     0020  2825               	goto	i1l1053
  1952     0021                     u60_20:
  1953     0021                     i1l1051:
  1954                           
  1955                           ;main.c: 85:         {;main.c: 86:    p = 1;
  1956     0021  3001               	movlw	1
  1957     0022  00FA               	movwf	ISR@p
  1958     0023  3000               	movlw	0
  1959     0024  00FB               	movwf	ISR@p+1
  1960     0025                     i1l1053:
  1961                           
  1962                           ;main.c: 88:         if(p == 1)
  1963     0025  037A               	decf	ISR@p,w
  1964     0026  047B               	iorwf	ISR@p+1,w
  1965     0027  1D03               	btfss	3,2
  1966     0028  282A               	goto	u61_21
  1967     0029  282B               	goto	u61_20
  1968     002A                     u61_21:
  1969     002A  2830               	goto	i1l1057
  1970     002B                     u61_20:
  1971     002B                     i1l1055:
  1972                           
  1973                           ;main.c: 89:         {;main.c: 90:             PWM1DCH++;
  1974     002B  3001               	movlw	1
  1975     002C  00F6               	movwf	??_ISR
  1976     002D  0876               	movf	??_ISR,w
  1977     002E  0792               	addwf	18,f	;volatile
  1978                           
  1979                           ;main.c: 91:         }
  1980     002F  283A               	goto	i1l1061
  1981     0030                     i1l1057:
  1982     0030  0A7A               	incf	ISR@p,w
  1983     0031  1D03               	skipz
  1984     0032  2837               	goto	u62_21
  1985     0033  0A7B               	incf	ISR@p+1,w
  1986     0034  1D03               	btfss	3,2
  1987     0035  2837               	goto	u62_21
  1988     0036  2838               	goto	u62_20
  1989     0037                     u62_21:
  1990     0037  283A               	goto	i1l1061
  1991     0038                     u62_20:
  1992     0038                     i1l1059:
  1993                           
  1994                           ;main.c: 93:         {;main.c: 94:             PWM1DCH--;
  1995     0038  3001               	movlw	1
  1996     0039  0292               	subwf	18,f	;volatile
  1997     003A                     i1l1061:
  1998                           
  1999                           ;main.c: 96:         TMR2 = 0x00;
  2000     003A  0020               	movlb	0	; select bank0
  2001     003B  019A               	clrf	26	;volatile
  2002     003C                     i1l1063:
  2003                           
  2004                           ;main.c: 97:   PIE1bits.TMR2IE = 1;
  2005     003C  0021               	movlb	1	; select bank1
  2006     003D  1491               	bsf	17,1	;volatile
  2007     003E                     i1l1065:
  2008                           
  2009                           ;main.c: 98:   T2CONbits.TMR2ON = 1;
  2010     003E  0020               	movlb	0	; select bank0
  2011     003F  151C               	bsf	28,2	;volatile
  2012     0040                     i1l1067:
  2013                           
  2014                           ;main.c: 101:     if(PIR1bits.ADIF == 1)
  2015     0040  1F11               	btfss	17,6	;volatile
  2016     0041  2843               	goto	u63_21
  2017     0042  2844               	goto	u63_20
  2018     0043                     u63_21:
  2019     0043  28D6               	goto	i1l87
  2020     0044                     u63_20:
  2021     0044                     i1l1069:
  2022                           
  2023                           ;main.c: 102:     {;main.c: 103:         PIE1bits.ADIE = 0;
  2024     0044  0021               	movlb	1	; select bank1
  2025     0045  1311               	bcf	17,6	;volatile
  2026                           
  2027                           ;main.c: 104:         PIR1bits.ADIF = 0;
  2028     0046  0020               	movlb	0	; select bank0
  2029     0047  1311               	bcf	17,6	;volatile
  2030     0048                     i1l1071:
  2031                           
  2032                           ;main.c: 106:         if(ADCON0bits.CHS == 0x00)
  2033     0048  0021               	movlb	1	; select bank1
  2034     0049  0C1D               	rrf	29,w	;volatile
  2035     004A  0C89               	rrf	9,f
  2036     004B  391F               	andlw	31
  2037     004C  3A00               	xorlw	0
  2038     004D  1D03               	skipz
  2039     004E  2850               	goto	u64_21
  2040     004F  2851               	goto	u64_20
  2041     0050                     u64_21:
  2042     0050  289D               	goto	i1l1085
  2043     0051                     u64_20:
  2044     0051                     i1l1073:
  2045                           
  2046                           ;main.c: 107:         {;main.c: 108:             for(i = 0; i < 80; i++)
  2047     0051  01F0               	clrf	_i
  2048     0052  01F1               	clrf	_i+1
  2049     0053                     i1l1075:
  2050     0053  0871               	movf	_i+1,w
  2051     0054  3A80               	xorlw	128
  2052     0055  00F6               	movwf	??_ISR
  2053     0056  3080               	movlw	128
  2054     0057  0276               	subwf	??_ISR,w
  2055     0058  1D03               	skipz
  2056     0059  285C               	goto	u65_25
  2057     005A  3050               	movlw	80
  2058     005B  0270               	subwf	_i,w
  2059     005C                     u65_25:
  2060     005C  1C03               	skipc
  2061     005D  285F               	goto	u65_21
  2062     005E  2860               	goto	u65_20
  2063     005F                     u65_21:
  2064     005F  2861               	goto	i1l1079
  2065     0060                     u65_20:
  2066     0060  28D4               	goto	i1l82
  2067     0061                     i1l1079:
  2068                           
  2069                           ;main.c: 109:             {;main.c: 110:                 if(Rt >= TABLE[i])
  2070     0061  0871               	movf	_i+1,w
  2071     0062  0085               	movwf	5
  2072     0063  0870               	movf	_i,w
  2073     0064  0084               	movwf	4
  2074     0065  3584               	lslf	4,f
  2075     0066  0D85               	rlf	5,f
  2076     0067  30CF               	movlw	low _TABLE
  2077     0068  0784               	addwf	4,f
  2078     0069  3001               	movlw	high _TABLE
  2079     006A  3D05               	addwfc	5,w
  2080     006B  3880               	iorlw	128
  2081     006C  0085               	movwf	5
  2082     006D  3F00               	moviw [0]fsr0
  2083     006E  00F6               	movwf	??_ISR
  2084     006F  3F01               	moviw [1]fsr0
  2085     0070  00F7               	movwf	??_ISR+1
  2086     0071  01F8               	clrf	??_ISR+2
  2087     0072  01F9               	clrf	??_ISR+3
  2088     0073  0879               	movf	??_ISR+3,w
  2089     0074  0020               	movlb	0	; select bank0
  2090     0075  0243               	subwf	_Rt+3,w
  2091     0076  1D03               	skipz
  2092     0077  2882               	goto	u66_25
  2093     0078  0878               	movf	??_ISR+2,w
  2094     0079  0242               	subwf	_Rt+2,w
  2095     007A  1D03               	skipz
  2096     007B  2882               	goto	u66_25
  2097     007C  0877               	movf	??_ISR+1,w
  2098     007D  0241               	subwf	_Rt+1,w
  2099     007E  1D03               	skipz
  2100     007F  2882               	goto	u66_25
  2101     0080  0876               	movf	??_ISR,w
  2102     0081  0240               	subwf	_Rt,w
  2103     0082                     u66_25:
  2104     0082  1C03               	skipc
  2105     0083  2885               	goto	u66_21
  2106     0084  2886               	goto	u66_20
  2107     0085                     u66_21:
  2108     0085  288B               	goto	i1l1083
  2109     0086                     u66_20:
  2110     0086                     i1l1081:
  2111                           
  2112                           ;main.c: 111:                 {;main.c: 112:                     v = i;
  2113     0086  0871               	movf	_i+1,w
  2114     0087  00F3               	movwf	_v+1
  2115     0088  0870               	movf	_i,w
  2116     0089  00F2               	movwf	_v
  2117                           
  2118                           ;main.c: 113:                     break;
  2119     008A  28D4               	goto	i1l82
  2120     008B                     i1l1083:
  2121                           
  2122                           ;main.c: 115:             }
  2123     008B  3001               	movlw	1
  2124     008C  07F0               	addwf	_i,f
  2125     008D  3000               	movlw	0
  2126     008E  3DF1               	addwfc	_i+1,f
  2127     008F  0871               	movf	_i+1,w
  2128     0090  3A80               	xorlw	128
  2129     0091  00F6               	movwf	??_ISR
  2130     0092  3080               	movlw	128
  2131     0093  0276               	subwf	??_ISR,w
  2132     0094  1D03               	skipz
  2133     0095  2898               	goto	u67_25
  2134     0096  3050               	movlw	80
  2135     0097  0270               	subwf	_i,w
  2136     0098                     u67_25:
  2137     0098  1C03               	skipc
  2138     0099  289B               	goto	u67_21
  2139     009A  289C               	goto	u67_20
  2140     009B                     u67_21:
  2141     009B  2861               	goto	i1l1079
  2142     009C                     u67_20:
  2143     009C  28D4               	goto	i1l82
  2144     009D                     i1l1085:
  2145     009D  0C1D               	rrf	29,w	;volatile
  2146     009E  0C89               	rrf	9,f
  2147     009F  391F               	andlw	31
  2148     00A0  3A03               	xorlw	3
  2149     00A1  1D03               	skipz
  2150     00A2  28A4               	goto	u68_21
  2151     00A3  28A5               	goto	u68_20
  2152     00A4                     u68_21:
  2153     00A4  28D4               	goto	i1l82
  2154     00A5                     u68_20:
  2155     00A5                     i1l1087:
  2156                           
  2157                           ;main.c: 118:         {;main.c: 119:             if(v <= (t - 2))
  2158     00A5  0874               	movf	_t,w
  2159     00A6  3EFE               	addlw	254
  2160     00A7  00F6               	movwf	??_ISR
  2161     00A8  30FF               	movlw	255
  2162     00A9  3D75               	addwfc	_t+1,w
  2163     00AA  00F7               	movwf	??_ISR+1
  2164     00AB  0877               	movf	??_ISR+1,w
  2165     00AC  3A80               	xorlw	128
  2166     00AD  00F8               	movwf	??_ISR+2
  2167     00AE  0873               	movf	_v+1,w
  2168     00AF  3A80               	xorlw	128
  2169     00B0  0278               	subwf	??_ISR+2,w
  2170     00B1  1D03               	skipz
  2171     00B2  28B5               	goto	u69_25
  2172     00B3  0872               	movf	_v,w
  2173     00B4  0276               	subwf	??_ISR,w
  2174     00B5                     u69_25:
  2175     00B5  1C03               	skipc
  2176     00B6  28B8               	goto	u69_21
  2177     00B7  28B9               	goto	u69_20
  2178     00B8                     u69_21:
  2179     00B8  28C2               	goto	i1l1093
  2180     00B9                     u69_20:
  2181     00B9                     i1l1089:
  2182                           
  2183                           ;main.c: 120:             {;main.c: 121:                 PORTAbits.RA1 = 1;
  2184     00B9  0020               	movlb	0	; select bank0
  2185     00BA  148C               	bsf	12,1	;volatile
  2186                           
  2187                           ;main.c: 122:                 PIE1bits.TMR2IE = 0;
  2188     00BB  0021               	movlb	1	; select bank1
  2189     00BC  1091               	bcf	17,1	;volatile
  2190     00BD                     i1l1091:
  2191                           
  2192                           ;main.c: 123:                 PWM1DCH = PR2;
  2193     00BD  0020               	movlb	0	; select bank0
  2194     00BE  081B               	movf	27,w	;volatile
  2195     00BF  002C               	movlb	12	; select bank12
  2196     00C0  0092               	movwf	18	;volatile
  2197                           
  2198                           ;main.c: 124:             }
  2199     00C1  28D4               	goto	i1l82
  2200     00C2                     i1l1093:
  2201     00C2  0875               	movf	_t+1,w
  2202     00C3  3A80               	xorlw	128
  2203     00C4  00F6               	movwf	??_ISR
  2204     00C5  0873               	movf	_v+1,w
  2205     00C6  3A80               	xorlw	128
  2206     00C7  0276               	subwf	??_ISR,w
  2207     00C8  1D03               	skipz
  2208     00C9  28CC               	goto	u70_25
  2209     00CA  0872               	movf	_v,w
  2210     00CB  0274               	subwf	_t,w
  2211     00CC                     u70_25:
  2212     00CC  1803               	skipnc
  2213     00CD  28CF               	goto	u70_21
  2214     00CE  28D0               	goto	u70_20
  2215     00CF                     u70_21:
  2216     00CF  28D4               	goto	i1l82
  2217     00D0                     u70_20:
  2218     00D0                     i1l1095:
  2219                           
  2220                           ;main.c: 126:             {;main.c: 127:                 PORTAbits.RA1 = 0;
  2221     00D0  0020               	movlb	0	; select bank0
  2222     00D1  108C               	bcf	12,1	;volatile
  2223                           
  2224                           ;main.c: 128:                 PIE1bits.TMR2IE = 1;
  2225     00D2  0021               	movlb	1	; select bank1
  2226     00D3  1491               	bsf	17,1	;volatile
  2227     00D4                     i1l82:
  2228                           
  2229                           ;main.c: 132:         PIE1bits.ADIE = 1;
  2230     00D4  0021               	movlb	1	; select bank1
  2231     00D5  1711               	bsf	17,6	;volatile
  2232     00D6                     i1l87:
  2233     00D6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2234     00D7  0009               	retfie
  2235     00D8                     __end_of_ISR:
  2236     007E                     btemp	set	126	;btemp
  2237     007E                     int$flags	set	126
  2238     007E                     wtemp0	set	126
  2239                           
  2240                           	psect	config
  2241                           
  2242                           ;Config register CONFIG1 @ 0x8007
  2243                           ;	Oscillator Selection Bits
  2244                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2245                           ;	Watchdog Timer Enable
  2246                           ;	WDTE = OFF, WDT disabled
  2247                           ;	Power-up Timer Enable
  2248                           ;	PWRTE = OFF, PWRT disabled
  2249                           ;	MCLR Pin Function Select
  2250                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2251                           ;	Flash Program Memory Code Protection
  2252                           ;	CP = OFF, Program memory code protection is disabled
  2253                           ;	Brown-out Reset Enable
  2254                           ;	BOREN = OFF, Brown-out Reset disabled
  2255                           ;	Clock Out Enable
  2256                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2257     8007                     	org	32775
  2258     8007  39E4               	dw	14820
  2259                           
  2260                           ;Config register CONFIG2 @ 0x8008
  2261                           ;	Flash Memory Self-Write Protection
  2262                           ;	WRT = OFF, Write protection off
  2263                           ;	Stack Overflow/Underflow Reset Enable
  2264                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  2265                           ;	Brown-out Reset Voltage Selection
  2266                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2267                           ;	Low-Power Brown Out Reset
  2268                           ;	LPBOR = OFF, Low-Power BOR is disabled
  2269                           ;	Low-Voltage Programming Enable
  2270                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2271     8008                     	org	32776
  2272     8008  1DFF               	dw	7679

Data Sizes:
    Strings     0
    Constant    160
    Data        0
    BSS         20
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            48     32      46

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    _getADS->_getADCValue
    ___lldiv->___lmul

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2785
                                             26 BANK0      6     6      0
                            _PWMinit
                            ___lldiv
                             ___lmul
                            ___lwdiv
                        _getADCValue
                             _getADS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getADS                                              12    10      2     982
                                             12 BANK0     12    10      2
                            ___lwdiv
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         12    10      2      65
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     781
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     421
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWMinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  6     6      0      46
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMinit
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___lwdiv
   _getADCValue
   _getADS
     ___lwdiv
     _getADCValue
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              30      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            30      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               30     20      2E       5       95.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      3A       6        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
DATA                 0      0      3A       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Nov 20 16:54:02 2023

                      _i 0070                        _t 0074                        _v 0072  
                     l62 0310                       l65 0355                       l59 02E7  
                     _VR 004A                       _Rt 0040                      l120 03F6  
                    l123 03E2                      l205 03C6                      l227 02C9  
                    l471 0392                      _PR2 001B                      _ISR 0004  
                    u710 02EB                      u711 02EA                      u800 03A0  
                    u801 039F                      u730 035F                      u731 035E  
                    u900 02C1                      u901 02C0                      u725 02F8  
                    u830 03BE                      u750 036F                      u910 0108  
                    u831 03BD                      u815 03A9                      u751 036E  
                    u911 0107                      u840 0280                      u920 014C  
                    u841 027F                      u825 03B0                      u745 0363  
                    u770 037E                      u771 037D                      u860 0292  
                    u861 0291                      u765 0370                      u925 0148  
                    u790 038E                      u855 0284                      u791 038D  
                    u775 037A                      u880 02AB                      u881 02AA  
                    u785 0384                      u937 00F9                      u875 0293  
                    u947 031B                      u885 02A7                      u957 0328  
                    u895 02B5                      u967 0335                      u977 02E0  
                    _ad1 0044                      _ad2 0048                      wreg 0009  
                   ?_ISR 0076                     ISR@p 007A                     l1101 02DC  
                   l1111 0356                     l1103 02E5                     l1201 039C  
                   l1121 036B                     l1113 0359                     l1105 02EB  
                   l1203 03A0                     l1131 0388                     l1123 036F  
                   l1115 035F                     l1107 02F3                     l1221 0292  
                   l1213 026F                     l1205 03A8                     l1125 037E  
                   l1117 0362                     l1133 038E                     l1141 03E8  
                   l1231 02BB                     l1223 0299                     l1215 0280  
                   l1207 03AF                     l1127 0382                     l1119 0367  
                   l1151 03F3                     l1143 03EA                     l1161 03CC  
                   l1225 02AB                     l1217 0283                     l1233 02C1  
                   l1209 03BE                     l1129 0383                     l1153 03F5  
                   l1145 03EC                     l1137 03E3                     l1241 00F0  
                   l1171 03D4                     l1163 03CF                     l1155 03C7  
                   l1227 02B3                     l1219 028E                     l1147 03F0  
                   l1139 03E6                     l1251 012B                     l1243 00F3  
                   l1181 03DE                     l1173 03D6                     l1165 03D1  
                   l1157 03C9                     l1229 02B4                     l1149 03F1  
                   l1253 0156                     l1261 01B1                     l1245 0100  
                   l1237 00EA                     l1183 03E0                     l1175 03D8  
                   l1167 03D2                     l1159 03CB                     l1191 032B  
                   l1263 01C9                     l1255 0196                     l1247 0108  
                   l1239 00ED                     l1177 03DA                     l1169 03D3  
                   l1097 02CC                     l1193 0334                     l1185 0311  
                   l1257 019E                     l1249 0113                     l1179 03DC  
                   l1099 02CF                     l1195 0351                     l1187 031A  
                   l1259 01AE                     l1189 031E                     l1199 0393  
                   i1l82 00D4                     i1l87 00D6                     _TMR2 001A  
                   _main 00EA                     fsr0h 0005                     indf0 0000  
                   fsr0l 0004                     btemp 007E                     start 00D8  
        __end_of_PWMinit 03E3                    ??_ISR 0076                    ?_main 0076  
        __end_of___lldiv 02CA          __end_of___lwdiv 0393                    _TABLE 01CF  
                  u60_20 0021                    u60_21 0020                    u61_20 002B  
                  u61_21 002A                    u70_20 00D0                    u62_20 0038  
                  u70_21 00CF                    u62_21 0037                    u70_25 00CC  
                  u63_20 0044                    u63_21 0043                    u64_20 0051  
                  u64_21 0050                    u65_20 0060                    u65_21 005F  
                  u65_25 005C                    u66_20 0086                    u58_20 000B  
                  u66_21 0085                    u58_21 000A                    u66_25 0082  
                  u67_20 009C                    u59_20 0017                    u67_21 009B  
                  u59_21 0016                    u67_25 0098                    u68_20 00A5  
                  u68_21 00A4                    u69_20 00B9                    u69_21 00B8  
                  u69_25 00B5      ___lmul@multiplicand 0024                    _setup 03E3  
                  status 0003                    wtemp0 007E          __initialization 00D9  
           __end_of_main 01CF           getADCValue@acc 002A                   ??_main 003A  
                 _ADCON1 009E                   _ADRESH 009C                   _ADRESL 009B  
                 ?_setup 0076                   i1l1041 0006                   i1l1051 0021  
                 i1l1043 000B                   i1l1061 003A                   i1l1053 0025  
                 i1l1045 0010                   i1l1071 0048                   i1l1063 003C  
                 i1l1055 002B                   i1l1047 0017                   i1l1081 0086  
                 i1l1073 0051                   i1l1065 003E                   i1l1057 0030  
                 i1l1049 001C                   i1l1091 00BD                   i1l1083 008B  
                 i1l1075 0053                   i1l1059 0038                   i1l1067 0040  
                 i1l1093 00C2                   i1l1085 009D                   i1l1069 0044  
                 i1l1095 00D0                   i1l1087 00A5                   i1l1079 0061  
                 i1l1089 00B9                ??_PWMinit 0020                   _OSCCON 0099  
                 ___lmul 0393                   _getADS 0311                ??___lldiv 0034  
              ??___lwdiv 0024  __end_of__initialization 00E7       getADCValue@channel 0029  
          __end_of_TABLE 026F           __pcstackCOMMON 0076            __end_of_setup 03F7  
                ??_setup 0020               __pbssBANK0 0040               __pmaintext 00EA  
                ?___lmul 0020                  ?_getADS 002C               __pintentry 0004  
         ___lmul@product 0028                  _PWM1DCH 0612                  _PWM1DCL 0611  
                _PWM1CON 0613                  _PWMinit 03C7            ??_getADCValue 0022  
                ___lldiv 026F                  ___lwdiv 0356                  __ptext1 03E3  
                __ptext2 0311                  __ptext3 02CA                  __ptext4 0356  
                __ptext5 0393                  __ptext6 026F                  __ptext7 03C7  
              _T2CONbits 001C                  main@add 003E                  clrloop0 03F8  
   end_of_initialization 00E7          ___lldiv@divisor 002C          ___lldiv@counter 0039  
    __end_of_getADCValue 0311                _PORTAbits 000C                _TRISAbits 008C  
         __end_of___lmul 03C7           __end_of_getADS 0356      start_initialization 00D9  
            __end_of_ISR 00D8              _getADCValue 02CA                 ??___lmul 0028  
               ??_getADS 002E              __pbssCOMMON 0070                ___latbits 0000  
          __pcstackBANK0 0020                 ?_PWMinit 0076         ___lwdiv@dividend 0022  
               ?___lldiv 002C                 ?___lwdiv 0020                getADS@ac1 0030  
              getADS@ac2 0032                getADS@ac3 0034                getADS@acd 0036  
       ___lwdiv@quotient 0026                clear_ram0 03F7                 _PIE1bits 0091  
               _PIR1bits 0011               _ADCON0bits 009D        ___lmul@multiplier 0020  
             _ANSELAbits 018C          ___lwdiv@divisor 0020          ___lwdiv@counter 0025  
           ?_getADCValue 0020                 int$flags 007E               _INTCONbits 000B  
            _PWM1CONbits 0613                 intlevel1 0000         ___lldiv@dividend 0030  
          __pstringtext1 01CF         ___lldiv@quotient 0035  
