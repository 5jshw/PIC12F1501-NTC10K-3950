

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 22 13:59:59 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	12F1501
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 07/09/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC12F1501 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     008C                     	;# 
    83     0091                     	;# 
    84     0092                     	;# 
    85     0093                     	;# 
    86     0095                     	;# 
    87     0096                     	;# 
    88     0097                     	;# 
    89     0099                     	;# 
    90     009A                     	;# 
    91     009B                     	;# 
    92     009B                     	;# 
    93     009C                     	;# 
    94     009D                     	;# 
    95     009E                     	;# 
    96     009F                     	;# 
    97     010C                     	;# 
    98     0111                     	;# 
    99     0112                     	;# 
   100     0115                     	;# 
   101     0116                     	;# 
   102     0117                     	;# 
   103     0118                     	;# 
   104     0119                     	;# 
   105     011D                     	;# 
   106     018C                     	;# 
   107     0191                     	;# 
   108     0191                     	;# 
   109     0192                     	;# 
   110     0193                     	;# 
   111     0193                     	;# 
   112     0194                     	;# 
   113     0195                     	;# 
   114     0196                     	;# 
   115     0197                     	;# 
   116     020C                     	;# 
   117     0391                     	;# 
   118     0392                     	;# 
   119     0393                     	;# 
   120     0498                     	;# 
   121     0498                     	;# 
   122     0499                     	;# 
   123     049A                     	;# 
   124     049B                     	;# 
   125     049B                     	;# 
   126     049C                     	;# 
   127     049D                     	;# 
   128     049E                     	;# 
   129     049F                     	;# 
   130     0611                     	;# 
   131     0612                     	;# 
   132     0613                     	;# 
   133     0613                     	;# 
   134     0614                     	;# 
   135     0615                     	;# 
   136     0616                     	;# 
   137     0616                     	;# 
   138     0617                     	;# 
   139     0618                     	;# 
   140     0619                     	;# 
   141     0619                     	;# 
   142     061A                     	;# 
   143     061B                     	;# 
   144     061C                     	;# 
   145     061C                     	;# 
   146     0691                     	;# 
   147     0692                     	;# 
   148     0693                     	;# 
   149     0694                     	;# 
   150     0695                     	;# 
   151     0F0F                     	;# 
   152     0F10                     	;# 
   153     0F11                     	;# 
   154     0F12                     	;# 
   155     0F13                     	;# 
   156     0F14                     	;# 
   157     0F15                     	;# 
   158     0F16                     	;# 
   159     0F17                     	;# 
   160     0F18                     	;# 
   161     0F19                     	;# 
   162     0F1A                     	;# 
   163     0F1B                     	;# 
   164     0F1C                     	;# 
   165     0F1D                     	;# 
   166     0F1E                     	;# 
   167     0F1F                     	;# 
   168     0FE3                     	;# 
   169     0FE4                     	;# 
   170     0FE5                     	;# 
   171     0FE6                     	;# 
   172     0FE7                     	;# 
   173     0FE8                     	;# 
   174     0FE9                     	;# 
   175     0FEA                     	;# 
   176     0FEB                     	;# 
   177     0FED                     	;# 
   178     0FEE                     	;# 
   179     0FEF                     	;# 
   180     0000                     	;# 
   181     0001                     	;# 
   182     0002                     	;# 
   183     0003                     	;# 
   184     0004                     	;# 
   185     0005                     	;# 
   186     0006                     	;# 
   187     0007                     	;# 
   188     0008                     	;# 
   189     0009                     	;# 
   190     000A                     	;# 
   191     000B                     	;# 
   192     000C                     	;# 
   193     0011                     	;# 
   194     0012                     	;# 
   195     0013                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     008C                     	;# 
   206     0091                     	;# 
   207     0092                     	;# 
   208     0093                     	;# 
   209     0095                     	;# 
   210     0096                     	;# 
   211     0097                     	;# 
   212     0099                     	;# 
   213     009A                     	;# 
   214     009B                     	;# 
   215     009B                     	;# 
   216     009C                     	;# 
   217     009D                     	;# 
   218     009E                     	;# 
   219     009F                     	;# 
   220     010C                     	;# 
   221     0111                     	;# 
   222     0112                     	;# 
   223     0115                     	;# 
   224     0116                     	;# 
   225     0117                     	;# 
   226     0118                     	;# 
   227     0119                     	;# 
   228     011D                     	;# 
   229     018C                     	;# 
   230     0191                     	;# 
   231     0191                     	;# 
   232     0192                     	;# 
   233     0193                     	;# 
   234     0193                     	;# 
   235     0194                     	;# 
   236     0195                     	;# 
   237     0196                     	;# 
   238     0197                     	;# 
   239     020C                     	;# 
   240     0391                     	;# 
   241     0392                     	;# 
   242     0393                     	;# 
   243     0498                     	;# 
   244     0498                     	;# 
   245     0499                     	;# 
   246     049A                     	;# 
   247     049B                     	;# 
   248     049B                     	;# 
   249     049C                     	;# 
   250     049D                     	;# 
   251     049E                     	;# 
   252     049F                     	;# 
   253     0611                     	;# 
   254     0612                     	;# 
   255     0613                     	;# 
   256     0613                     	;# 
   257     0614                     	;# 
   258     0615                     	;# 
   259     0616                     	;# 
   260     0616                     	;# 
   261     0617                     	;# 
   262     0618                     	;# 
   263     0619                     	;# 
   264     0619                     	;# 
   265     061A                     	;# 
   266     061B                     	;# 
   267     061C                     	;# 
   268     061C                     	;# 
   269     0691                     	;# 
   270     0692                     	;# 
   271     0693                     	;# 
   272     0694                     	;# 
   273     0695                     	;# 
   274     0F0F                     	;# 
   275     0F10                     	;# 
   276     0F11                     	;# 
   277     0F12                     	;# 
   278     0F13                     	;# 
   279     0F14                     	;# 
   280     0F15                     	;# 
   281     0F16                     	;# 
   282     0F17                     	;# 
   283     0F18                     	;# 
   284     0F19                     	;# 
   285     0F1A                     	;# 
   286     0F1B                     	;# 
   287     0F1C                     	;# 
   288     0F1D                     	;# 
   289     0F1E                     	;# 
   290     0F1F                     	;# 
   291     0FE3                     	;# 
   292     0FE4                     	;# 
   293     0FE5                     	;# 
   294     0FE6                     	;# 
   295     0FE7                     	;# 
   296     0FE8                     	;# 
   297     0FE9                     	;# 
   298     0FEA                     	;# 
   299     0FEB                     	;# 
   300     0FED                     	;# 
   301     0FEE                     	;# 
   302     0FEF                     	;# 
   303                           
   304                           	psect	stringtext1
   305     019F                     __pstringtext1:
   306     019F                     _TABLE:
   307     019F  34F0               	retlw	240
   308     01A0  3425               	retlw	37
   309     01A1  34CE               	retlw	206
   310     01A2  3423               	retlw	35
   311     01A3  34CE               	retlw	206
   312     01A4  3421               	retlw	33
   313     01A5  34EC               	retlw	236
   314     01A6  341F               	retlw	31
   315     01A7  342A               	retlw	42
   316     01A8  341E               	retlw	30
   317     01A9  3482               	retlw	130
   318     01AA  341C               	retlw	28
   319     01AB  34F4               	retlw	244
   320     01AC  341A               	retlw	26
   321     01AD  347E               	retlw	126
   322     01AE  3419               	retlw	25
   323     01AF  3420               	retlw	32
   324     01B0  3418               	retlw	24
   325     01B1  349E               	retlw	158
   326     01B2  3415               	retlw	21
   327     01B3  347A               	retlw	122
   328     01B4  3414               	retlw	20
   329     01B5  3466               	retlw	102
   330     01B6  3413               	retlw	19
   331     01B7  3464               	retlw	100
   332     01B8  3412               	retlw	18
   333     01B9  3470               	retlw	112
   334     01BA  3411               	retlw	17
   335     01BB  348A               	retlw	138
   336     01BC  3410               	retlw	16
   337     01BD  34B0               	retlw	176
   338     01BE  340F               	retlw	15
   339     01BF  34E4               	retlw	228
   340     01C0  340E               	retlw	14
   341     01C1  3424               	retlw	36
   342     01C2  340E               	retlw	14
   343     01C3  346E               	retlw	110
   344     01C4  340D               	retlw	13
   345     01C5  34C2               	retlw	194
   346     01C6  340C               	retlw	12
   347     01C7  3420               	retlw	32
   348     01C8  340C               	retlw	12
   349     01C9  3486               	retlw	134
   350     01CA  340B               	retlw	11
   351     01CB  34F6               	retlw	246
   352     01CC  340A               	retlw	10
   353     01CD  346C               	retlw	108
   354     01CE  340A               	retlw	10
   355     01CF  34EC               	retlw	236
   356     01D0  3409               	retlw	9
   357     01D1  3472               	retlw	114
   358     01D2  3409               	retlw	9
   359     01D3  34FE               	retlw	254
   360     01D4  3408               	retlw	8
   361     01D5  3490               	retlw	144
   362     01D6  3408               	retlw	8
   363     01D7  3428               	retlw	40
   364     01D8  3408               	retlw	8
   365     01D9  34C6               	retlw	198
   366     01DA  3407               	retlw	7
   367     01DB  3469               	retlw	105
   368     01DC  3407               	retlw	7
   369     01DD  3411               	retlw	17
   370     01DE  3407               	retlw	7
   371     01DF  34BE               	retlw	190
   372     01E0  3406               	retlw	6
   373     01E1  346E               	retlw	110
   374     01E2  3406               	retlw	6
   375     01E3  3423               	retlw	35
   376     01E4  3406               	retlw	6
   377     01E5  34DC               	retlw	220
   378     01E6  3405               	retlw	5
   379     01E7  3498               	retlw	152
   380     01E8  3405               	retlw	5
   381     01E9  3458               	retlw	88
   382     01EA  3405               	retlw	5
   383     01EB  341B               	retlw	27
   384     01EC  3405               	retlw	5
   385     01ED  34E1               	retlw	225
   386     01EE  3404               	retlw	4
   387     01EF  34AA               	retlw	170
   388     01F0  3404               	retlw	4
   389     01F1  3476               	retlw	118
   390     01F2  3404               	retlw	4
   391     01F3  3444               	retlw	68
   392     01F4  3404               	retlw	4
   393     01F5  3415               	retlw	21
   394     01F6  3404               	retlw	4
   395     01F7  34E8               	retlw	232
   396     01F8  3403               	retlw	3
   397     01F9  34BD               	retlw	189
   398     01FA  3403               	retlw	3
   399     01FB  3494               	retlw	148
   400     01FC  3403               	retlw	3
   401     01FD  346D               	retlw	109
   402     01FE  3403               	retlw	3
   403     01FF  3448               	retlw	72
   404     0200  3403               	retlw	3
   405     0201  3425               	retlw	37
   406     0202  3403               	retlw	3
   407     0203  3404               	retlw	4
   408     0204  3403               	retlw	3
   409     0205  34E4               	retlw	228
   410     0206  3402               	retlw	2
   411     0207  34C5               	retlw	197
   412     0208  3402               	retlw	2
   413     0209  34A8               	retlw	168
   414     020A  3402               	retlw	2
   415     020B  348D               	retlw	141
   416     020C  3402               	retlw	2
   417     020D  3472               	retlw	114
   418     020E  3402               	retlw	2
   419     020F  3459               	retlw	89
   420     0210  3402               	retlw	2
   421     0211  3441               	retlw	65
   422     0212  3402               	retlw	2
   423     0213  342A               	retlw	42
   424     0214  3402               	retlw	2
   425     0215  3414               	retlw	20
   426     0216  3402               	retlw	2
   427     0217  34FF               	retlw	255
   428     0218  3401               	retlw	1
   429     0219  34EB               	retlw	235
   430     021A  3401               	retlw	1
   431     021B  34D8               	retlw	216
   432     021C  3401               	retlw	1
   433     021D  34C6               	retlw	198
   434     021E  3401               	retlw	1
   435     021F  34B4               	retlw	180
   436     0220  3401               	retlw	1
   437     0221  34A4               	retlw	164
   438     0222  3401               	retlw	1
   439     0223  3494               	retlw	148
   440     0224  3401               	retlw	1
   441     0225  3484               	retlw	132
   442     0226  3401               	retlw	1
   443     0227  3476               	retlw	118
   444     0228  3401               	retlw	1
   445     0229  3468               	retlw	104
   446     022A  3401               	retlw	1
   447     022B  345A               	retlw	90
   448     022C  3401               	retlw	1
   449     022D  344E               	retlw	78
   450     022E  3401               	retlw	1
   451     022F  3441               	retlw	65
   452     0230  3401               	retlw	1
   453     0231  3435               	retlw	53
   454     0232  3401               	retlw	1
   455     0233  342A               	retlw	42
   456     0234  3401               	retlw	1
   457     0235  341F               	retlw	31
   458     0236  3401               	retlw	1
   459     0237  3415               	retlw	21
   460     0238  3401               	retlw	1
   461     0239  340B               	retlw	11
   462     023A  3401               	retlw	1
   463     023B  3402               	retlw	2
   464     023C  3401               	retlw	1
   465     023D  34F8               	retlw	248
   466     023E  3400               	retlw	0
   467     023F                     __end_of_TABLE:
   468     000B                     _INTCONbits	set	11
   469     000C                     _PORTAbits	set	12
   470     001A                     _TMR2	set	26
   471     001B                     _PR2	set	27
   472     001C                     _T2CONbits	set	28
   473     0011                     _PIR1bits	set	17
   474     009E                     _ADCON1	set	158
   475     008C                     _TRISAbits	set	140
   476     0099                     _OSCCON	set	153
   477     0091                     _PIE1bits	set	145
   478     009B                     _ADRESL	set	155
   479     009C                     _ADRESH	set	156
   480     009D                     _ADCON0bits	set	157
   481     018C                     _ANSELAbits	set	396
   482     0611                     _PWM1DCL	set	1553
   483     0613                     _PWM1CONbits	set	1555
   484     0613                     _PWM1CON	set	1555
   485     0612                     _PWM1DCH	set	1554
   486                           
   487                           	psect	cinit
   488     00C2                     start_initialization:	
   489                           ; #config settings
   490                           
   491     00C2                     __initialization:
   492                           
   493                           ; Clear objects allocated to COMMON
   494     00C2  01F9               	clrf	__pbssCOMMON& (0+127)
   495     00C3  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   496                           
   497                           ; Clear objects allocated to BANK0
   498     00C4  0020               	movlb	0	; select bank0
   499     00C5  01C9               	clrf	__pbssBANK0& (0+127)
   500     00C6  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   501     00C7  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   502     00C8  01CC               	clrf	(__pbssBANK0+3)& (0+127)
   503     00C9                     end_of_initialization:	
   504                           ;End of C runtime variable initialization code
   505                           
   506     00C9                     __end_of__initialization:
   507     00C9  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   508     00CA  0020               	movlb	0
   509     00CB  28CC               	ljmp	_main	;jump to C main() function
   510                           
   511                           	psect	bssCOMMON
   512     0079                     __pbssCOMMON:
   513     0079                     _t:
   514     0079                     	ds	2
   515                           
   516                           	psect	bssBANK0
   517     0049                     __pbssBANK0:
   518     0049                     _Rt:
   519     0049                     	ds	4
   520                           
   521                           	psect	cstackCOMMON
   522     0070                     __pcstackCOMMON:
   523     0070                     ?_setup:
   524     0070                     ?_PWMinit:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?_main:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ?_ISR:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ??_ISR:	
   534                           ; 1 bytes @ 0x0
   535                           
   536                           
   537                           ; 1 bytes @ 0x0
   538     0070                     	ds	6
   539     0076                     ISR@v:
   540                           
   541                           ; 1 bytes @ 0x6
   542     0076                     	ds	1
   543     0077                     ISR@p:
   544                           
   545                           ; 1 bytes @ 0x7
   546     0077                     	ds	1
   547     0078                     ISR@i:
   548                           
   549                           ; 1 bytes @ 0x8
   550     0078                     	ds	1
   551                           
   552                           	psect	cstackBANK0
   553     0020                     __pcstackBANK0:
   554     0020                     ??_setup:
   555     0020                     ??_PWMinit:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0020                     ?_getADCValue:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0020                     ?___wmul:	
   562                           ; 2 bytes @ 0x0
   563                           
   564     0020                     ?___lwdiv:	
   565                           ; 2 bytes @ 0x0
   566                           
   567     0020                     ?___lmul:	
   568                           ; 2 bytes @ 0x0
   569                           
   570     0020                     ___wmul@multiplier:	
   571                           ; 4 bytes @ 0x0
   572                           
   573     0020                     ___lwdiv@divisor:	
   574                           ; 2 bytes @ 0x0
   575                           
   576     0020                     ___lmul@multiplier:	
   577                           ; 2 bytes @ 0x0
   578                           
   579                           
   580                           ; 4 bytes @ 0x0
   581     0020                     	ds	2
   582     0022                     ??_getADCValue:
   583     0022                     ___wmul@multiplicand:	
   584                           ; 1 bytes @ 0x2
   585                           
   586     0022                     ___lwdiv@dividend:	
   587                           ; 2 bytes @ 0x2
   588                           
   589                           
   590                           ; 2 bytes @ 0x2
   591     0022                     	ds	2
   592     0024                     ??___wmul:
   593     0024                     ??___lwdiv:	
   594                           ; 1 bytes @ 0x4
   595                           
   596     0024                     ___wmul@product:	
   597                           ; 1 bytes @ 0x4
   598                           
   599     0024                     ___lmul@multiplicand:	
   600                           ; 2 bytes @ 0x4
   601                           
   602                           
   603                           ; 4 bytes @ 0x4
   604     0024                     	ds	1
   605     0025                     ___lwdiv@quotient:
   606                           
   607                           ; 2 bytes @ 0x5
   608     0025                     	ds	2
   609     0027                     ___lwdiv@counter:
   610                           
   611                           ; 1 bytes @ 0x7
   612     0027                     	ds	1
   613     0028                     ??___lmul:
   614     0028                     ___lmul@product:	
   615                           ; 1 bytes @ 0x8
   616                           
   617                           
   618                           ; 4 bytes @ 0x8
   619     0028                     	ds	1
   620     0029                     getADCValue@channel:
   621                           
   622                           ; 1 bytes @ 0x9
   623     0029                     	ds	1
   624     002A                     ?_getADS:
   625                           
   626                           ; 2 bytes @ 0xA
   627     002A                     	ds	2
   628     002C                     ??_getADS:
   629     002C                     ?___lldiv:	
   630                           ; 1 bytes @ 0xC
   631                           
   632     002C                     ___lldiv@divisor:	
   633                           ; 4 bytes @ 0xC
   634                           
   635                           
   636                           ; 4 bytes @ 0xC
   637     002C                     	ds	2
   638     002E                     getADS@ac1:
   639                           
   640                           ; 2 bytes @ 0xE
   641     002E                     	ds	2
   642     0030                     getADS@ac2:
   643     0030                     ___lldiv@dividend:	
   644                           ; 2 bytes @ 0x10
   645                           
   646                           
   647                           ; 4 bytes @ 0x10
   648     0030                     	ds	2
   649     0032                     getADS@ac3:
   650                           
   651                           ; 2 bytes @ 0x12
   652     0032                     	ds	2
   653     0034                     ??___lldiv:
   654                           
   655                           ; 1 bytes @ 0x14
   656     0034                     	ds	1
   657     0035                     ___lldiv@quotient:
   658                           
   659                           ; 4 bytes @ 0x15
   660     0035                     	ds	4
   661     0039                     ___lldiv@counter:
   662                           
   663                           ; 1 bytes @ 0x19
   664     0039                     	ds	1
   665     003A                     ??_main:
   666                           
   667                           ; 1 bytes @ 0x1A
   668     003A                     	ds	4
   669     003E                     main@ad2:
   670                           
   671                           ; 2 bytes @ 0x1E
   672     003E                     	ds	2
   673     0040                     main@add:
   674                           
   675                           ; 1 bytes @ 0x20
   676     0040                     	ds	1
   677     0041                     main@VR:
   678                           
   679                           ; 4 bytes @ 0x21
   680     0041                     	ds	4
   681     0045                     main@ad1:
   682                           
   683                           ; 4 bytes @ 0x25
   684     0045                     	ds	4
   685                           
   686                           	psect	maintext
   687     00CC                     __pmaintext:	
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   690 ;;
   691 ;; *************** function _main *****************
   692 ;; Defined at:
   693 ;;		line 16 in file "main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  VR              4   33[BANK0 ] unsigned long 
   698 ;;  ad1             4   37[BANK0 ] unsigned long 
   699 ;;  ad2             2   30[BANK0 ] unsigned int 
   700 ;;  add             1   32[BANK0 ] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, pclath, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : B1F/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0
   710 ;;      Params:         0       0
   711 ;;      Locals:         0      11
   712 ;;      Temps:          0       4
   713 ;;      Totals:         0      15
   714 ;;Total ram usage:       15 bytes
   715 ;; Hardware stack levels required when called: 3
   716 ;; This function calls:
   717 ;;		_PWMinit
   718 ;;		___lldiv
   719 ;;		___lmul
   720 ;;		___wmul
   721 ;;		_getADCValue
   722 ;;		_getADS
   723 ;;		_setup
   724 ;; This function is called by:
   725 ;;		Startup code after reset
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729     00CC                     _main:	
   730                           ;psect for function _main
   731                           
   732     00CC                     l1017:	
   733                           ;incstack = 0
   734                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   735                           
   736                           
   737                           ;main.c: 18:     char add = 0;
   738     00CC  0020               	movlb	0	; select bank0
   739     00CD  01C0               	clrf	main@add
   740     00CE                     l1019:
   741                           
   742                           ;main.c: 19:     unsigned long ad1;;main.c: 20:     unsigned int ad2;;main.c: 21:     se
      +                          tup();
   743     00CE  3183  23C3  3180   	fcall	_setup
   744     00D1                     l1021:
   745                           
   746                           ;main.c: 22:     PWMinit();
   747     00D1  3183  23A7  3180   	fcall	_PWMinit
   748     00D4                     l1023:
   749                           
   750                           ;main.c: 23:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   751     00D4  3015               	movlw	21
   752     00D5  0020               	movlb	0	; select bank0
   753     00D6  00BB               	movwf	??_main+1
   754     00D7  304B               	movlw	75
   755     00D8  00BA               	movwf	??_main
   756     00D9  30BE               	movlw	190
   757     00DA                     u797:
   758     00DA  0B89               	decfsz	9,f
   759     00DB  28DA               	goto	u797
   760     00DC  0BBA               	decfsz	??_main,f
   761     00DD  28DA               	goto	u797
   762     00DE  0BBB               	decfsz	??_main+1,f
   763     00DF  28DA               	goto	u797
   764     00E0  0000               	nop
   765     00E1                     l1025:
   766                           
   767                           ;main.c: 26:     {;main.c: 27:         if(add == 3)
   768     00E1  3003               	movlw	3
   769     00E2  0020               	movlb	0	; select bank0
   770     00E3  0640               	xorwf	main@add,w
   771     00E4  1D03               	btfss	3,2
   772     00E5  28E7               	goto	u641
   773     00E6  28E8               	goto	u640
   774     00E7                     u641:
   775     00E7  2978               	goto	l1037
   776     00E8                     u640:
   777     00E8                     l1027:
   778                           
   779                           ;main.c: 28:         {;main.c: 29:             unsigned long VR;;main.c: 30:            
      +                           ad1 = getADCValue(0x00);
   780     00E8  3000               	movlw	0
   781     00E9  3183  2318  3180   	fcall	_getADCValue
   782     00EC  0020               	movlb	0	; select bank0
   783     00ED  0820               	movf	?_getADCValue,w
   784     00EE  00C5               	movwf	main@ad1
   785     00EF  0821               	movf	?_getADCValue+1,w
   786     00F0  00C6               	movwf	main@ad1+1
   787     00F1  01C7               	clrf	main@ad1+2
   788     00F2  01C8               	clrf	main@ad1+3
   789     00F3                     l1029:
   790                           
   791                           ;main.c: 31:             ad1 = 1024 - ad1;
   792     00F3  3000               	movlw	0
   793     00F4  00BA               	movwf	??_main
   794     00F5  3004               	movlw	4
   795     00F6  00BB               	movwf	??_main+1
   796     00F7  3000               	movlw	0
   797     00F8  00BC               	movwf	??_main+2
   798     00F9  3000               	movlw	0
   799     00FA  00BD               	movwf	??_main+3
   800     00FB  0845               	movf	main@ad1,w
   801     00FC  02BA               	subwf	??_main,f
   802     00FD  0846               	movf	main@ad1+1,w
   803     00FE  3BBB               	subwfb	??_main+1,f
   804     00FF  0847               	movf	main@ad1+2,w
   805     0100  3BBC               	subwfb	??_main+2,f
   806     0101  0848               	movf	main@ad1+3,w
   807     0102  3BBD               	subwfb	??_main+3,f
   808     0103  083D               	movf	??_main+3,w
   809     0104  00C8               	movwf	main@ad1+3
   810     0105  083C               	movf	??_main+2,w
   811     0106  00C7               	movwf	main@ad1+2
   812     0107  083B               	movf	??_main+1,w
   813     0108  00C6               	movwf	main@ad1+1
   814     0109  083A               	movf	??_main,w
   815     010A  00C5               	movwf	main@ad1
   816     010B                     l1031:
   817                           
   818                           ;main.c: 32:             VR = ad1 * 500 / 1024;
   819     010B  0848               	movf	main@ad1+3,w
   820     010C  00A3               	movwf	___lmul@multiplier+3
   821     010D  0847               	movf	main@ad1+2,w
   822     010E  00A2               	movwf	___lmul@multiplier+2
   823     010F  0846               	movf	main@ad1+1,w
   824     0110  00A1               	movwf	___lmul@multiplier+1
   825     0111  0845               	movf	main@ad1,w
   826     0112  00A0               	movwf	___lmul@multiplier
   827     0113  3000               	movlw	0
   828     0114  00A7               	movwf	___lmul@multiplicand+3
   829     0115  3000               	movlw	0
   830     0116  00A6               	movwf	___lmul@multiplicand+2
   831     0117  3001               	movlw	1
   832     0118  00A5               	movwf	___lmul@multiplicand+1
   833     0119  30F4               	movlw	244
   834     011A  00A4               	movwf	___lmul@multiplicand
   835     011B  3183  2353  3180   	fcall	___lmul
   836     011E  0020               	movlb	0	; select bank0
   837     011F  0820               	movf	?___lmul,w
   838     0120  00BA               	movwf	??_main
   839     0121  0821               	movf	?___lmul+1,w
   840     0122  00BB               	movwf	??_main+1
   841     0123  0822               	movf	?___lmul+2,w
   842     0124  00BC               	movwf	??_main+2
   843     0125  0823               	movf	?___lmul+3,w
   844     0126  00BD               	movwf	??_main+3
   845     0127  300A               	movlw	10
   846     0128                     u655:
   847     0128  36BD               	lsrf	??_main+3,f
   848     0129  0CBC               	rrf	??_main+2,f
   849     012A  0CBB               	rrf	??_main+1,f
   850     012B  0CBA               	rrf	??_main,f
   851     012C                     u650:
   852     012C  0B89               	decfsz	9,f
   853     012D  2928               	goto	u655
   854     012E  083D               	movf	??_main+3,w
   855     012F  00C4               	movwf	main@VR+3
   856     0130  083C               	movf	??_main+2,w
   857     0131  00C3               	movwf	main@VR+2
   858     0132  083B               	movf	??_main+1,w
   859     0133  00C2               	movwf	main@VR+1
   860     0134  083A               	movf	??_main,w
   861     0135  00C1               	movwf	main@VR
   862     0136                     l1033:
   863                           
   864                           ;main.c: 33:             Rt = (unsigned long)(500 - VR) * 1000 / VR;
   865     0136  0844               	movf	main@VR+3,w
   866     0137  00AF               	movwf	___lldiv@divisor+3
   867     0138  0843               	movf	main@VR+2,w
   868     0139  00AE               	movwf	___lldiv@divisor+2
   869     013A  0842               	movf	main@VR+1,w
   870     013B  00AD               	movwf	___lldiv@divisor+1
   871     013C  0841               	movf	main@VR,w
   872     013D  00AC               	movwf	___lldiv@divisor
   873     013E  30F4               	movlw	244
   874     013F  00BA               	movwf	??_main
   875     0140  3001               	movlw	1
   876     0141  00BB               	movwf	??_main+1
   877     0142  3000               	movlw	0
   878     0143  00BC               	movwf	??_main+2
   879     0144  3000               	movlw	0
   880     0145  00BD               	movwf	??_main+3
   881     0146  0841               	movf	main@VR,w
   882     0147  02BA               	subwf	??_main,f
   883     0148  0842               	movf	main@VR+1,w
   884     0149  3BBB               	subwfb	??_main+1,f
   885     014A  0843               	movf	main@VR+2,w
   886     014B  3BBC               	subwfb	??_main+2,f
   887     014C  0844               	movf	main@VR+3,w
   888     014D  3BBD               	subwfb	??_main+3,f
   889     014E  083D               	movf	??_main+3,w
   890     014F  00A3               	movwf	___lmul@multiplier+3
   891     0150  083C               	movf	??_main+2,w
   892     0151  00A2               	movwf	___lmul@multiplier+2
   893     0152  083B               	movf	??_main+1,w
   894     0153  00A1               	movwf	___lmul@multiplier+1
   895     0154  083A               	movf	??_main,w
   896     0155  00A0               	movwf	___lmul@multiplier
   897     0156  3000               	movlw	0
   898     0157  00A7               	movwf	___lmul@multiplicand+3
   899     0158  3000               	movlw	0
   900     0159  00A6               	movwf	___lmul@multiplicand+2
   901     015A  3003               	movlw	3
   902     015B  00A5               	movwf	___lmul@multiplicand+1
   903     015C  30E8               	movlw	232
   904     015D  00A4               	movwf	___lmul@multiplicand
   905     015E  3183  2353  3180   	fcall	___lmul
   906     0161  0020               	movlb	0	; select bank0
   907     0162  0823               	movf	?___lmul+3,w
   908     0163  00B3               	movwf	___lldiv@dividend+3
   909     0164  0822               	movf	?___lmul+2,w
   910     0165  00B2               	movwf	___lldiv@dividend+2
   911     0166  0821               	movf	?___lmul+1,w
   912     0167  00B1               	movwf	___lldiv@dividend+1
   913     0168  0820               	movf	?___lmul,w
   914     0169  00B0               	movwf	___lldiv@dividend
   915     016A  3182  223F  3180   	fcall	___lldiv
   916     016D  0020               	movlb	0	; select bank0
   917     016E  082F               	movf	?___lldiv+3,w
   918     016F  00CC               	movwf	_Rt+3
   919     0170  082E               	movf	?___lldiv+2,w
   920     0171  00CB               	movwf	_Rt+2
   921     0172  082D               	movf	?___lldiv+1,w
   922     0173  00CA               	movwf	_Rt+1
   923     0174  082C               	movf	?___lldiv,w
   924     0175  00C9               	movwf	_Rt
   925     0176                     l1035:
   926                           
   927                           ;main.c: 34:             add = 0;
   928     0176  01C0               	clrf	main@add
   929                           
   930                           ;main.c: 35:         }
   931     0177  28E1               	goto	l1025
   932     0178                     l1037:
   933                           
   934                           ;main.c: 37:         {;main.c: 38:             ad2 = getADS();
   935     0178  3182  229A  3180   	fcall	_getADS
   936     017B  0020               	movlb	0	; select bank0
   937     017C  082B               	movf	?_getADS+1,w
   938     017D  00BF               	movwf	main@ad2+1
   939     017E  082A               	movf	?_getADS,w
   940     017F  00BE               	movwf	main@ad2
   941                           
   942                           ;main.c: 41:             t = (int)(ad2 * 10 / 128);
   943     0180  083F               	movf	main@ad2+1,w
   944     0181  00A1               	movwf	___wmul@multiplier+1
   945     0182  083E               	movf	main@ad2,w
   946     0183  00A0               	movwf	___wmul@multiplier
   947     0184  300A               	movlw	10
   948     0185  00A2               	movwf	___wmul@multiplicand
   949     0186  3000               	movlw	0
   950     0187  00A3               	movwf	___wmul@multiplicand+1
   951     0188  3183  2387  3180   	fcall	___wmul
   952     018B  0020               	movlb	0	; select bank0
   953     018C  0820               	movf	?___wmul,w
   954     018D  00BA               	movwf	??_main
   955     018E  0821               	movf	?___wmul+1,w
   956     018F  00BB               	movwf	??_main+1
   957     0190  3007               	movlw	7
   958     0191                     u665:
   959     0191  36BB               	lsrf	??_main+1,f
   960     0192  0CBA               	rrf	??_main,f
   961     0193  0B89               	decfsz	9,f
   962     0194  2991               	goto	u665
   963     0195  083A               	movf	??_main,w
   964     0196  00F9               	movwf	_t
   965     0197  083B               	movf	??_main+1,w
   966     0198  00FA               	movwf	_t+1
   967     0199                     l1039:
   968                           
   969                           ;main.c: 42:             add++;
   970     0199  3001               	movlw	1
   971     019A  00BA               	movwf	??_main
   972     019B  083A               	movf	??_main,w
   973     019C  07C0               	addwf	main@add,f
   974     019D  28E1               	goto	l1025
   975     019E  28C1               	ljmp	start
   976     019F                     __end_of_main:
   977                           
   978                           	psect	text1
   979     03C3                     __ptext1:	
   980 ;; *************** function _setup *****************
   981 ;; Defined at:
   982 ;;		line 5 in file "KF1.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0
   996 ;;      Params:         0       0
   997 ;;      Locals:         0       0
   998 ;;      Temps:          0       0
   999 ;;      Totals:         0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010     03C3                     _setup:	
  1011                           ;psect for function _setup
  1012                           
  1013     03C3                     l905:	
  1014                           ;incstack = 0
  1015                           ; Regs used in _setup: [wreg]
  1016                           
  1017                           
  1018                           ;KF1.c: 7:     OSCCON = 0b01110000;
  1019     03C3  3070               	movlw	112
  1020     03C4  0021               	movlb	1	; select bank1
  1021     03C5  0099               	movwf	25	;volatile
  1022     03C6                     l907:
  1023                           
  1024                           ;KF1.c: 10:     PORTAbits.RA1 = 0;
  1025     03C6  0020               	movlb	0	; select bank0
  1026     03C7  108C               	bcf	12,1	;volatile
  1027     03C8                     l909:
  1028                           
  1029                           ;KF1.c: 11:     TRISAbits.TRISA1 = 0;
  1030     03C8  0021               	movlb	1	; select bank1
  1031     03C9  108C               	bcf	12,1	;volatile
  1032     03CA                     l911:
  1033                           
  1034                           ;KF1.c: 14:     ANSELAbits.ANSA0 = 1;
  1035     03CA  0023               	movlb	3	; select bank3
  1036     03CB  140C               	bsf	12,0	;volatile
  1037     03CC                     l913:
  1038                           
  1039                           ;KF1.c: 15:     ANSELAbits.ANSA4 = 1;
  1040     03CC  160C               	bsf	12,4	;volatile
  1041                           
  1042                           ;KF1.c: 18:     ADCON1 = 0x50;
  1043     03CD  3050               	movlw	80
  1044     03CE  0021               	movlb	1	; select bank1
  1045     03CF  009E               	movwf	30	;volatile
  1046     03D0                     l915:
  1047                           
  1048                           ;KF1.c: 19:     PIE1bits.ADIE = 1;
  1049     03D0  1711               	bsf	17,6	;volatile
  1050     03D1                     l917:
  1051                           
  1052                           ;KF1.c: 20:     PIR1bits.ADIF = 0;
  1053     03D1  0020               	movlb	0	; select bank0
  1054     03D2  1311               	bcf	17,6	;volatile
  1055     03D3                     l919:
  1056                           
  1057                           ;KF1.c: 21:     ADCON0bits.GO = 0;
  1058     03D3  0021               	movlb	1	; select bank1
  1059     03D4  109D               	bcf	29,1	;volatile
  1060     03D5                     l921:
  1061                           
  1062                           ;KF1.c: 22:     ADCON0bits.ADON = 1;
  1063     03D5  141D               	bsf	29,0	;volatile
  1064     03D6                     l110:
  1065     03D6  0008               	return
  1066     03D7                     __end_of_setup:
  1067                           
  1068                           	psect	text2
  1069     029A                     __ptext2:	
  1070 ;; *************** function _getADS *****************
  1071 ;; Defined at:
  1072 ;;		line 56 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  ac3             2   18[BANK0 ] unsigned int 
  1077 ;;  ac2             2   16[BANK0 ] unsigned int 
  1078 ;;  ac1             2   14[BANK0 ] unsigned int 
  1079 ;;  acd             2    0        unsigned int 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  2   10[BANK0 ] unsigned int 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0
  1089 ;;      Params:         0       2
  1090 ;;      Locals:         0       6
  1091 ;;      Temps:          0       2
  1092 ;;      Totals:         0      10
  1093 ;;Total ram usage:       10 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; Hardware stack levels required when called: 2
  1096 ;; This function calls:
  1097 ;;		___lwdiv
  1098 ;;		_getADCValue
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104     029A                     _getADS:	
  1105                           ;psect for function _getADS
  1106                           
  1107     029A                     l953:	
  1108                           ;incstack = 0
  1109                           ; Regs used in _getADS: [wreg+status,2+status,0+pclath+cstack]
  1110                           
  1111                           
  1112                           ;main.c: 58:     unsigned int ac1, ac2, ac3, acd;;main.c: 59:     ac1 = getADCValue(0x03
      +                          );
  1113     029A  3003               	movlw	3
  1114     029B  3183  2318  3182   	fcall	_getADCValue
  1115     029E  0020               	movlb	0	; select bank0
  1116     029F  0821               	movf	?_getADCValue+1,w
  1117     02A0  00AF               	movwf	getADS@ac1+1
  1118     02A1  0820               	movf	?_getADCValue,w
  1119     02A2  00AE               	movwf	getADS@ac1
  1120     02A3                     l955:
  1121                           
  1122                           ;main.c: 60:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1123     02A3  3003               	movlw	3
  1124     02A4                     u807:
  1125     02A4  0B89               	decfsz	9,f
  1126     02A5  2AA4               	goto	u807
  1127     02A6  0000               	nop
  1128     02A7                     l957:
  1129                           
  1130                           ;main.c: 61:     ac2 = getADCValue(0x03);
  1131     02A7  3003               	movlw	3
  1132     02A8  3183  2318  3182   	fcall	_getADCValue
  1133     02AB  0020               	movlb	0	; select bank0
  1134     02AC  0821               	movf	?_getADCValue+1,w
  1135     02AD  00B1               	movwf	getADS@ac2+1
  1136     02AE  0820               	movf	?_getADCValue,w
  1137     02AF  00B0               	movwf	getADS@ac2
  1138                           
  1139                           ;main.c: 62:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1140     02B0  3003               	movlw	3
  1141     02B1                     u817:
  1142     02B1  0B89               	decfsz	9,f
  1143     02B2  2AB1               	goto	u817
  1144     02B3  0000               	nop
  1145     02B4                     l959:
  1146                           
  1147                           ;main.c: 63:     ac3 = getADCValue(0x03);
  1148     02B4  3003               	movlw	3
  1149     02B5  3183  2318  3182   	fcall	_getADCValue
  1150     02B8  0020               	movlb	0	; select bank0
  1151     02B9  0821               	movf	?_getADCValue+1,w
  1152     02BA  00B3               	movwf	getADS@ac3+1
  1153     02BB  0820               	movf	?_getADCValue,w
  1154     02BC  00B2               	movwf	getADS@ac3
  1155     02BD                     l961:
  1156                           
  1157                           ;main.c: 64:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1158     02BD  3003               	movlw	3
  1159     02BE                     u827:
  1160     02BE  0B89               	decfsz	9,f
  1161     02BF  2ABE               	goto	u827
  1162     02C0  0000               	nop
  1163                           
  1164                           ;main.c: 65:     return ((ac1 + ac2 + ac3) / 3);
  1165     02C1  3003               	movlw	3
  1166     02C2  0020               	movlb	0	; select bank0
  1167     02C3  00A0               	movwf	___lwdiv@divisor
  1168     02C4  3000               	movlw	0
  1169     02C5  00A1               	movwf	___lwdiv@divisor+1
  1170     02C6  0830               	movf	getADS@ac2,w
  1171     02C7  072E               	addwf	getADS@ac1,w
  1172     02C8  00AC               	movwf	??_getADS
  1173     02C9  0831               	movf	getADS@ac2+1,w
  1174     02CA  3D2F               	addwfc	getADS@ac1+1,w
  1175     02CB  00AD               	movwf	??_getADS+1
  1176     02CC  0832               	movf	getADS@ac3,w
  1177     02CD  072C               	addwf	??_getADS,w
  1178     02CE  00A2               	movwf	___lwdiv@dividend
  1179     02CF  0833               	movf	getADS@ac3+1,w
  1180     02D0  3D2D               	addwfc	??_getADS+1,w
  1181     02D1  00A3               	movwf	___lwdiv@dividend+1
  1182     02D2  3182  22DB  3182   	fcall	___lwdiv
  1183     02D5  0020               	movlb	0	; select bank0
  1184     02D6  0821               	movf	?___lwdiv+1,w
  1185     02D7  00AB               	movwf	?_getADS+1
  1186     02D8  0820               	movf	?___lwdiv,w
  1187     02D9  00AA               	movwf	?_getADS
  1188     02DA                     l55:
  1189     02DA  0008               	return
  1190     02DB                     __end_of_getADS:
  1191                           
  1192                           	psect	text3
  1193     0318                     __ptext3:	
  1194 ;; *************** function _getADCValue *****************
  1195 ;; Defined at:
  1196 ;;		line 47 in file "main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  channel         1    wreg     unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  channel         1    9[BANK0 ] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  2    0[BANK0 ] unsigned int 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, status,0
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0
  1210 ;;      Params:         0       2
  1211 ;;      Locals:         0       1
  1212 ;;      Temps:          0       7
  1213 ;;      Totals:         0      10
  1214 ;;Total ram usage:       10 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;;		_getADS
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225     0318                     _getADCValue:	
  1226                           ;psect for function _getADCValue
  1227                           
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _getADCValue: [wreg+status,2+status,0]
  1231                           ;getADCValue@channel stored from wreg
  1232     0318  0020               	movlb	0	; select bank0
  1233     0319  00A9               	movwf	getADCValue@channel
  1234     031A                     l869:
  1235                           
  1236                           ;main.c: 47: unsigned int getADCValue(unsigned char channel);main.c: 48: {;main.c: 49:  
      +                             ADCON0bits.CHS = channel;
  1237     031A  0829               	movf	getADCValue@channel,w
  1238     031B  00A2               	movwf	??_getADCValue
  1239     031C  0DA2               	rlf	??_getADCValue,f
  1240     031D  0DA2               	rlf	??_getADCValue,f
  1241     031E  0021               	movlb	1	; select bank1
  1242     031F  081D               	movf	29,w	;volatile
  1243     0320  0020               	movlb	0	; select bank0
  1244     0321  0622               	xorwf	??_getADCValue,w
  1245     0322  3983               	andlw	-125
  1246     0323  0622               	xorwf	??_getADCValue,w
  1247     0324  0021               	movlb	1	; select bank1
  1248     0325  009D               	movwf	29	;volatile
  1249     0326                     l871:
  1250                           
  1251                           ;main.c: 50:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1252     0326  300D               	movlw	13
  1253     0327  0020               	movlb	0	; select bank0
  1254     0328  00A2               	movwf	??_getADCValue
  1255     0329  30FB               	movlw	251
  1256     032A                     u837:
  1257     032A  0B89               	decfsz	9,f
  1258     032B  2B2A               	goto	u837
  1259     032C  0BA2               	decfsz	??_getADCValue,f
  1260     032D  2B2A               	goto	u837
  1261     032E  3200               	nop2
  1262     032F                     l873:
  1263                           
  1264                           ;main.c: 51:     ADCON0bits.GO = 1;
  1265     032F  0021               	movlb	1	; select bank1
  1266     0330  149D               	bsf	29,1	;volatile
  1267     0331                     l49:	
  1268                           ;main.c: 52:     while (ADCON0bits.GO);
  1269                           
  1270     0331  189D               	btfsc	29,1	;volatile
  1271     0332  2B34               	goto	u401
  1272     0333  2B35               	goto	u400
  1273     0334                     u401:
  1274     0334  2B31               	goto	l49
  1275     0335                     u400:
  1276     0335                     l875:
  1277                           
  1278                           ;main.c: 53:     return (unsigned int)((ADRESH << 2) | (ADRESL >> 6));
  1279     0335  081B               	movf	27,w	;volatile
  1280     0336  0020               	movlb	0	; select bank0
  1281     0337  00A2               	movwf	??_getADCValue
  1282     0338  3006               	movlw	6
  1283     0339                     u415:
  1284     0339  36A2               	lsrf	??_getADCValue,f
  1285     033A  0B89               	decfsz	9,f
  1286     033B  2B39               	goto	u415
  1287     033C  0822               	movf	??_getADCValue,w
  1288     033D  00A3               	movwf	??_getADCValue+1
  1289     033E  01A4               	clrf	??_getADCValue+2
  1290     033F  0021               	movlb	1	; select bank1
  1291     0340  081C               	movf	28,w	;volatile
  1292     0341  0020               	movlb	0	; select bank0
  1293     0342  00A5               	movwf	??_getADCValue+3
  1294     0343  01A6               	clrf	??_getADCValue+4
  1295     0344  35A5               	lslf	??_getADCValue+3,f
  1296     0345  0DA6               	rlf	??_getADCValue+4,f
  1297     0346  35A5               	lslf	??_getADCValue+3,f
  1298     0347  0DA6               	rlf	??_getADCValue+4,f
  1299     0348  0823               	movf	??_getADCValue+1,w
  1300     0349  0425               	iorwf	??_getADCValue+3,w
  1301     034A  00A7               	movwf	??_getADCValue+5
  1302     034B  0824               	movf	??_getADCValue+2,w
  1303     034C  0426               	iorwf	??_getADCValue+4,w
  1304     034D  00A8               	movwf	??_getADCValue+6
  1305     034E  0827               	movf	??_getADCValue+5,w
  1306     034F  00A0               	movwf	?_getADCValue
  1307     0350  0828               	movf	??_getADCValue+6,w
  1308     0351  00A1               	movwf	?_getADCValue+1
  1309     0352                     l52:
  1310     0352  0008               	return
  1311     0353                     __end_of_getADCValue:
  1312                           
  1313                           	psect	text4
  1314     02DB                     __ptext4:	
  1315 ;; *************** function ___lwdiv *****************
  1316 ;; Defined at:
  1317 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\lwdiv.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  divisor         2    0[BANK0 ] unsigned int 
  1320 ;;  dividend        2    2[BANK0 ] unsigned int 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  quotient        2    5[BANK0 ] unsigned int 
  1323 ;;  counter         1    7[BANK0 ] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  2    0[BANK0 ] unsigned int 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0
  1333 ;;      Params:         0       4
  1334 ;;      Locals:         0       3
  1335 ;;      Temps:          0       1
  1336 ;;      Totals:         0       8
  1337 ;;Total ram usage:        8 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_getADS
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347     02DB                     ___lwdiv:	
  1348                           ;psect for function ___lwdiv
  1349                           
  1350     02DB                     l879:	
  1351                           ;incstack = 0
  1352                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1353                           
  1354     02DB  0020               	movlb	0	; select bank0
  1355     02DC  01A5               	clrf	___lwdiv@quotient
  1356     02DD  01A6               	clrf	___lwdiv@quotient+1
  1357     02DE                     l881:
  1358     02DE  0820               	movf	___lwdiv@divisor,w
  1359     02DF  0421               	iorwf	___lwdiv@divisor+1,w
  1360     02E0  1903               	btfsc	3,2
  1361     02E1  2AE3               	goto	u421
  1362     02E2  2AE4               	goto	u420
  1363     02E3                     u421:
  1364     02E3  2B13               	goto	l901
  1365     02E4                     u420:
  1366     02E4                     l883:
  1367     02E4  01A7               	clrf	___lwdiv@counter
  1368     02E5  0AA7               	incf	___lwdiv@counter,f
  1369     02E6  2AF0               	goto	l889
  1370     02E7                     l885:
  1371     02E7  3001               	movlw	1
  1372     02E8                     u435:
  1373     02E8  35A0               	lslf	___lwdiv@divisor,f
  1374     02E9  0DA1               	rlf	___lwdiv@divisor+1,f
  1375     02EA  0B89               	decfsz	9,f
  1376     02EB  2AE8               	goto	u435
  1377     02EC                     l887:
  1378     02EC  3001               	movlw	1
  1379     02ED  00A4               	movwf	??___lwdiv
  1380     02EE  0824               	movf	??___lwdiv,w
  1381     02EF  07A7               	addwf	___lwdiv@counter,f
  1382     02F0                     l889:
  1383     02F0  1FA1               	btfss	___lwdiv@divisor+1,7
  1384     02F1  2AF3               	goto	u441
  1385     02F2  2AF4               	goto	u440
  1386     02F3                     u441:
  1387     02F3  2AE7               	goto	l885
  1388     02F4                     u440:
  1389     02F4                     l891:
  1390     02F4  3001               	movlw	1
  1391     02F5                     u455:
  1392     02F5  35A5               	lslf	___lwdiv@quotient,f
  1393     02F6  0DA6               	rlf	___lwdiv@quotient+1,f
  1394     02F7  0B89               	decfsz	9,f
  1395     02F8  2AF5               	goto	u455
  1396     02F9  0821               	movf	___lwdiv@divisor+1,w
  1397     02FA  0223               	subwf	___lwdiv@dividend+1,w
  1398     02FB  1D03               	skipz
  1399     02FC  2AFF               	goto	u465
  1400     02FD  0820               	movf	___lwdiv@divisor,w
  1401     02FE  0222               	subwf	___lwdiv@dividend,w
  1402     02FF                     u465:
  1403     02FF  1C03               	skipc
  1404     0300  2B02               	goto	u461
  1405     0301  2B03               	goto	u460
  1406     0302                     u461:
  1407     0302  2B08               	goto	l897
  1408     0303                     u460:
  1409     0303                     l893:
  1410     0303  0820               	movf	___lwdiv@divisor,w
  1411     0304  02A2               	subwf	___lwdiv@dividend,f
  1412     0305  0821               	movf	___lwdiv@divisor+1,w
  1413     0306  3BA3               	subwfb	___lwdiv@dividend+1,f
  1414     0307                     l895:
  1415     0307  1425               	bsf	___lwdiv@quotient,0
  1416     0308                     l897:
  1417     0308  3001               	movlw	1
  1418     0309                     u475:
  1419     0309  36A1               	lsrf	___lwdiv@divisor+1,f
  1420     030A  0CA0               	rrf	___lwdiv@divisor,f
  1421     030B  0B89               	decfsz	9,f
  1422     030C  2B09               	goto	u475
  1423     030D                     l899:
  1424     030D  3001               	movlw	1
  1425     030E  02A7               	subwf	___lwdiv@counter,f
  1426     030F  1D03               	btfss	3,2
  1427     0310  2B12               	goto	u481
  1428     0311  2B13               	goto	u480
  1429     0312                     u481:
  1430     0312  2AF4               	goto	l891
  1431     0313                     u480:
  1432     0313                     l901:
  1433     0313  0826               	movf	___lwdiv@quotient+1,w
  1434     0314  00A1               	movwf	?___lwdiv+1
  1435     0315  0825               	movf	___lwdiv@quotient,w
  1436     0316  00A0               	movwf	?___lwdiv
  1437     0317                     l461:
  1438     0317  0008               	return
  1439     0318                     __end_of___lwdiv:
  1440                           
  1441                           	psect	text5
  1442     0387                     __ptext5:	
  1443 ;; *************** function ___wmul *****************
  1444 ;; Defined at:
  1445 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul16.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1448 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  product         2    4[BANK0 ] unsigned int 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  2    0[BANK0 ] unsigned int 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0
  1460 ;;      Params:         0       4
  1461 ;;      Locals:         0       2
  1462 ;;      Temps:          0       0
  1463 ;;      Totals:         0       6
  1464 ;;Total ram usage:        6 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474     0387                     ___wmul:	
  1475                           ;psect for function ___wmul
  1476                           
  1477     0387                     l965:	
  1478                           ;incstack = 0
  1479                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1480                           
  1481     0387  0020               	movlb	0	; select bank0
  1482     0388  01A4               	clrf	___wmul@product
  1483     0389  01A5               	clrf	___wmul@product+1
  1484     038A                     l967:
  1485     038A  1C20               	btfss	___wmul@multiplier,0
  1486     038B  2B8D               	goto	u491
  1487     038C  2B8E               	goto	u490
  1488     038D                     u491:
  1489     038D  2B92               	goto	l181
  1490     038E                     u490:
  1491     038E                     l969:
  1492     038E  0822               	movf	___wmul@multiplicand,w
  1493     038F  07A4               	addwf	___wmul@product,f
  1494     0390  0823               	movf	___wmul@multiplicand+1,w
  1495     0391  3DA5               	addwfc	___wmul@product+1,f
  1496     0392                     l181:
  1497     0392  3001               	movlw	1
  1498     0393                     u505:
  1499     0393  35A2               	lslf	___wmul@multiplicand,f
  1500     0394  0DA3               	rlf	___wmul@multiplicand+1,f
  1501     0395  0B89               	decfsz	9,f
  1502     0396  2B93               	goto	u505
  1503     0397                     l971:
  1504     0397  3001               	movlw	1
  1505     0398                     u515:
  1506     0398  36A1               	lsrf	___wmul@multiplier+1,f
  1507     0399  0CA0               	rrf	___wmul@multiplier,f
  1508     039A  0B89               	decfsz	9,f
  1509     039B  2B98               	goto	u515
  1510     039C                     l973:
  1511     039C  0820               	movf	___wmul@multiplier,w
  1512     039D  0421               	iorwf	___wmul@multiplier+1,w
  1513     039E  1D03               	btfss	3,2
  1514     039F  2BA1               	goto	u521
  1515     03A0  2BA2               	goto	u520
  1516     03A1                     u521:
  1517     03A1  2B8A               	goto	l967
  1518     03A2                     u520:
  1519     03A2                     l975:
  1520     03A2  0825               	movf	___wmul@product+1,w
  1521     03A3  00A1               	movwf	?___wmul+1
  1522     03A4  0824               	movf	___wmul@product,w
  1523     03A5  00A0               	movwf	?___wmul
  1524     03A6                     l183:
  1525     03A6  0008               	return
  1526     03A7                     __end_of___wmul:
  1527                           
  1528                           	psect	text6
  1529     0353                     __ptext6:	
  1530 ;; *************** function ___lmul *****************
  1531 ;; Defined at:
  1532 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul32.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1535 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  product         4    8[BANK0 ] unsigned long 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  4    0[BANK0 ] unsigned long 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0
  1547 ;;      Params:         0       8
  1548 ;;      Locals:         0       4
  1549 ;;      Temps:          0       0
  1550 ;;      Totals:         0      12
  1551 ;;Total ram usage:       12 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     0353                     ___lmul:	
  1562                           ;psect for function ___lmul
  1563                           
  1564     0353                     l979:	
  1565                           ;incstack = 0
  1566                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1567                           
  1568     0353  3000               	movlw	0
  1569     0354  0020               	movlb	0	; select bank0
  1570     0355  00AB               	movwf	___lmul@product+3
  1571     0356  3000               	movlw	0
  1572     0357  00AA               	movwf	___lmul@product+2
  1573     0358  3000               	movlw	0
  1574     0359  00A9               	movwf	___lmul@product+1
  1575     035A  3000               	movlw	0
  1576     035B  00A8               	movwf	___lmul@product
  1577     035C                     l981:
  1578     035C  1C20               	btfss	___lmul@multiplier,0
  1579     035D  2B5F               	goto	u531
  1580     035E  2B60               	goto	u530
  1581     035F                     u531:
  1582     035F  2B68               	goto	l985
  1583     0360                     u530:
  1584     0360                     l983:
  1585     0360  0824               	movf	___lmul@multiplicand,w
  1586     0361  07A8               	addwf	___lmul@product,f
  1587     0362  0825               	movf	___lmul@multiplicand+1,w
  1588     0363  3DA9               	addwfc	___lmul@product+1,f
  1589     0364  0826               	movf	___lmul@multiplicand+2,w
  1590     0365  3DAA               	addwfc	___lmul@product+2,f
  1591     0366  0827               	movf	___lmul@multiplicand+3,w
  1592     0367  3DAB               	addwfc	___lmul@product+3,f
  1593     0368                     l985:
  1594     0368  3001               	movlw	1
  1595     0369                     u545:
  1596     0369  35A4               	lslf	___lmul@multiplicand,f
  1597     036A  0DA5               	rlf	___lmul@multiplicand+1,f
  1598     036B  0DA6               	rlf	___lmul@multiplicand+2,f
  1599     036C  0DA7               	rlf	___lmul@multiplicand+3,f
  1600     036D  0B89               	decfsz	9,f
  1601     036E  2B69               	goto	u545
  1602     036F                     l987:
  1603     036F  3001               	movlw	1
  1604     0370                     u555:
  1605     0370  36A3               	lsrf	___lmul@multiplier+3,f
  1606     0371  0CA2               	rrf	___lmul@multiplier+2,f
  1607     0372  0CA1               	rrf	___lmul@multiplier+1,f
  1608     0373  0CA0               	rrf	___lmul@multiplier,f
  1609     0374  0B89               	decfsz	9,f
  1610     0375  2B70               	goto	u555
  1611     0376  0823               	movf	___lmul@multiplier+3,w
  1612     0377  0422               	iorwf	___lmul@multiplier+2,w
  1613     0378  0421               	iorwf	___lmul@multiplier+1,w
  1614     0379  0420               	iorwf	___lmul@multiplier,w
  1615     037A  1D03               	skipz
  1616     037B  2B7D               	goto	u561
  1617     037C  2B7E               	goto	u560
  1618     037D                     u561:
  1619     037D  2B5C               	goto	l981
  1620     037E                     u560:
  1621     037E                     l989:
  1622     037E  082B               	movf	___lmul@product+3,w
  1623     037F  00A3               	movwf	?___lmul+3
  1624     0380  082A               	movf	___lmul@product+2,w
  1625     0381  00A2               	movwf	?___lmul+2
  1626     0382  0829               	movf	___lmul@product+1,w
  1627     0383  00A1               	movwf	?___lmul+1
  1628     0384  0828               	movf	___lmul@product,w
  1629     0385  00A0               	movwf	?___lmul
  1630     0386                     l195:
  1631     0386  0008               	return
  1632     0387                     __end_of___lmul:
  1633                           
  1634                           	psect	text7
  1635     023F                     __ptext7:	
  1636 ;; *************** function ___lldiv *****************
  1637 ;; Defined at:
  1638 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\__lldiv.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  divisor         4   12[BANK0 ] unsigned long 
  1641 ;;  dividend        4   16[BANK0 ] unsigned long 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  quotient        4   21[BANK0 ] unsigned long 
  1644 ;;  counter         1   25[BANK0 ] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  4   12[BANK0 ] unsigned long 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0
  1654 ;;      Params:         0       8
  1655 ;;      Locals:         0       5
  1656 ;;      Temps:          0       1
  1657 ;;      Totals:         0      14
  1658 ;;Total ram usage:       14 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 1
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668     023F                     ___lldiv:	
  1669                           ;psect for function ___lldiv
  1670                           
  1671     023F                     l993:	
  1672                           ;incstack = 0
  1673                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1674                           
  1675     023F  3000               	movlw	0
  1676     0240  0020               	movlb	0	; select bank0
  1677     0241  00B8               	movwf	___lldiv@quotient+3
  1678     0242  3000               	movlw	0
  1679     0243  00B7               	movwf	___lldiv@quotient+2
  1680     0244  3000               	movlw	0
  1681     0245  00B6               	movwf	___lldiv@quotient+1
  1682     0246  3000               	movlw	0
  1683     0247  00B5               	movwf	___lldiv@quotient
  1684     0248  082F               	movf	___lldiv@divisor+3,w
  1685     0249  042E               	iorwf	___lldiv@divisor+2,w
  1686     024A  042D               	iorwf	___lldiv@divisor+1,w
  1687     024B  042C               	iorwf	___lldiv@divisor,w
  1688     024C  1903               	skipnz
  1689     024D  2A4F               	goto	u571
  1690     024E  2A50               	goto	u570
  1691     024F                     u571:
  1692     024F  2A91               	goto	l1013
  1693     0250                     u570:
  1694     0250                     l995:
  1695     0250  01B9               	clrf	___lldiv@counter
  1696     0251  0AB9               	incf	___lldiv@counter,f
  1697     0252  2A5E               	goto	l999
  1698     0253                     l997:
  1699     0253  3001               	movlw	1
  1700     0254                     u585:
  1701     0254  35AC               	lslf	___lldiv@divisor,f
  1702     0255  0DAD               	rlf	___lldiv@divisor+1,f
  1703     0256  0DAE               	rlf	___lldiv@divisor+2,f
  1704     0257  0DAF               	rlf	___lldiv@divisor+3,f
  1705     0258  0B89               	decfsz	9,f
  1706     0259  2A54               	goto	u585
  1707     025A  3001               	movlw	1
  1708     025B  00B4               	movwf	??___lldiv
  1709     025C  0834               	movf	??___lldiv,w
  1710     025D  07B9               	addwf	___lldiv@counter,f
  1711     025E                     l999:
  1712     025E  1FAF               	btfss	___lldiv@divisor+3,7
  1713     025F  2A61               	goto	u591
  1714     0260  2A62               	goto	u590
  1715     0261                     u591:
  1716     0261  2A53               	goto	l997
  1717     0262                     u590:
  1718     0262                     l1001:
  1719     0262  3001               	movlw	1
  1720     0263                     u605:
  1721     0263  35B5               	lslf	___lldiv@quotient,f
  1722     0264  0DB6               	rlf	___lldiv@quotient+1,f
  1723     0265  0DB7               	rlf	___lldiv@quotient+2,f
  1724     0266  0DB8               	rlf	___lldiv@quotient+3,f
  1725     0267  0B89               	decfsz	9,f
  1726     0268  2A63               	goto	u605
  1727     0269                     l1003:
  1728     0269  082F               	movf	___lldiv@divisor+3,w
  1729     026A  0233               	subwf	___lldiv@dividend+3,w
  1730     026B  1D03               	skipz
  1731     026C  2A77               	goto	u615
  1732     026D  082E               	movf	___lldiv@divisor+2,w
  1733     026E  0232               	subwf	___lldiv@dividend+2,w
  1734     026F  1D03               	skipz
  1735     0270  2A77               	goto	u615
  1736     0271  082D               	movf	___lldiv@divisor+1,w
  1737     0272  0231               	subwf	___lldiv@dividend+1,w
  1738     0273  1D03               	skipz
  1739     0274  2A77               	goto	u615
  1740     0275  082C               	movf	___lldiv@divisor,w
  1741     0276  0230               	subwf	___lldiv@dividend,w
  1742     0277                     u615:
  1743     0277  1C03               	skipc
  1744     0278  2A7A               	goto	u611
  1745     0279  2A7B               	goto	u610
  1746     027A                     u611:
  1747     027A  2A84               	goto	l1009
  1748     027B                     u610:
  1749     027B                     l1005:
  1750     027B  082C               	movf	___lldiv@divisor,w
  1751     027C  02B0               	subwf	___lldiv@dividend,f
  1752     027D  082D               	movf	___lldiv@divisor+1,w
  1753     027E  3BB1               	subwfb	___lldiv@dividend+1,f
  1754     027F  082E               	movf	___lldiv@divisor+2,w
  1755     0280  3BB2               	subwfb	___lldiv@dividend+2,f
  1756     0281  082F               	movf	___lldiv@divisor+3,w
  1757     0282  3BB3               	subwfb	___lldiv@dividend+3,f
  1758     0283                     l1007:
  1759     0283  1435               	bsf	___lldiv@quotient,0
  1760     0284                     l1009:
  1761     0284  3001               	movlw	1
  1762     0285                     u625:
  1763     0285  36AF               	lsrf	___lldiv@divisor+3,f
  1764     0286  0CAE               	rrf	___lldiv@divisor+2,f
  1765     0287  0CAD               	rrf	___lldiv@divisor+1,f
  1766     0288  0CAC               	rrf	___lldiv@divisor,f
  1767     0289  0B89               	decfsz	9,f
  1768     028A  2A85               	goto	u625
  1769     028B                     l1011:
  1770     028B  3001               	movlw	1
  1771     028C  02B9               	subwf	___lldiv@counter,f
  1772     028D  1D03               	btfss	3,2
  1773     028E  2A90               	goto	u631
  1774     028F  2A91               	goto	u630
  1775     0290                     u631:
  1776     0290  2A62               	goto	l1001
  1777     0291                     u630:
  1778     0291                     l1013:
  1779     0291  0838               	movf	___lldiv@quotient+3,w
  1780     0292  00AF               	movwf	?___lldiv+3
  1781     0293  0837               	movf	___lldiv@quotient+2,w
  1782     0294  00AE               	movwf	?___lldiv+2
  1783     0295  0836               	movf	___lldiv@quotient+1,w
  1784     0296  00AD               	movwf	?___lldiv+1
  1785     0297  0835               	movf	___lldiv@quotient,w
  1786     0298  00AC               	movwf	?___lldiv
  1787     0299                     l217:
  1788     0299  0008               	return
  1789     029A                     __end_of___lldiv:
  1790                           
  1791                           	psect	text8
  1792     03A7                     __ptext8:	
  1793 ;; *************** function _PWMinit *****************
  1794 ;; Defined at:
  1795 ;;		line 25 in file "KF1.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0
  1809 ;;      Params:         0       0
  1810 ;;      Locals:         0       0
  1811 ;;      Temps:          0       0
  1812 ;;      Totals:         0       0
  1813 ;;Total ram usage:        0 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 1
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823     03A7                     _PWMinit:	
  1824                           ;psect for function _PWMinit
  1825                           
  1826     03A7                     l923:	
  1827                           ;incstack = 0
  1828                           ; Regs used in _PWMinit: [wreg+status,2+status,0]
  1829                           
  1830                           
  1831                           ;KF1.c: 27:     TRISAbits.TRISA2 = 1;
  1832     03A7  0021               	movlb	1	; select bank1
  1833     03A8  150C               	bsf	12,2	;volatile
  1834     03A9                     l925:
  1835                           
  1836                           ;KF1.c: 28:     PWM1CON = 0x00;
  1837     03A9  002C               	movlb	12	; select bank12
  1838     03AA  0193               	clrf	19	;volatile
  1839     03AB                     l927:
  1840                           
  1841                           ;KF1.c: 29:     PWM1CONbits.PWM1POL = 0;
  1842     03AB  1213               	bcf	19,4	;volatile
  1843     03AC                     l929:
  1844                           
  1845                           ;KF1.c: 30:     PR2 = 200;
  1846     03AC  30C8               	movlw	200
  1847     03AD  0020               	movlb	0	; select bank0
  1848     03AE  009B               	movwf	27	;volatile
  1849     03AF                     l931:
  1850                           
  1851                           ;KF1.c: 31:     PWM1DCH = 0x00;
  1852     03AF  002C               	movlb	12	; select bank12
  1853     03B0  0192               	clrf	18	;volatile
  1854     03B1                     l933:
  1855                           
  1856                           ;KF1.c: 32:     PWM1DCL = 0x00;
  1857     03B1  0191               	clrf	17	;volatile
  1858     03B2                     l935:
  1859                           
  1860                           ;KF1.c: 33:     INTCONbits.GIE = 1;
  1861     03B2  178B               	bsf	11,7	;volatile
  1862     03B3                     l937:
  1863                           
  1864                           ;KF1.c: 34:     INTCONbits.PEIE = 1;
  1865     03B3  170B               	bsf	11,6	;volatile
  1866     03B4                     l939:
  1867                           
  1868                           ;KF1.c: 35:     PIE1bits.TMR2IE = 1;
  1869     03B4  0021               	movlb	1	; select bank1
  1870     03B5  1491               	bsf	17,1	;volatile
  1871     03B6                     l941:
  1872                           
  1873                           ;KF1.c: 36:     PIR1bits.TMR2IF = 0;
  1874     03B6  0020               	movlb	0	; select bank0
  1875     03B7  1091               	bcf	17,1	;volatile
  1876     03B8                     l943:
  1877                           
  1878                           ;KF1.c: 37:     T2CONbits.T2CKPS = 3;
  1879     03B8  3003               	movlw	3
  1880     03B9  049C               	iorwf	28,f	;volatile
  1881     03BA                     l945:
  1882                           
  1883                           ;KF1.c: 38:     PWM1CONbits.PWM1EN = 1;
  1884     03BA  002C               	movlb	12	; select bank12
  1885     03BB  1793               	bsf	19,7	;volatile
  1886     03BC                     l947:
  1887                           
  1888                           ;KF1.c: 39:     TRISAbits.TRISA2 = 0;
  1889     03BC  0021               	movlb	1	; select bank1
  1890     03BD  110C               	bcf	12,2	;volatile
  1891     03BE                     l949:
  1892                           
  1893                           ;KF1.c: 40:     PWM1CONbits.PWM1OE = 1;
  1894     03BE  002C               	movlb	12	; select bank12
  1895     03BF  1713               	bsf	19,6	;volatile
  1896     03C0                     l951:
  1897                           
  1898                           ;KF1.c: 41:     T2CONbits.TMR2ON = 1;
  1899     03C0  0020               	movlb	0	; select bank0
  1900     03C1  151C               	bsf	28,2	;volatile
  1901     03C2                     l113:
  1902     03C2  0008               	return
  1903     03C3                     __end_of_PWMinit:
  1904                           
  1905                           	psect	intentry
  1906     0004                     __pintentry:	
  1907 ;; *************** function _ISR *****************
  1908 ;; Defined at:
  1909 ;;		line 68 in file "main.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  i               1    8[COMMON] char 
  1914 ;;  p               1    7[COMMON] char 
  1915 ;;  v               1    6[COMMON] char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0
  1925 ;;      Params:         0       0
  1926 ;;      Locals:         3       0
  1927 ;;      Temps:          6       0
  1928 ;;      Totals:         9       0
  1929 ;;Total ram usage:        9 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		Interrupt level 1
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938     0004                     _ISR:
  1939                           
  1940                           ;incstack = 0
  1941     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1942                           
  1943                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  1944     0005  3180               	pagesel	$
  1945     0006                     i1l1041:
  1946                           
  1947                           ;main.c: 70:     signed char v, i, p;;main.c: 71:     if(PIR1bits.TMR2IF == 1)
  1948     0006  0020               	movlb	0	; select bank0
  1949     0007  1C91               	btfss	17,1	;volatile
  1950     0008  280A               	goto	u67_21
  1951     0009  280B               	goto	u67_20
  1952     000A                     u67_21:
  1953     000A  2837               	goto	i1l1067
  1954     000B                     u67_20:
  1955     000B                     i1l1043:
  1956                           
  1957                           ;main.c: 72:  {;main.c: 73:   PIE1bits.TMR2IE = 0;
  1958     000B  0021               	movlb	1	; select bank1
  1959     000C  1091               	bcf	17,1	;volatile
  1960                           
  1961                           ;main.c: 74:         T2CONbits.TMR2ON = 0;
  1962     000D  0020               	movlb	0	; select bank0
  1963     000E  111C               	bcf	28,2	;volatile
  1964                           
  1965                           ;main.c: 75:         PIR1bits.TMR2IF = 0;
  1966     000F  1091               	bcf	17,1	;volatile
  1967     0010                     i1l1045:
  1968                           
  1969                           ;main.c: 76:   if(PWM1DCH >= PR2)
  1970     0010  081B               	movf	27,w	;volatile
  1971     0011  002C               	movlb	12	; select bank12
  1972     0012  0212               	subwf	18,w	;volatile
  1973     0013  1C03               	skipc
  1974     0014  2816               	goto	u68_21
  1975     0015  2817               	goto	u68_20
  1976     0016                     u68_21:
  1977     0016  281A               	goto	i1l1049
  1978     0017                     u68_20:
  1979     0017                     i1l1047:
  1980                           
  1981                           ;main.c: 77:         {;main.c: 78:             p = -1;
  1982     0017  01F7               	clrf	ISR@p
  1983     0018  03F7               	decf	ISR@p,f
  1984                           
  1985                           ;main.c: 79:   }
  1986     0019  2821               	goto	i1l1053
  1987     001A                     i1l1049:
  1988     001A  0812               	movf	18,w	;volatile
  1989     001B  1D03               	btfss	3,2
  1990     001C  281E               	goto	u69_21
  1991     001D  281F               	goto	u69_20
  1992     001E                     u69_21:
  1993     001E  2821               	goto	i1l1053
  1994     001F                     u69_20:
  1995     001F                     i1l1051:
  1996                           
  1997                           ;main.c: 81:         {;main.c: 82:    p = 1;
  1998     001F  01F7               	clrf	ISR@p
  1999     0020  0AF7               	incf	ISR@p,f
  2000     0021                     i1l1053:
  2001                           
  2002                           ;main.c: 84:         if(p == 1)
  2003     0021  0377               	decf	ISR@p,w
  2004     0022  1D03               	btfss	3,2
  2005     0023  2825               	goto	u70_21
  2006     0024  2826               	goto	u70_20
  2007     0025                     u70_21:
  2008     0025  282B               	goto	i1l1057
  2009     0026                     u70_20:
  2010     0026                     i1l1055:
  2011                           
  2012                           ;main.c: 85:         {;main.c: 86:             PWM1DCH++;
  2013     0026  3001               	movlw	1
  2014     0027  00F0               	movwf	??_ISR
  2015     0028  0870               	movf	??_ISR,w
  2016     0029  0792               	addwf	18,f	;volatile
  2017                           
  2018                           ;main.c: 87:         }
  2019     002A  2832               	goto	i1l1061
  2020     002B                     i1l1057:
  2021     002B  0A77               	incf	ISR@p,w
  2022     002C  1D03               	btfss	3,2
  2023     002D  282F               	goto	u71_21
  2024     002E  2830               	goto	u71_20
  2025     002F                     u71_21:
  2026     002F  2832               	goto	i1l1061
  2027     0030                     u71_20:
  2028     0030                     i1l1059:
  2029                           
  2030                           ;main.c: 89:         {;main.c: 90:             PWM1DCH--;
  2031     0030  3001               	movlw	1
  2032     0031  0292               	subwf	18,f	;volatile
  2033     0032                     i1l1061:
  2034                           
  2035                           ;main.c: 92:         TMR2 = 0x00;
  2036     0032  0020               	movlb	0	; select bank0
  2037     0033  019A               	clrf	26	;volatile
  2038     0034                     i1l1063:
  2039                           
  2040                           ;main.c: 93:   T2CONbits.TMR2ON = 1;
  2041     0034  151C               	bsf	28,2	;volatile
  2042     0035                     i1l1065:
  2043                           
  2044                           ;main.c: 94:         PIE1bits.TMR2IE = 1;
  2045     0035  0021               	movlb	1	; select bank1
  2046     0036  1491               	bsf	17,1	;volatile
  2047     0037                     i1l1067:
  2048                           
  2049                           ;main.c: 97:     if(PIR1bits.ADIF == 1)
  2050     0037  0020               	movlb	0	; select bank0
  2051     0038  1F11               	btfss	17,6	;volatile
  2052     0039  283B               	goto	u72_21
  2053     003A  283C               	goto	u72_20
  2054     003B                     u72_21:
  2055     003B  28BF               	goto	i1l77
  2056     003C                     u72_20:
  2057     003C                     i1l1069:
  2058                           
  2059                           ;main.c: 98:     {;main.c: 99:         PIE1bits.ADIE = 0;
  2060     003C  0021               	movlb	1	; select bank1
  2061     003D  1311               	bcf	17,6	;volatile
  2062                           
  2063                           ;main.c: 100:         PIR1bits.ADIF = 0;
  2064     003E  0020               	movlb	0	; select bank0
  2065     003F  1311               	bcf	17,6	;volatile
  2066     0040                     i1l1071:
  2067                           
  2068                           ;main.c: 102:         if(ADCON0bits.CHS == 0x00)
  2069     0040  0021               	movlb	1	; select bank1
  2070     0041  0C1D               	rrf	29,w	;volatile
  2071     0042  0C89               	rrf	9,f
  2072     0043  391F               	andlw	31
  2073     0044  3A00               	xorlw	0
  2074     0045  1D03               	skipz
  2075     0046  2848               	goto	u73_21
  2076     0047  2849               	goto	u73_20
  2077     0048                     u73_21:
  2078     0048  287C               	goto	i1l1087
  2079     0049                     u73_20:
  2080     0049                     i1l1073:
  2081                           
  2082                           ;main.c: 103:         {;main.c: 104:             for(i = 0; i < 80; i++)
  2083     0049  01F8               	clrf	ISR@i
  2084     004A                     i1l1079:
  2085                           
  2086                           ;main.c: 105:             {;main.c: 106:                 if(Rt >= TABLE[i])
  2087     004A  0878               	movf	ISR@i,w
  2088     004B  00F0               	movwf	??_ISR
  2089     004C  01F1               	clrf	??_ISR+1
  2090     004D  35F0               	lslf	??_ISR,f
  2091     004E  0DF1               	rlf	??_ISR+1,f
  2092     004F  309F               	movlw	low _TABLE
  2093     0050  0770               	addwf	??_ISR,w
  2094     0051  0084               	movwf	4
  2095     0052  3001               	movlw	high _TABLE
  2096     0053  3D71               	addwfc	??_ISR+1,w
  2097     0054  3880               	iorlw	128
  2098     0055  0085               	movwf	5
  2099     0056  3F00               	moviw [0]fsr0
  2100     0057  00F2               	movwf	??_ISR+2
  2101     0058  3F01               	moviw [1]fsr0
  2102     0059  00F3               	movwf	??_ISR+3
  2103     005A  01F4               	clrf	??_ISR+4
  2104     005B  01F5               	clrf	??_ISR+5
  2105     005C  0875               	movf	??_ISR+5,w
  2106     005D  0020               	movlb	0	; select bank0
  2107     005E  024C               	subwf	_Rt+3,w
  2108     005F  1D03               	skipz
  2109     0060  286B               	goto	u74_25
  2110     0061  0874               	movf	??_ISR+4,w
  2111     0062  024B               	subwf	_Rt+2,w
  2112     0063  1D03               	skipz
  2113     0064  286B               	goto	u74_25
  2114     0065  0873               	movf	??_ISR+3,w
  2115     0066  024A               	subwf	_Rt+1,w
  2116     0067  1D03               	skipz
  2117     0068  286B               	goto	u74_25
  2118     0069  0872               	movf	??_ISR+2,w
  2119     006A  0249               	subwf	_Rt,w
  2120     006B                     u74_25:
  2121     006B  1C03               	skipc
  2122     006C  286E               	goto	u74_21
  2123     006D  286F               	goto	u74_20
  2124     006E                     u74_21:
  2125     006E  2870               	goto	i1l1083
  2126     006F                     u74_20:
  2127     006F                     i1l1081:
  2128                           
  2129                           ;main.c: 109:                     break;
  2130     006F  28BD               	goto	i1l72
  2131     0070                     i1l1083:
  2132                           
  2133                           ;main.c: 111:             }
  2134     0070  3001               	movlw	1
  2135     0071  00F0               	movwf	??_ISR
  2136     0072  0870               	movf	??_ISR,w
  2137     0073  07F8               	addwf	ISR@i,f
  2138     0074                     i1l1085:
  2139     0074  0878               	movf	ISR@i,w
  2140     0075  3A80               	xorlw	128
  2141     0076  3E30               	addlw	-208
  2142     0077  1C03               	skipc
  2143     0078  287A               	goto	u75_21
  2144     0079  287B               	goto	u75_20
  2145     007A                     u75_21:
  2146     007A  284A               	goto	i1l1079
  2147     007B                     u75_20:
  2148     007B  28BD               	goto	i1l72
  2149     007C                     i1l1087:
  2150     007C  0C1D               	rrf	29,w	;volatile
  2151     007D  0C89               	rrf	9,f
  2152     007E  391F               	andlw	31
  2153     007F  3A03               	xorlw	3
  2154     0080  1D03               	skipz
  2155     0081  2883               	goto	u76_21
  2156     0082  2884               	goto	u76_20
  2157     0083                     u76_21:
  2158     0083  28BD               	goto	i1l72
  2159     0084                     u76_20:
  2160     0084                     i1l1089:
  2161                           
  2162                           ;main.c: 114:         {;main.c: 115:             if(v <= (t - 2))
  2163     0084  0876               	movf	ISR@v,w
  2164     0085  00F0               	movwf	??_ISR
  2165     0086  01F1               	clrf	??_ISR+1
  2166     0087  1BF0               	btfsc	??_ISR,7
  2167     0088  03F1               	decf	??_ISR+1,f
  2168     0089  0879               	movf	_t,w
  2169     008A  3EFE               	addlw	254
  2170     008B  00F2               	movwf	??_ISR+2
  2171     008C  30FF               	movlw	255
  2172     008D  3D7A               	addwfc	_t+1,w
  2173     008E  00F3               	movwf	??_ISR+3
  2174     008F  0873               	movf	??_ISR+3,w
  2175     0090  3A80               	xorlw	128
  2176     0091  00F4               	movwf	??_ISR+4
  2177     0092  0871               	movf	??_ISR+1,w
  2178     0093  3A80               	xorlw	128
  2179     0094  0274               	subwf	??_ISR+4,w
  2180     0095  1D03               	skipz
  2181     0096  2899               	goto	u77_25
  2182     0097  0870               	movf	??_ISR,w
  2183     0098  0272               	subwf	??_ISR+2,w
  2184     0099                     u77_25:
  2185     0099  1C03               	skipc
  2186     009A  289C               	goto	u77_21
  2187     009B  289D               	goto	u77_20
  2188     009C                     u77_21:
  2189     009C  28A6               	goto	i1l1095
  2190     009D                     u77_20:
  2191     009D                     i1l1091:
  2192                           
  2193                           ;main.c: 116:             {;main.c: 117:                 PORTAbits.RA1 = 1;
  2194     009D  0020               	movlb	0	; select bank0
  2195     009E  148C               	bsf	12,1	;volatile
  2196                           
  2197                           ;main.c: 118:                 PIE1bits.TMR2IE = 0;
  2198     009F  0021               	movlb	1	; select bank1
  2199     00A0  1091               	bcf	17,1	;volatile
  2200     00A1                     i1l1093:
  2201                           
  2202                           ;main.c: 119:                 PWM1DCH = PR2;
  2203     00A1  0020               	movlb	0	; select bank0
  2204     00A2  081B               	movf	27,w	;volatile
  2205     00A3  002C               	movlb	12	; select bank12
  2206     00A4  0092               	movwf	18	;volatile
  2207                           
  2208                           ;main.c: 120:             }
  2209     00A5  28BD               	goto	i1l72
  2210     00A6                     i1l1095:
  2211     00A6  0876               	movf	ISR@v,w
  2212     00A7  00F0               	movwf	??_ISR
  2213     00A8  01F1               	clrf	??_ISR+1
  2214     00A9  1BF0               	btfsc	??_ISR,7
  2215     00AA  03F1               	decf	??_ISR+1,f
  2216     00AB  087A               	movf	_t+1,w
  2217     00AC  3A80               	xorlw	128
  2218     00AD  00F2               	movwf	??_ISR+2
  2219     00AE  0871               	movf	??_ISR+1,w
  2220     00AF  3A80               	xorlw	128
  2221     00B0  0272               	subwf	??_ISR+2,w
  2222     00B1  1D03               	skipz
  2223     00B2  28B5               	goto	u78_25
  2224     00B3  0870               	movf	??_ISR,w
  2225     00B4  0279               	subwf	_t,w
  2226     00B5                     u78_25:
  2227     00B5  1803               	skipnc
  2228     00B6  28B8               	goto	u78_21
  2229     00B7  28B9               	goto	u78_20
  2230     00B8                     u78_21:
  2231     00B8  28BD               	goto	i1l72
  2232     00B9                     u78_20:
  2233     00B9                     i1l1097:
  2234                           
  2235                           ;main.c: 122:             {;main.c: 123:                 PORTAbits.RA1 = 0;
  2236     00B9  0020               	movlb	0	; select bank0
  2237     00BA  108C               	bcf	12,1	;volatile
  2238                           
  2239                           ;main.c: 124:                 PIE1bits.TMR2IE = 1;
  2240     00BB  0021               	movlb	1	; select bank1
  2241     00BC  1491               	bsf	17,1	;volatile
  2242     00BD                     i1l72:
  2243                           
  2244                           ;main.c: 127:         PIE1bits.ADIE = 1;
  2245     00BD  0021               	movlb	1	; select bank1
  2246     00BE  1711               	bsf	17,6	;volatile
  2247     00BF                     i1l77:
  2248     00BF  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2249     00C0  0009               	retfie
  2250     00C1                     __end_of_ISR:
  2251     007E                     btemp	set	126	;btemp
  2252     007E                     int$flags	set	126
  2253     007E                     wtemp0	set	126
  2254                           
  2255                           	psect	config
  2256                           
  2257                           ;Config register CONFIG1 @ 0x8007
  2258                           ;	Oscillator Selection Bits
  2259                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2260                           ;	Watchdog Timer Enable
  2261                           ;	WDTE = OFF, WDT disabled
  2262                           ;	Power-up Timer Enable
  2263                           ;	PWRTE = OFF, PWRT disabled
  2264                           ;	MCLR Pin Function Select
  2265                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2266                           ;	Flash Program Memory Code Protection
  2267                           ;	CP = OFF, Program memory code protection is disabled
  2268                           ;	Brown-out Reset Enable
  2269                           ;	BOREN = OFF, Brown-out Reset disabled
  2270                           ;	Clock Out Enable
  2271                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2272     8007                     	org	32775
  2273     8007  39E4               	dw	14820
  2274                           
  2275                           ;Config register CONFIG2 @ 0x8008
  2276                           ;	Flash Memory Self-Write Protection
  2277                           ;	WRT = OFF, Write protection off
  2278                           ;	Stack Overflow/Underflow Reset Enable
  2279                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  2280                           ;	Brown-out Reset Voltage Selection
  2281                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2282                           ;	Low-Power Brown Out Reset
  2283                           ;	LPBOR = OFF, Low-Power BOR is disabled
  2284                           ;	Low-Voltage Programming Enable
  2285                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2286     8008                     	org	32776
  2287     8008  1DFF               	dw	7679

Data Sizes:
    Strings     0
    Constant    160
    Data        0
    BSS         6
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            48     41      45

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    _getADS->_getADCValue
    ___lldiv->___lmul

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    1520
                                             26 BANK0     15    15      0
                            _PWMinit
                            ___lldiv
                             ___lmul
                             ___wmul
                        _getADCValue
                             _getADS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getADS                                              12    10      2     405
                                             10 BANK0     10     8      2
                            ___lwdiv
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         10     8      2      22
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     396
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     314
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWMinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  9     9      0     181
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMinit
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___wmul
   _getADCValue
   _getADS
     ___lwdiv
     _getADCValue
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              30      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            30      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               30     29      2D       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      38       6        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
DATA                 0      0      38       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 22 13:59:59 2023

                      _t 0079                       l52 0352                       l55 02DA  
                     l49 0331                       _Rt 0049      ___wmul@multiplicand 0022  
                    l110 03D6                      l113 03C2                      l217 0299  
                    l181 0392                      l183 03A6                      l195 0386  
                    l461 0317                      l901 0313                      l911 03CA  
                    l921 03D5                      l913 03CC                      l905 03C3  
                    l931 03AF                      l923 03A7                      l915 03D0  
                    l907 03C6                      l941 03B6                      l933 03B1  
                    l925 03A9                      l917 03D1                      l909 03C8  
                    l951 03C0                      l943 03B8                      l935 03B2  
                    l927 03AB                      l871 0326                      l919 03D3  
                    l945 03BA                      l937 03B3                      l929 03AC  
                    l881 02DE                      l873 032F                      l961 02BD  
                    l953 029A                      l947 03BC                      l939 03B4  
                    l971 0397                      l891 02F4                      l883 02E4  
                    l875 0335                      l955 02A3                      l949 03BE  
                    l981 035C                      l973 039C                      l965 0387  
                    l893 0303                      l885 02E7                      l869 031A  
                    l957 02A7                      l983 0360                      l975 03A2  
                    l967 038A                      l895 0307                      l887 02EC  
                    l879 02DB                      l959 02B4                      l993 023F  
                    l985 0368                      l969 038E                      l897 0308  
                    l889 02F0                      l995 0250                      l987 036F  
                    l979 0353                      l899 030D                      l997 0253  
                    l989 037E                      l999 025E                      u400 0335  
                    u401 0334                      u420 02E4                      u421 02E3  
                    _PR2 001B                      u415 0339                      u520 03A2  
                    u440 02F4                      u521 03A1                      u505 0393  
                    u441 02F3                      u610 027B                      u530 0360  
                    u611 027A                      u531 035F                      u515 0398  
                    u435 02E8                      u460 0303                      _ISR 0004  
                    u605 0263                      u461 0302                      u630 0291  
                    u631 0290                      u615 0277                      u455 02F5  
                    u560 037E                      u480 0313                      u640 00E8  
                    u625 0285                      u561 037D                      u545 0369  
                    u481 0312                      u465 02FF                      u641 00E7  
                    u570 0250                      u490 038E                      u650 012C  
                    u571 024F                      u555 0370                      u491 038D  
                    u475 0309                      u590 0262                      u591 0261  
                    u807 02A4                      u655 0128                      u585 0254  
                    u817 02B1                      u665 0191                      u827 02BE  
                    u837 032A                      u797 00DA                      wreg 0009  
                   ?_ISR 0070                     ISR@i 0078                     ISR@p 0077  
                   ISR@v 0076                     l1001 0262                     l1011 028B  
                   l1003 0269                     l1005 027B                     l1013 0291  
                   l1021 00D1                     l1007 0283                     l1031 010B  
                   l1023 00D4                     l1009 0284                     l1033 0136  
                   l1025 00E1                     l1017 00CC                     l1035 0176  
                   l1027 00E8                     l1019 00CE                     l1029 00F3  
                   l1037 0178                     l1039 0199                     i1l72 00BD  
                   i1l77 00BF                     _TMR2 001A                     _main 00CC  
                   fsr0h 0005                     fsr0l 0004                     btemp 007E  
                   start 00C1          __end_of_PWMinit 03C3                    ??_ISR 0070  
                  ?_main 0070          __end_of___lldiv 029A          __end_of___lwdiv 0318  
                  _TABLE 019F                    u70_20 0026                    u70_21 0025  
                  u71_20 0030                    u71_21 002F                    u72_20 003C  
                  u72_21 003B                    u73_20 0049                    u73_21 0048  
                  u74_20 006F                    u74_21 006E                    u74_25 006B  
                  u75_20 007B                    u67_20 000B                    u75_21 007A  
                  u67_21 000A                    u76_20 0084                    u68_20 0017  
                  u76_21 0083                    u68_21 0016                    u77_20 009D  
                  u69_20 001F                    u77_21 009C                    u69_21 001E  
                  u77_25 0099                    u78_20 00B9                    u78_21 00B8  
                  u78_25 00B5      ___lmul@multiplicand 0024                    _setup 03C3  
                  status 0003                    wtemp0 007E          __initialization 00C2  
           __end_of_main 019F                   ??_main 003A                   _ADCON1 009E  
                 _ADRESH 009C                   _ADRESL 009B                   ?_setup 0070  
                 i1l1041 0006                   i1l1051 001F                   i1l1043 000B  
                 i1l1061 0032                   i1l1053 0021                   i1l1045 0010  
                 i1l1071 0040                   i1l1063 0034                   i1l1055 0026  
                 i1l1047 0017                   i1l1081 006F                   i1l1073 0049  
                 i1l1065 0035                   i1l1057 002B                   i1l1049 001A  
                 i1l1091 009D                   i1l1083 0070                   i1l1059 0030  
                 i1l1067 0037                   i1l1093 00A1                   i1l1085 0074  
                 i1l1069 003C                   i1l1095 00A6                   i1l1079 004A  
                 i1l1087 007C                   i1l1097 00B9                   i1l1089 0084  
              ??_PWMinit 0020                   _OSCCON 0099                   ___lmul 0353  
                 ___wmul 0387                   _getADS 029A                ??___lldiv 0034  
              ??___lwdiv 0024                   main@VR 0041  __end_of__initialization 00C9  
     getADCValue@channel 0029            __end_of_TABLE 023F           __pcstackCOMMON 0070  
          __end_of_setup 03D7                  ??_setup 0020               __pbssBANK0 0049  
             __pmaintext 00CC                  ?___lmul 0020                  ?___wmul 0020  
                ?_getADS 002A               __pintentry 0004           ___lmul@product 0028  
                _PWM1DCH 0612                  _PWM1DCL 0611                  _PWM1CON 0613  
                _PWMinit 03A7            ??_getADCValue 0022                  ___lldiv 023F  
                ___lwdiv 02DB                  __ptext1 03C3                  __ptext2 029A  
                __ptext3 0318                  __ptext4 02DB                  __ptext5 0387  
                __ptext6 0353                  __ptext7 023F                  __ptext8 03A7  
              _T2CONbits 001C                  main@ad1 0045                  main@ad2 003E  
                main@add 0040     end_of_initialization 00C9          ___lldiv@divisor 002C  
        ___lldiv@counter 0039      __end_of_getADCValue 0353                _PORTAbits 000C  
              _TRISAbits 008C           __end_of___lmul 0387           __end_of___wmul 03A7  
         __end_of_getADS 02DB      start_initialization 00C2              __end_of_ISR 00C1  
            _getADCValue 0318                 ??___lmul 0028                 ??___wmul 0024  
               ??_getADS 002C              __pbssCOMMON 0079                ___latbits 0000  
          __pcstackBANK0 0020                 ?_PWMinit 0070         ___lwdiv@dividend 0022  
               ?___lldiv 002C                 ?___lwdiv 0020                getADS@ac1 002E  
              getADS@ac2 0030                getADS@ac3 0032         ___lwdiv@quotient 0025  
         ___wmul@product 0024                 _PIE1bits 0091                 _PIR1bits 0011  
             _ADCON0bits 009D        ___wmul@multiplier 0020        ___lmul@multiplier 0020  
             _ANSELAbits 018C          ___lwdiv@divisor 0020          ___lwdiv@counter 0027  
           ?_getADCValue 0020                 int$flags 007E               _INTCONbits 000B  
            _PWM1CONbits 0613                 intlevel1 0000         ___lldiv@dividend 0030  
          __pstringtext1 019F         ___lldiv@quotient 0035  
