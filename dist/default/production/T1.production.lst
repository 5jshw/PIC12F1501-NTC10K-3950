

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 21 15:39:57 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	12F1501
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 07/09/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC12F1501 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     008C                     	;# 
    83     0091                     	;# 
    84     0092                     	;# 
    85     0093                     	;# 
    86     0095                     	;# 
    87     0096                     	;# 
    88     0097                     	;# 
    89     0099                     	;# 
    90     009A                     	;# 
    91     009B                     	;# 
    92     009B                     	;# 
    93     009C                     	;# 
    94     009D                     	;# 
    95     009E                     	;# 
    96     009F                     	;# 
    97     010C                     	;# 
    98     0111                     	;# 
    99     0112                     	;# 
   100     0115                     	;# 
   101     0116                     	;# 
   102     0117                     	;# 
   103     0118                     	;# 
   104     0119                     	;# 
   105     011D                     	;# 
   106     018C                     	;# 
   107     0191                     	;# 
   108     0191                     	;# 
   109     0192                     	;# 
   110     0193                     	;# 
   111     0193                     	;# 
   112     0194                     	;# 
   113     0195                     	;# 
   114     0196                     	;# 
   115     0197                     	;# 
   116     020C                     	;# 
   117     0391                     	;# 
   118     0392                     	;# 
   119     0393                     	;# 
   120     0498                     	;# 
   121     0498                     	;# 
   122     0499                     	;# 
   123     049A                     	;# 
   124     049B                     	;# 
   125     049B                     	;# 
   126     049C                     	;# 
   127     049D                     	;# 
   128     049E                     	;# 
   129     049F                     	;# 
   130     0611                     	;# 
   131     0612                     	;# 
   132     0613                     	;# 
   133     0613                     	;# 
   134     0614                     	;# 
   135     0615                     	;# 
   136     0616                     	;# 
   137     0616                     	;# 
   138     0617                     	;# 
   139     0618                     	;# 
   140     0619                     	;# 
   141     0619                     	;# 
   142     061A                     	;# 
   143     061B                     	;# 
   144     061C                     	;# 
   145     061C                     	;# 
   146     0691                     	;# 
   147     0692                     	;# 
   148     0693                     	;# 
   149     0694                     	;# 
   150     0695                     	;# 
   151     0F0F                     	;# 
   152     0F10                     	;# 
   153     0F11                     	;# 
   154     0F12                     	;# 
   155     0F13                     	;# 
   156     0F14                     	;# 
   157     0F15                     	;# 
   158     0F16                     	;# 
   159     0F17                     	;# 
   160     0F18                     	;# 
   161     0F19                     	;# 
   162     0F1A                     	;# 
   163     0F1B                     	;# 
   164     0F1C                     	;# 
   165     0F1D                     	;# 
   166     0F1E                     	;# 
   167     0F1F                     	;# 
   168     0FE3                     	;# 
   169     0FE4                     	;# 
   170     0FE5                     	;# 
   171     0FE6                     	;# 
   172     0FE7                     	;# 
   173     0FE8                     	;# 
   174     0FE9                     	;# 
   175     0FEA                     	;# 
   176     0FEB                     	;# 
   177     0FED                     	;# 
   178     0FEE                     	;# 
   179     0FEF                     	;# 
   180     0000                     	;# 
   181     0001                     	;# 
   182     0002                     	;# 
   183     0003                     	;# 
   184     0004                     	;# 
   185     0005                     	;# 
   186     0006                     	;# 
   187     0007                     	;# 
   188     0008                     	;# 
   189     0009                     	;# 
   190     000A                     	;# 
   191     000B                     	;# 
   192     000C                     	;# 
   193     0011                     	;# 
   194     0012                     	;# 
   195     0013                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     008C                     	;# 
   206     0091                     	;# 
   207     0092                     	;# 
   208     0093                     	;# 
   209     0095                     	;# 
   210     0096                     	;# 
   211     0097                     	;# 
   212     0099                     	;# 
   213     009A                     	;# 
   214     009B                     	;# 
   215     009B                     	;# 
   216     009C                     	;# 
   217     009D                     	;# 
   218     009E                     	;# 
   219     009F                     	;# 
   220     010C                     	;# 
   221     0111                     	;# 
   222     0112                     	;# 
   223     0115                     	;# 
   224     0116                     	;# 
   225     0117                     	;# 
   226     0118                     	;# 
   227     0119                     	;# 
   228     011D                     	;# 
   229     018C                     	;# 
   230     0191                     	;# 
   231     0191                     	;# 
   232     0192                     	;# 
   233     0193                     	;# 
   234     0193                     	;# 
   235     0194                     	;# 
   236     0195                     	;# 
   237     0196                     	;# 
   238     0197                     	;# 
   239     020C                     	;# 
   240     0391                     	;# 
   241     0392                     	;# 
   242     0393                     	;# 
   243     0498                     	;# 
   244     0498                     	;# 
   245     0499                     	;# 
   246     049A                     	;# 
   247     049B                     	;# 
   248     049B                     	;# 
   249     049C                     	;# 
   250     049D                     	;# 
   251     049E                     	;# 
   252     049F                     	;# 
   253     0611                     	;# 
   254     0612                     	;# 
   255     0613                     	;# 
   256     0613                     	;# 
   257     0614                     	;# 
   258     0615                     	;# 
   259     0616                     	;# 
   260     0616                     	;# 
   261     0617                     	;# 
   262     0618                     	;# 
   263     0619                     	;# 
   264     0619                     	;# 
   265     061A                     	;# 
   266     061B                     	;# 
   267     061C                     	;# 
   268     061C                     	;# 
   269     0691                     	;# 
   270     0692                     	;# 
   271     0693                     	;# 
   272     0694                     	;# 
   273     0695                     	;# 
   274     0F0F                     	;# 
   275     0F10                     	;# 
   276     0F11                     	;# 
   277     0F12                     	;# 
   278     0F13                     	;# 
   279     0F14                     	;# 
   280     0F15                     	;# 
   281     0F16                     	;# 
   282     0F17                     	;# 
   283     0F18                     	;# 
   284     0F19                     	;# 
   285     0F1A                     	;# 
   286     0F1B                     	;# 
   287     0F1C                     	;# 
   288     0F1D                     	;# 
   289     0F1E                     	;# 
   290     0F1F                     	;# 
   291     0FE3                     	;# 
   292     0FE4                     	;# 
   293     0FE5                     	;# 
   294     0FE6                     	;# 
   295     0FE7                     	;# 
   296     0FE8                     	;# 
   297     0FE9                     	;# 
   298     0FEA                     	;# 
   299     0FEB                     	;# 
   300     0FED                     	;# 
   301     0FEE                     	;# 
   302     0FEF                     	;# 
   303                           
   304                           	psect	stringtext1
   305     01B4                     __pstringtext1:
   306     01B4                     _TABLE:
   307     01B4  34F0               	retlw	240
   308     01B5  3425               	retlw	37
   309     01B6  34CE               	retlw	206
   310     01B7  3423               	retlw	35
   311     01B8  34CE               	retlw	206
   312     01B9  3421               	retlw	33
   313     01BA  34EC               	retlw	236
   314     01BB  341F               	retlw	31
   315     01BC  342A               	retlw	42
   316     01BD  341E               	retlw	30
   317     01BE  3482               	retlw	130
   318     01BF  341C               	retlw	28
   319     01C0  34F4               	retlw	244
   320     01C1  341A               	retlw	26
   321     01C2  347E               	retlw	126
   322     01C3  3419               	retlw	25
   323     01C4  3420               	retlw	32
   324     01C5  3418               	retlw	24
   325     01C6  349E               	retlw	158
   326     01C7  3415               	retlw	21
   327     01C8  347A               	retlw	122
   328     01C9  3414               	retlw	20
   329     01CA  3466               	retlw	102
   330     01CB  3413               	retlw	19
   331     01CC  3464               	retlw	100
   332     01CD  3412               	retlw	18
   333     01CE  3470               	retlw	112
   334     01CF  3411               	retlw	17
   335     01D0  348A               	retlw	138
   336     01D1  3410               	retlw	16
   337     01D2  34B0               	retlw	176
   338     01D3  340F               	retlw	15
   339     01D4  34E4               	retlw	228
   340     01D5  340E               	retlw	14
   341     01D6  3424               	retlw	36
   342     01D7  340E               	retlw	14
   343     01D8  346E               	retlw	110
   344     01D9  340D               	retlw	13
   345     01DA  34C2               	retlw	194
   346     01DB  340C               	retlw	12
   347     01DC  3420               	retlw	32
   348     01DD  340C               	retlw	12
   349     01DE  3486               	retlw	134
   350     01DF  340B               	retlw	11
   351     01E0  34F6               	retlw	246
   352     01E1  340A               	retlw	10
   353     01E2  346C               	retlw	108
   354     01E3  340A               	retlw	10
   355     01E4  34EC               	retlw	236
   356     01E5  3409               	retlw	9
   357     01E6  3472               	retlw	114
   358     01E7  3409               	retlw	9
   359     01E8  34FE               	retlw	254
   360     01E9  3408               	retlw	8
   361     01EA  3490               	retlw	144
   362     01EB  3408               	retlw	8
   363     01EC  3428               	retlw	40
   364     01ED  3408               	retlw	8
   365     01EE  34C6               	retlw	198
   366     01EF  3407               	retlw	7
   367     01F0  3469               	retlw	105
   368     01F1  3407               	retlw	7
   369     01F2  3411               	retlw	17
   370     01F3  3407               	retlw	7
   371     01F4  34BE               	retlw	190
   372     01F5  3406               	retlw	6
   373     01F6  346E               	retlw	110
   374     01F7  3406               	retlw	6
   375     01F8  3423               	retlw	35
   376     01F9  3406               	retlw	6
   377     01FA  34DC               	retlw	220
   378     01FB  3405               	retlw	5
   379     01FC  3498               	retlw	152
   380     01FD  3405               	retlw	5
   381     01FE  3458               	retlw	88
   382     01FF  3405               	retlw	5
   383     0200  341B               	retlw	27
   384     0201  3405               	retlw	5
   385     0202  34E1               	retlw	225
   386     0203  3404               	retlw	4
   387     0204  34AA               	retlw	170
   388     0205  3404               	retlw	4
   389     0206  3476               	retlw	118
   390     0207  3404               	retlw	4
   391     0208  3444               	retlw	68
   392     0209  3404               	retlw	4
   393     020A  3415               	retlw	21
   394     020B  3404               	retlw	4
   395     020C  34E8               	retlw	232
   396     020D  3403               	retlw	3
   397     020E  34BD               	retlw	189
   398     020F  3403               	retlw	3
   399     0210  3494               	retlw	148
   400     0211  3403               	retlw	3
   401     0212  346D               	retlw	109
   402     0213  3403               	retlw	3
   403     0214  3448               	retlw	72
   404     0215  3403               	retlw	3
   405     0216  3425               	retlw	37
   406     0217  3403               	retlw	3
   407     0218  3404               	retlw	4
   408     0219  3403               	retlw	3
   409     021A  34E4               	retlw	228
   410     021B  3402               	retlw	2
   411     021C  34C5               	retlw	197
   412     021D  3402               	retlw	2
   413     021E  34A8               	retlw	168
   414     021F  3402               	retlw	2
   415     0220  348D               	retlw	141
   416     0221  3402               	retlw	2
   417     0222  3472               	retlw	114
   418     0223  3402               	retlw	2
   419     0224  3459               	retlw	89
   420     0225  3402               	retlw	2
   421     0226  3441               	retlw	65
   422     0227  3402               	retlw	2
   423     0228  342A               	retlw	42
   424     0229  3402               	retlw	2
   425     022A  3414               	retlw	20
   426     022B  3402               	retlw	2
   427     022C  34FF               	retlw	255
   428     022D  3401               	retlw	1
   429     022E  34EB               	retlw	235
   430     022F  3401               	retlw	1
   431     0230  34D8               	retlw	216
   432     0231  3401               	retlw	1
   433     0232  34C6               	retlw	198
   434     0233  3401               	retlw	1
   435     0234  34B4               	retlw	180
   436     0235  3401               	retlw	1
   437     0236  34A4               	retlw	164
   438     0237  3401               	retlw	1
   439     0238  3494               	retlw	148
   440     0239  3401               	retlw	1
   441     023A  3484               	retlw	132
   442     023B  3401               	retlw	1
   443     023C  3476               	retlw	118
   444     023D  3401               	retlw	1
   445     023E  3468               	retlw	104
   446     023F  3401               	retlw	1
   447     0240  345A               	retlw	90
   448     0241  3401               	retlw	1
   449     0242  344E               	retlw	78
   450     0243  3401               	retlw	1
   451     0244  3441               	retlw	65
   452     0245  3401               	retlw	1
   453     0246  3435               	retlw	53
   454     0247  3401               	retlw	1
   455     0248  342A               	retlw	42
   456     0249  3401               	retlw	1
   457     024A  341F               	retlw	31
   458     024B  3401               	retlw	1
   459     024C  3415               	retlw	21
   460     024D  3401               	retlw	1
   461     024E  340B               	retlw	11
   462     024F  3401               	retlw	1
   463     0250  3402               	retlw	2
   464     0251  3401               	retlw	1
   465     0252  34F8               	retlw	248
   466     0253  3400               	retlw	0
   467     0254                     __end_of_TABLE:
   468     000B                     _INTCONbits	set	11
   469     000C                     _PORTAbits	set	12
   470     001A                     _TMR2	set	26
   471     001B                     _PR2	set	27
   472     001C                     _T2CONbits	set	28
   473     0011                     _PIR1bits	set	17
   474     009E                     _ADCON1	set	158
   475     008C                     _TRISAbits	set	140
   476     0099                     _OSCCON	set	153
   477     0091                     _PIE1bits	set	145
   478     009B                     _ADRESL	set	155
   479     009C                     _ADRESH	set	156
   480     009D                     _ADCON0bits	set	157
   481     018C                     _ANSELAbits	set	396
   482     0611                     _PWM1DCL	set	1553
   483     0613                     _PWM1CONbits	set	1555
   484     0613                     _PWM1CON	set	1555
   485     0612                     _PWM1DCH	set	1554
   486                           
   487                           	psect	cinit
   488     00D9                     start_initialization:	
   489                           ; #config settings
   490                           
   491     00D9                     __initialization:
   492                           
   493                           ; Clear objects allocated to COMMON
   494     00D9  01F0               	clrf	__pbssCOMMON& (0+127)
   495     00DA  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   496     00DB  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   497     00DC  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   498     00DD  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   499     00DE  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   500                           
   501                           ; Clear objects allocated to BANK0
   502     00DF  303F               	movlw	low __pbssBANK0
   503     00E0  0084               	movwf	4
   504     00E1  3000               	movlw	high __pbssBANK0
   505     00E2  0085               	movwf	5
   506     00E3  300E               	movlw	14
   507     00E4  3183  23D0  3180   	fcall	clear_ram0
   508     00E7                     end_of_initialization:	
   509                           ;End of C runtime variable initialization code
   510                           
   511     00E7                     __end_of__initialization:
   512     00E7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   513     00E8  0020               	movlb	0
   514     00E9  28EA               	ljmp	_main	;jump to C main() function
   515                           
   516                           	psect	bssCOMMON
   517     0070                     __pbssCOMMON:
   518     0070                     _i:
   519     0070                     	ds	2
   520     0072                     _v:
   521     0072                     	ds	2
   522     0074                     _t:
   523     0074                     	ds	2
   524                           
   525                           	psect	bssBANK0
   526     003F                     __pbssBANK0:
   527     003F                     _Rt:
   528     003F                     	ds	4
   529     0043                     _ad1:
   530     0043                     	ds	4
   531     0047                     _ad2:
   532     0047                     	ds	2
   533     0049                     _VR:
   534     0049                     	ds	4
   535                           
   536                           	psect	clrtext
   537     03D0                     clear_ram0:	
   538                           ;	Called with FSR0 containing the base address, and
   539                           ;	WREG with the size to clear
   540                           
   541     03D0  0064               	clrwdt	;clear the watchdog before getting into this loop
   542     03D1                     clrloop0:
   543     03D1  0180               	clrf	0	;clear RAM location pointed to by FSR
   544     03D2  3101               	addfsr 0,1
   545     03D3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   546     03D4  2BD1               	goto	clrloop0	;have we reached the end yet?
   547     03D5  3400               	retlw	0	;all done for this memory range, return
   548                           
   549                           	psect	cstackCOMMON
   550     0076                     __pcstackCOMMON:
   551     0076                     ?_setup:
   552     0076                     ?_PWMinit:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0076                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0076                     ?_ISR:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0076                     ??_ISR:	
   562                           ; 1 bytes @ 0x0
   563                           
   564                           
   565                           ; 1 bytes @ 0x0
   566     0076                     	ds	4
   567     007A                     ISR@p:
   568                           
   569                           ; 2 bytes @ 0x4
   570     007A                     	ds	2
   571                           
   572                           	psect	cstackBANK0
   573     0020                     __pcstackBANK0:
   574     0020                     ??_setup:
   575     0020                     ??_PWMinit:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0020                     ?_getADCValue:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0020                     ?___lwdiv:	
   582                           ; 2 bytes @ 0x0
   583                           
   584     0020                     ?___lmul:	
   585                           ; 2 bytes @ 0x0
   586                           
   587     0020                     ___lwdiv@divisor:	
   588                           ; 4 bytes @ 0x0
   589                           
   590     0020                     ___lmul@multiplier:	
   591                           ; 2 bytes @ 0x0
   592                           
   593                           
   594                           ; 4 bytes @ 0x0
   595     0020                     	ds	2
   596     0022                     ??_getADCValue:
   597     0022                     ___lwdiv@dividend:	
   598                           ; 1 bytes @ 0x2
   599                           
   600                           
   601                           ; 2 bytes @ 0x2
   602     0022                     	ds	2
   603     0024                     ??___lwdiv:
   604     0024                     ___lmul@multiplicand:	
   605                           ; 1 bytes @ 0x4
   606                           
   607                           
   608                           ; 4 bytes @ 0x4
   609     0024                     	ds	1
   610     0025                     ___lwdiv@counter:
   611                           
   612                           ; 1 bytes @ 0x5
   613     0025                     	ds	1
   614     0026                     ___lwdiv@quotient:
   615                           
   616                           ; 2 bytes @ 0x6
   617     0026                     	ds	2
   618     0028                     ??___lmul:
   619     0028                     ___lmul@product:	
   620                           ; 1 bytes @ 0x8
   621                           
   622                           
   623                           ; 4 bytes @ 0x8
   624     0028                     	ds	1
   625     0029                     getADCValue@channel:
   626                           
   627                           ; 1 bytes @ 0x9
   628     0029                     	ds	1
   629     002A                     ?_getADS:
   630                           
   631                           ; 2 bytes @ 0xA
   632     002A                     	ds	2
   633     002C                     ??_getADS:
   634     002C                     ?___lldiv:	
   635                           ; 1 bytes @ 0xC
   636                           
   637     002C                     ___lldiv@divisor:	
   638                           ; 4 bytes @ 0xC
   639                           
   640                           
   641                           ; 4 bytes @ 0xC
   642     002C                     	ds	2
   643     002E                     getADS@ac1:
   644                           
   645                           ; 2 bytes @ 0xE
   646     002E                     	ds	2
   647     0030                     getADS@ac2:
   648     0030                     ___lldiv@dividend:	
   649                           ; 2 bytes @ 0x10
   650                           
   651                           
   652                           ; 4 bytes @ 0x10
   653     0030                     	ds	2
   654     0032                     getADS@ac3:
   655                           
   656                           ; 2 bytes @ 0x12
   657     0032                     	ds	2
   658     0034                     ??___lldiv:
   659     0034                     getADS@acd:	
   660                           ; 1 bytes @ 0x14
   661                           
   662                           
   663                           ; 2 bytes @ 0x14
   664     0034                     	ds	1
   665     0035                     ___lldiv@quotient:
   666                           
   667                           ; 4 bytes @ 0x15
   668     0035                     	ds	4
   669     0039                     ___lldiv@counter:
   670                           
   671                           ; 1 bytes @ 0x19
   672     0039                     	ds	1
   673     003A                     ??_main:
   674                           
   675                           ; 1 bytes @ 0x1A
   676     003A                     	ds	4
   677     003E                     main@add:
   678                           
   679                           ; 1 bytes @ 0x1E
   680     003E                     	ds	1
   681                           
   682                           	psect	maintext
   683     00EA                     __pmaintext:	
   684 ;;
   685 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   686 ;;
   687 ;; *************** function _main *****************
   688 ;; Defined at:
   689 ;;		line 18 in file "main.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  add             1   30[BANK0 ] unsigned char 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0, pclath, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : B1F/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0
   703 ;;      Params:         0       0
   704 ;;      Locals:         0       1
   705 ;;      Temps:          0       4
   706 ;;      Totals:         0       5
   707 ;;Total ram usage:        5 bytes
   708 ;; Hardware stack levels required when called: 3
   709 ;; This function calls:
   710 ;;		_PWMinit
   711 ;;		___lldiv
   712 ;;		___lmul
   713 ;;		___lwdiv
   714 ;;		_getADCValue
   715 ;;		_getADS
   716 ;;		_setup
   717 ;; This function is called by:
   718 ;;		Startup code after reset
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722     00EA                     _main:	
   723                           ;psect for function _main
   724                           
   725     00EA                     l1217:	
   726                           ;incstack = 0
   727                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   728                           
   729                           
   730                           ;main.c: 20:     char add = 0;
   731     00EA  0020               	movlb	0	; select bank0
   732     00EB  01BE               	clrf	main@add
   733     00EC                     l1219:
   734                           
   735                           ;main.c: 21:     setup();
   736     00EC  3183  23BC  3180   	fcall	_setup
   737     00EF                     l1221:
   738                           
   739                           ;main.c: 22:     PWMinit();
   740     00EF  3183  23A0  3180   	fcall	_PWMinit
   741     00F2                     l1223:
   742                           
   743                           ;main.c: 23:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   744     00F2  3015               	movlw	21
   745     00F3  0020               	movlb	0	; select bank0
   746     00F4  00BB               	movwf	??_main+1
   747     00F5  304B               	movlw	75
   748     00F6  00BA               	movwf	??_main
   749     00F7  30BE               	movlw	190
   750     00F8                     u937:
   751     00F8  0B89               	decfsz	9,f
   752     00F9  28F8               	goto	u937
   753     00FA  0BBA               	decfsz	??_main,f
   754     00FB  28F8               	goto	u937
   755     00FC  0BBB               	decfsz	??_main+1,f
   756     00FD  28F8               	goto	u937
   757     00FE  0000               	nop
   758     00FF                     l1225:
   759                           
   760                           ;main.c: 25:     {;main.c: 26:         if(add == 3)
   761     00FF  3003               	movlw	3
   762     0100  0020               	movlb	0	; select bank0
   763     0101  063E               	xorwf	main@add,w
   764     0102  1D03               	btfss	3,2
   765     0103  2905               	goto	u911
   766     0104  2906               	goto	u910
   767     0105                     u911:
   768     0105  2996               	goto	l1237
   769     0106                     u910:
   770     0106                     l1227:
   771                           
   772                           ;main.c: 27:         {;main.c: 28:             ad1 = getADCValue(0x00);
   773     0106  3000               	movlw	0
   774     0107  3183  2331  3180   	fcall	_getADCValue
   775     010A  0020               	movlb	0	; select bank0
   776     010B  0820               	movf	?_getADCValue,w
   777     010C  00C3               	movwf	_ad1
   778     010D  0821               	movf	?_getADCValue+1,w
   779     010E  00C4               	movwf	_ad1+1
   780     010F  01C5               	clrf	_ad1+2
   781     0110  01C6               	clrf	_ad1+3
   782     0111                     l1229:
   783                           
   784                           ;main.c: 29:             ad1 = 1024 - ad1;
   785     0111  3000               	movlw	0
   786     0112  00BA               	movwf	??_main
   787     0113  3004               	movlw	4
   788     0114  00BB               	movwf	??_main+1
   789     0115  3000               	movlw	0
   790     0116  00BC               	movwf	??_main+2
   791     0117  3000               	movlw	0
   792     0118  00BD               	movwf	??_main+3
   793     0119  0843               	movf	_ad1,w
   794     011A  02BA               	subwf	??_main,f
   795     011B  0844               	movf	_ad1+1,w
   796     011C  3BBB               	subwfb	??_main+1,f
   797     011D  0845               	movf	_ad1+2,w
   798     011E  3BBC               	subwfb	??_main+2,f
   799     011F  0846               	movf	_ad1+3,w
   800     0120  3BBD               	subwfb	??_main+3,f
   801     0121  083D               	movf	??_main+3,w
   802     0122  00C6               	movwf	_ad1+3
   803     0123  083C               	movf	??_main+2,w
   804     0124  00C5               	movwf	_ad1+2
   805     0125  083B               	movf	??_main+1,w
   806     0126  00C4               	movwf	_ad1+1
   807     0127  083A               	movf	??_main,w
   808     0128  00C3               	movwf	_ad1
   809     0129                     l1231:
   810                           
   811                           ;main.c: 30:             VR = ad1 * 500 / 1024;
   812     0129  0846               	movf	_ad1+3,w
   813     012A  00A3               	movwf	___lmul@multiplier+3
   814     012B  0845               	movf	_ad1+2,w
   815     012C  00A2               	movwf	___lmul@multiplier+2
   816     012D  0844               	movf	_ad1+1,w
   817     012E  00A1               	movwf	___lmul@multiplier+1
   818     012F  0843               	movf	_ad1,w
   819     0130  00A0               	movwf	___lmul@multiplier
   820     0131  3000               	movlw	0
   821     0132  00A7               	movwf	___lmul@multiplicand+3
   822     0133  3000               	movlw	0
   823     0134  00A6               	movwf	___lmul@multiplicand+2
   824     0135  3001               	movlw	1
   825     0136  00A5               	movwf	___lmul@multiplicand+1
   826     0137  30F4               	movlw	244
   827     0138  00A4               	movwf	___lmul@multiplicand
   828     0139  3183  236C  3180   	fcall	___lmul
   829     013C  0020               	movlb	0	; select bank0
   830     013D  0820               	movf	?___lmul,w
   831     013E  00BA               	movwf	??_main
   832     013F  0821               	movf	?___lmul+1,w
   833     0140  00BB               	movwf	??_main+1
   834     0141  0822               	movf	?___lmul+2,w
   835     0142  00BC               	movwf	??_main+2
   836     0143  0823               	movf	?___lmul+3,w
   837     0144  00BD               	movwf	??_main+3
   838     0145  300A               	movlw	10
   839     0146                     u925:
   840     0146  36BD               	lsrf	??_main+3,f
   841     0147  0CBC               	rrf	??_main+2,f
   842     0148  0CBB               	rrf	??_main+1,f
   843     0149  0CBA               	rrf	??_main,f
   844     014A                     u920:
   845     014A  0B89               	decfsz	9,f
   846     014B  2946               	goto	u925
   847     014C  083D               	movf	??_main+3,w
   848     014D  00CC               	movwf	_VR+3
   849     014E  083C               	movf	??_main+2,w
   850     014F  00CB               	movwf	_VR+2
   851     0150  083B               	movf	??_main+1,w
   852     0151  00CA               	movwf	_VR+1
   853     0152  083A               	movf	??_main,w
   854     0153  00C9               	movwf	_VR
   855     0154                     l1233:
   856                           
   857                           ;main.c: 31:             Rt = (unsigned long)(500 - VR) * 1000 / VR;
   858     0154  084C               	movf	_VR+3,w
   859     0155  00AF               	movwf	___lldiv@divisor+3
   860     0156  084B               	movf	_VR+2,w
   861     0157  00AE               	movwf	___lldiv@divisor+2
   862     0158  084A               	movf	_VR+1,w
   863     0159  00AD               	movwf	___lldiv@divisor+1
   864     015A  0849               	movf	_VR,w
   865     015B  00AC               	movwf	___lldiv@divisor
   866     015C  30F4               	movlw	244
   867     015D  00BA               	movwf	??_main
   868     015E  3001               	movlw	1
   869     015F  00BB               	movwf	??_main+1
   870     0160  3000               	movlw	0
   871     0161  00BC               	movwf	??_main+2
   872     0162  3000               	movlw	0
   873     0163  00BD               	movwf	??_main+3
   874     0164  0849               	movf	_VR,w
   875     0165  02BA               	subwf	??_main,f
   876     0166  084A               	movf	_VR+1,w
   877     0167  3BBB               	subwfb	??_main+1,f
   878     0168  084B               	movf	_VR+2,w
   879     0169  3BBC               	subwfb	??_main+2,f
   880     016A  084C               	movf	_VR+3,w
   881     016B  3BBD               	subwfb	??_main+3,f
   882     016C  083D               	movf	??_main+3,w
   883     016D  00A3               	movwf	___lmul@multiplier+3
   884     016E  083C               	movf	??_main+2,w
   885     016F  00A2               	movwf	___lmul@multiplier+2
   886     0170  083B               	movf	??_main+1,w
   887     0171  00A1               	movwf	___lmul@multiplier+1
   888     0172  083A               	movf	??_main,w
   889     0173  00A0               	movwf	___lmul@multiplier
   890     0174  3000               	movlw	0
   891     0175  00A7               	movwf	___lmul@multiplicand+3
   892     0176  3000               	movlw	0
   893     0177  00A6               	movwf	___lmul@multiplicand+2
   894     0178  3003               	movlw	3
   895     0179  00A5               	movwf	___lmul@multiplicand+1
   896     017A  30E8               	movlw	232
   897     017B  00A4               	movwf	___lmul@multiplicand
   898     017C  3183  236C  3180   	fcall	___lmul
   899     017F  0020               	movlb	0	; select bank0
   900     0180  0823               	movf	?___lmul+3,w
   901     0181  00B3               	movwf	___lldiv@dividend+3
   902     0182  0822               	movf	?___lmul+2,w
   903     0183  00B2               	movwf	___lldiv@dividend+2
   904     0184  0821               	movf	?___lmul+1,w
   905     0185  00B1               	movwf	___lldiv@dividend+1
   906     0186  0820               	movf	?___lmul,w
   907     0187  00B0               	movwf	___lldiv@dividend
   908     0188  3182  2254  3180   	fcall	___lldiv
   909     018B  0020               	movlb	0	; select bank0
   910     018C  082F               	movf	?___lldiv+3,w
   911     018D  00C2               	movwf	_Rt+3
   912     018E  082E               	movf	?___lldiv+2,w
   913     018F  00C1               	movwf	_Rt+2
   914     0190  082D               	movf	?___lldiv+1,w
   915     0191  00C0               	movwf	_Rt+1
   916     0192  082C               	movf	?___lldiv,w
   917     0193  00BF               	movwf	_Rt
   918     0194                     l1235:
   919                           
   920                           ;main.c: 32:             add = 0;
   921     0194  01BE               	clrf	main@add
   922                           
   923                           ;main.c: 33:         }
   924     0195  28FF               	goto	l1225
   925     0196                     l1237:
   926                           
   927                           ;main.c: 35:         {;main.c: 36:             ad2 = getADS();
   928     0196  3182  22AF  3180   	fcall	_getADS
   929     0199  0020               	movlb	0	; select bank0
   930     019A  082B               	movf	?_getADS+1,w
   931     019B  00C8               	movwf	_ad2+1
   932     019C  082A               	movf	?_getADS,w
   933     019D  00C7               	movwf	_ad2
   934                           
   935                           ;main.c: 37:             t = ad2 / 12;
   936     019E  300C               	movlw	12
   937     019F  00A0               	movwf	___lwdiv@divisor
   938     01A0  3000               	movlw	0
   939     01A1  00A1               	movwf	___lwdiv@divisor+1
   940     01A2  0848               	movf	_ad2+1,w
   941     01A3  00A3               	movwf	___lwdiv@dividend+1
   942     01A4  0847               	movf	_ad2,w
   943     01A5  00A2               	movwf	___lwdiv@dividend
   944     01A6  3182  22F4  3180   	fcall	___lwdiv
   945     01A9  0020               	movlb	0	; select bank0
   946     01AA  0821               	movf	?___lwdiv+1,w
   947     01AB  00F5               	movwf	_t+1
   948     01AC  0820               	movf	?___lwdiv,w
   949     01AD  00F4               	movwf	_t
   950     01AE                     l1239:
   951                           
   952                           ;main.c: 38:             add++;
   953     01AE  3001               	movlw	1
   954     01AF  00BA               	movwf	??_main
   955     01B0  083A               	movf	??_main,w
   956     01B1  07BE               	addwf	main@add,f
   957     01B2  28FF               	goto	l1225
   958     01B3  28D8               	ljmp	start
   959     01B4                     __end_of_main:
   960                           
   961                           	psect	text1
   962     03BC                     __ptext1:	
   963 ;; *************** function _setup *****************
   964 ;; Defined at:
   965 ;;		line 5 in file "KF1.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0
   979 ;;      Params:         0       0
   980 ;;      Locals:         0       0
   981 ;;      Temps:          0       0
   982 ;;      Totals:         0       0
   983 ;;Total ram usage:        0 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993     03BC                     _setup:	
   994                           ;psect for function _setup
   995                           
   996     03BC                     l1117:	
   997                           ;incstack = 0
   998                           ; Regs used in _setup: [wreg]
   999                           
  1000                           
  1001                           ;KF1.c: 7:     OSCCON = 0b01110000;
  1002     03BC  3070               	movlw	112
  1003     03BD  0021               	movlb	1	; select bank1
  1004     03BE  0099               	movwf	25	;volatile
  1005     03BF                     l1119:
  1006                           
  1007                           ;KF1.c: 10:     PORTAbits.RA1 = 0;
  1008     03BF  0020               	movlb	0	; select bank0
  1009     03C0  108C               	bcf	12,1	;volatile
  1010     03C1                     l1121:
  1011                           
  1012                           ;KF1.c: 11:     TRISAbits.TRISA1 = 0;
  1013     03C1  0021               	movlb	1	; select bank1
  1014     03C2  108C               	bcf	12,1	;volatile
  1015     03C3                     l1123:
  1016                           
  1017                           ;KF1.c: 14:     ANSELAbits.ANSA0 = 1;
  1018     03C3  0023               	movlb	3	; select bank3
  1019     03C4  140C               	bsf	12,0	;volatile
  1020     03C5                     l1125:
  1021                           
  1022                           ;KF1.c: 15:     ANSELAbits.ANSA4 = 1;
  1023     03C5  160C               	bsf	12,4	;volatile
  1024                           
  1025                           ;KF1.c: 18:     ADCON1 = 0x50;
  1026     03C6  3050               	movlw	80
  1027     03C7  0021               	movlb	1	; select bank1
  1028     03C8  009E               	movwf	30	;volatile
  1029     03C9                     l1127:
  1030                           
  1031                           ;KF1.c: 19:     PIE1bits.ADIE = 1;
  1032     03C9  1711               	bsf	17,6	;volatile
  1033     03CA                     l1129:
  1034                           
  1035                           ;KF1.c: 20:     PIR1bits.ADIF = 0;
  1036     03CA  0020               	movlb	0	; select bank0
  1037     03CB  1311               	bcf	17,6	;volatile
  1038     03CC                     l1131:
  1039                           
  1040                           ;KF1.c: 21:     ADCON0bits.GO = 0;
  1041     03CC  0021               	movlb	1	; select bank1
  1042     03CD  109D               	bcf	29,1	;volatile
  1043     03CE                     l1133:
  1044                           
  1045                           ;KF1.c: 22:     ADCON0bits.ADON = 1;
  1046     03CE  141D               	bsf	29,0	;volatile
  1047     03CF                     l120:
  1048     03CF  0008               	return
  1049     03D0                     __end_of_setup:
  1050                           
  1051                           	psect	text2
  1052     02AF                     __ptext2:	
  1053 ;; *************** function _getADS *****************
  1054 ;; Defined at:
  1055 ;;		line 52 in file "main.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  acd             2   20[BANK0 ] unsigned int 
  1060 ;;  ac3             2   18[BANK0 ] unsigned int 
  1061 ;;  ac2             2   16[BANK0 ] unsigned int 
  1062 ;;  ac1             2   14[BANK0 ] unsigned int 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  2   10[BANK0 ] unsigned int 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0
  1072 ;;      Params:         0       2
  1073 ;;      Locals:         0       8
  1074 ;;      Temps:          0       2
  1075 ;;      Totals:         0      12
  1076 ;;Total ram usage:       12 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; Hardware stack levels required when called: 2
  1079 ;; This function calls:
  1080 ;;		___lwdiv
  1081 ;;		_getADCValue
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087     02AF                     _getADS:	
  1088                           ;psect for function _getADS
  1089                           
  1090     02AF                     l1165:	
  1091                           ;incstack = 0
  1092                           ; Regs used in _getADS: [wreg+status,2+status,0+pclath+cstack]
  1093                           
  1094                           
  1095                           ;main.c: 54:     unsigned int ac1, ac2, ac3, acd;;main.c: 55:     ac1 = getADCValue(0x03
      +                          );
  1096     02AF  3003               	movlw	3
  1097     02B0  3183  2331  3182   	fcall	_getADCValue
  1098     02B3  0020               	movlb	0	; select bank0
  1099     02B4  0821               	movf	?_getADCValue+1,w
  1100     02B5  00AF               	movwf	getADS@ac1+1
  1101     02B6  0820               	movf	?_getADCValue,w
  1102     02B7  00AE               	movwf	getADS@ac1
  1103     02B8                     l1167:
  1104                           
  1105                           ;main.c: 56:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1106     02B8  3003               	movlw	3
  1107     02B9                     u947:
  1108     02B9  0B89               	decfsz	9,f
  1109     02BA  2AB9               	goto	u947
  1110     02BB  0000               	nop
  1111     02BC                     l1169:
  1112                           
  1113                           ;main.c: 57:     ac2 = getADCValue(0x03);
  1114     02BC  3003               	movlw	3
  1115     02BD  3183  2331  3182   	fcall	_getADCValue
  1116     02C0  0020               	movlb	0	; select bank0
  1117     02C1  0821               	movf	?_getADCValue+1,w
  1118     02C2  00B1               	movwf	getADS@ac2+1
  1119     02C3  0820               	movf	?_getADCValue,w
  1120     02C4  00B0               	movwf	getADS@ac2
  1121                           
  1122                           ;main.c: 58:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1123     02C5  3003               	movlw	3
  1124     02C6                     u957:
  1125     02C6  0B89               	decfsz	9,f
  1126     02C7  2AC6               	goto	u957
  1127     02C8  0000               	nop
  1128     02C9                     l1171:
  1129                           
  1130                           ;main.c: 59:     ac3 = getADCValue(0x03);
  1131     02C9  3003               	movlw	3
  1132     02CA  3183  2331  3182   	fcall	_getADCValue
  1133     02CD  0020               	movlb	0	; select bank0
  1134     02CE  0821               	movf	?_getADCValue+1,w
  1135     02CF  00B3               	movwf	getADS@ac3+1
  1136     02D0  0820               	movf	?_getADCValue,w
  1137     02D1  00B2               	movwf	getADS@ac3
  1138     02D2                     l1173:
  1139                           
  1140                           ;main.c: 60:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1141     02D2  3003               	movlw	3
  1142     02D3                     u967:
  1143     02D3  0B89               	decfsz	9,f
  1144     02D4  2AD3               	goto	u967
  1145     02D5  0000               	nop
  1146                           
  1147                           ;main.c: 61:     acd = (ac1 + ac2 + ac3) / 3;
  1148     02D6  3003               	movlw	3
  1149     02D7  0020               	movlb	0	; select bank0
  1150     02D8  00A0               	movwf	___lwdiv@divisor
  1151     02D9  3000               	movlw	0
  1152     02DA  00A1               	movwf	___lwdiv@divisor+1
  1153     02DB  0830               	movf	getADS@ac2,w
  1154     02DC  072E               	addwf	getADS@ac1,w
  1155     02DD  00AC               	movwf	??_getADS
  1156     02DE  0831               	movf	getADS@ac2+1,w
  1157     02DF  3D2F               	addwfc	getADS@ac1+1,w
  1158     02E0  00AD               	movwf	??_getADS+1
  1159     02E1  0832               	movf	getADS@ac3,w
  1160     02E2  072C               	addwf	??_getADS,w
  1161     02E3  00A2               	movwf	___lwdiv@dividend
  1162     02E4  0833               	movf	getADS@ac3+1,w
  1163     02E5  3D2D               	addwfc	??_getADS+1,w
  1164     02E6  00A3               	movwf	___lwdiv@dividend+1
  1165     02E7  3182  22F4  3182   	fcall	___lwdiv
  1166     02EA  0020               	movlb	0	; select bank0
  1167     02EB  0821               	movf	?___lwdiv+1,w
  1168     02EC  00B5               	movwf	getADS@acd+1
  1169     02ED  0820               	movf	?___lwdiv,w
  1170     02EE  00B4               	movwf	getADS@acd
  1171     02EF                     l1175:
  1172                           
  1173                           ;main.c: 62:     return acd;
  1174     02EF  0835               	movf	getADS@acd+1,w
  1175     02F0  00AB               	movwf	?_getADS+1
  1176     02F1  0834               	movf	getADS@acd,w
  1177     02F2  00AA               	movwf	?_getADS
  1178     02F3                     l65:
  1179     02F3  0008               	return
  1180     02F4                     __end_of_getADS:
  1181                           
  1182                           	psect	text3
  1183     0331                     __ptext3:	
  1184 ;; *************** function _getADCValue *****************
  1185 ;; Defined at:
  1186 ;;		line 43 in file "main.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  channel         1    wreg     unsigned char 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  channel         1    9[BANK0 ] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  2    0[BANK0 ] unsigned int 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMMON   BANK0
  1200 ;;      Params:         0       2
  1201 ;;      Locals:         0       1
  1202 ;;      Temps:          0       7
  1203 ;;      Totals:         0      10
  1204 ;;Total ram usage:       10 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; Hardware stack levels required when called: 1
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;;		_getADS
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215     0331                     _getADCValue:	
  1216                           ;psect for function _getADCValue
  1217                           
  1218                           
  1219                           ;incstack = 0
  1220                           ; Regs used in _getADCValue: [wreg+status,2+status,0]
  1221                           ;getADCValue@channel stored from wreg
  1222     0331  0020               	movlb	0	; select bank0
  1223     0332  00A9               	movwf	getADCValue@channel
  1224     0333                     l1081:
  1225                           
  1226                           ;main.c: 43: unsigned int getADCValue(unsigned char channel);main.c: 44: {;main.c: 45:  
      +                             ADCON0bits.CHS = channel;
  1227     0333  0829               	movf	getADCValue@channel,w
  1228     0334  00A2               	movwf	??_getADCValue
  1229     0335  0DA2               	rlf	??_getADCValue,f
  1230     0336  0DA2               	rlf	??_getADCValue,f
  1231     0337  0021               	movlb	1	; select bank1
  1232     0338  081D               	movf	29,w	;volatile
  1233     0339  0020               	movlb	0	; select bank0
  1234     033A  0622               	xorwf	??_getADCValue,w
  1235     033B  3983               	andlw	-125
  1236     033C  0622               	xorwf	??_getADCValue,w
  1237     033D  0021               	movlb	1	; select bank1
  1238     033E  009D               	movwf	29	;volatile
  1239     033F                     l1083:
  1240                           
  1241                           ;main.c: 46:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1242     033F  300D               	movlw	13
  1243     0340  0020               	movlb	0	; select bank0
  1244     0341  00A2               	movwf	??_getADCValue
  1245     0342  30FB               	movlw	251
  1246     0343                     u977:
  1247     0343  0B89               	decfsz	9,f
  1248     0344  2B43               	goto	u977
  1249     0345  0BA2               	decfsz	??_getADCValue,f
  1250     0346  2B43               	goto	u977
  1251     0347  3200               	nop2
  1252     0348                     l1085:
  1253                           
  1254                           ;main.c: 47:     ADCON0bits.GO = 1;
  1255     0348  0021               	movlb	1	; select bank1
  1256     0349  149D               	bsf	29,1	;volatile
  1257     034A                     l59:	
  1258                           ;main.c: 48:     while (ADCON0bits.GO);
  1259                           
  1260     034A  189D               	btfsc	29,1	;volatile
  1261     034B  2B4D               	goto	u711
  1262     034C  2B4E               	goto	u710
  1263     034D                     u711:
  1264     034D  2B4A               	goto	l59
  1265     034E                     u710:
  1266     034E                     l1087:
  1267                           
  1268                           ;main.c: 49:     return (unsigned int)((ADRESH << 2) | (ADRESL >> 6));
  1269     034E  081B               	movf	27,w	;volatile
  1270     034F  0020               	movlb	0	; select bank0
  1271     0350  00A2               	movwf	??_getADCValue
  1272     0351  3006               	movlw	6
  1273     0352                     u725:
  1274     0352  36A2               	lsrf	??_getADCValue,f
  1275     0353  0B89               	decfsz	9,f
  1276     0354  2B52               	goto	u725
  1277     0355  0822               	movf	??_getADCValue,w
  1278     0356  00A3               	movwf	??_getADCValue+1
  1279     0357  01A4               	clrf	??_getADCValue+2
  1280     0358  0021               	movlb	1	; select bank1
  1281     0359  081C               	movf	28,w	;volatile
  1282     035A  0020               	movlb	0	; select bank0
  1283     035B  00A5               	movwf	??_getADCValue+3
  1284     035C  01A6               	clrf	??_getADCValue+4
  1285     035D  35A5               	lslf	??_getADCValue+3,f
  1286     035E  0DA6               	rlf	??_getADCValue+4,f
  1287     035F  35A5               	lslf	??_getADCValue+3,f
  1288     0360  0DA6               	rlf	??_getADCValue+4,f
  1289     0361  0823               	movf	??_getADCValue+1,w
  1290     0362  0425               	iorwf	??_getADCValue+3,w
  1291     0363  00A7               	movwf	??_getADCValue+5
  1292     0364  0824               	movf	??_getADCValue+2,w
  1293     0365  0426               	iorwf	??_getADCValue+4,w
  1294     0366  00A8               	movwf	??_getADCValue+6
  1295     0367  0827               	movf	??_getADCValue+5,w
  1296     0368  00A0               	movwf	?_getADCValue
  1297     0369  0828               	movf	??_getADCValue+6,w
  1298     036A  00A1               	movwf	?_getADCValue+1
  1299     036B                     l62:
  1300     036B  0008               	return
  1301     036C                     __end_of_getADCValue:
  1302                           
  1303                           	psect	text4
  1304     02F4                     __ptext4:	
  1305 ;; *************** function ___lwdiv *****************
  1306 ;; Defined at:
  1307 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\lwdiv.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  divisor         2    0[BANK0 ] unsigned int 
  1310 ;;  dividend        2    2[BANK0 ] unsigned int 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  quotient        2    6[BANK0 ] unsigned int 
  1313 ;;  counter         1    5[BANK0 ] unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  2    0[BANK0 ] unsigned int 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0
  1323 ;;      Params:         0       4
  1324 ;;      Locals:         0       3
  1325 ;;      Temps:          0       1
  1326 ;;      Totals:         0       8
  1327 ;;Total ram usage:        8 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; Hardware stack levels required when called: 1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;;		_getADS
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338     02F4                     ___lwdiv:	
  1339                           ;psect for function ___lwdiv
  1340                           
  1341     02F4                     l1091:	
  1342                           ;incstack = 0
  1343                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1344                           
  1345     02F4  0020               	movlb	0	; select bank0
  1346     02F5  01A6               	clrf	___lwdiv@quotient
  1347     02F6  01A7               	clrf	___lwdiv@quotient+1
  1348     02F7                     l1093:
  1349     02F7  0820               	movf	___lwdiv@divisor,w
  1350     02F8  0421               	iorwf	___lwdiv@divisor+1,w
  1351     02F9  1903               	btfsc	3,2
  1352     02FA  2AFC               	goto	u731
  1353     02FB  2AFD               	goto	u730
  1354     02FC                     u731:
  1355     02FC  2B2C               	goto	l1113
  1356     02FD                     u730:
  1357     02FD                     l1095:
  1358     02FD  01A5               	clrf	___lwdiv@counter
  1359     02FE  0AA5               	incf	___lwdiv@counter,f
  1360     02FF  2B09               	goto	l1101
  1361     0300                     l1097:
  1362     0300  3001               	movlw	1
  1363     0301                     u745:
  1364     0301  35A0               	lslf	___lwdiv@divisor,f
  1365     0302  0DA1               	rlf	___lwdiv@divisor+1,f
  1366     0303  0B89               	decfsz	9,f
  1367     0304  2B01               	goto	u745
  1368     0305                     l1099:
  1369     0305  3001               	movlw	1
  1370     0306  00A4               	movwf	??___lwdiv
  1371     0307  0824               	movf	??___lwdiv,w
  1372     0308  07A5               	addwf	___lwdiv@counter,f
  1373     0309                     l1101:
  1374     0309  1FA1               	btfss	___lwdiv@divisor+1,7
  1375     030A  2B0C               	goto	u751
  1376     030B  2B0D               	goto	u750
  1377     030C                     u751:
  1378     030C  2B00               	goto	l1097
  1379     030D                     u750:
  1380     030D                     l1103:
  1381     030D  3001               	movlw	1
  1382     030E                     u765:
  1383     030E  35A6               	lslf	___lwdiv@quotient,f
  1384     030F  0DA7               	rlf	___lwdiv@quotient+1,f
  1385     0310  0B89               	decfsz	9,f
  1386     0311  2B0E               	goto	u765
  1387     0312  0821               	movf	___lwdiv@divisor+1,w
  1388     0313  0223               	subwf	___lwdiv@dividend+1,w
  1389     0314  1D03               	skipz
  1390     0315  2B18               	goto	u775
  1391     0316  0820               	movf	___lwdiv@divisor,w
  1392     0317  0222               	subwf	___lwdiv@dividend,w
  1393     0318                     u775:
  1394     0318  1C03               	skipc
  1395     0319  2B1B               	goto	u771
  1396     031A  2B1C               	goto	u770
  1397     031B                     u771:
  1398     031B  2B21               	goto	l1109
  1399     031C                     u770:
  1400     031C                     l1105:
  1401     031C  0820               	movf	___lwdiv@divisor,w
  1402     031D  02A2               	subwf	___lwdiv@dividend,f
  1403     031E  0821               	movf	___lwdiv@divisor+1,w
  1404     031F  3BA3               	subwfb	___lwdiv@dividend+1,f
  1405     0320                     l1107:
  1406     0320  1426               	bsf	___lwdiv@quotient,0
  1407     0321                     l1109:
  1408     0321  3001               	movlw	1
  1409     0322                     u785:
  1410     0322  36A1               	lsrf	___lwdiv@divisor+1,f
  1411     0323  0CA0               	rrf	___lwdiv@divisor,f
  1412     0324  0B89               	decfsz	9,f
  1413     0325  2B22               	goto	u785
  1414     0326                     l1111:
  1415     0326  3001               	movlw	1
  1416     0327  02A5               	subwf	___lwdiv@counter,f
  1417     0328  1D03               	btfss	3,2
  1418     0329  2B2B               	goto	u791
  1419     032A  2B2C               	goto	u790
  1420     032B                     u791:
  1421     032B  2B0D               	goto	l1103
  1422     032C                     u790:
  1423     032C                     l1113:
  1424     032C  0827               	movf	___lwdiv@quotient+1,w
  1425     032D  00A1               	movwf	?___lwdiv+1
  1426     032E  0826               	movf	___lwdiv@quotient,w
  1427     032F  00A0               	movwf	?___lwdiv
  1428     0330                     l471:
  1429     0330  0008               	return
  1430     0331                     __end_of___lwdiv:
  1431                           
  1432                           	psect	text5
  1433     036C                     __ptext5:	
  1434 ;; *************** function ___lmul *****************
  1435 ;; Defined at:
  1436 ;;		line 15 in file "C:\XC8\pic\sources\c99\common\Umul32.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1439 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  product         4    8[BANK0 ] unsigned long 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  4    0[BANK0 ] unsigned long 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0
  1451 ;;      Params:         0       8
  1452 ;;      Locals:         0       4
  1453 ;;      Temps:          0       0
  1454 ;;      Totals:         0      12
  1455 ;;Total ram usage:       12 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 1
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465     036C                     ___lmul:	
  1466                           ;psect for function ___lmul
  1467                           
  1468     036C                     l1179:	
  1469                           ;incstack = 0
  1470                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1471                           
  1472     036C  3000               	movlw	0
  1473     036D  0020               	movlb	0	; select bank0
  1474     036E  00AB               	movwf	___lmul@product+3
  1475     036F  3000               	movlw	0
  1476     0370  00AA               	movwf	___lmul@product+2
  1477     0371  3000               	movlw	0
  1478     0372  00A9               	movwf	___lmul@product+1
  1479     0373  3000               	movlw	0
  1480     0374  00A8               	movwf	___lmul@product
  1481     0375                     l1181:
  1482     0375  1C20               	btfss	___lmul@multiplier,0
  1483     0376  2B78               	goto	u801
  1484     0377  2B79               	goto	u800
  1485     0378                     u801:
  1486     0378  2B81               	goto	l1185
  1487     0379                     u800:
  1488     0379                     l1183:
  1489     0379  0824               	movf	___lmul@multiplicand,w
  1490     037A  07A8               	addwf	___lmul@product,f
  1491     037B  0825               	movf	___lmul@multiplicand+1,w
  1492     037C  3DA9               	addwfc	___lmul@product+1,f
  1493     037D  0826               	movf	___lmul@multiplicand+2,w
  1494     037E  3DAA               	addwfc	___lmul@product+2,f
  1495     037F  0827               	movf	___lmul@multiplicand+3,w
  1496     0380  3DAB               	addwfc	___lmul@product+3,f
  1497     0381                     l1185:
  1498     0381  3001               	movlw	1
  1499     0382                     u815:
  1500     0382  35A4               	lslf	___lmul@multiplicand,f
  1501     0383  0DA5               	rlf	___lmul@multiplicand+1,f
  1502     0384  0DA6               	rlf	___lmul@multiplicand+2,f
  1503     0385  0DA7               	rlf	___lmul@multiplicand+3,f
  1504     0386  0B89               	decfsz	9,f
  1505     0387  2B82               	goto	u815
  1506     0388                     l1187:
  1507     0388  3001               	movlw	1
  1508     0389                     u825:
  1509     0389  36A3               	lsrf	___lmul@multiplier+3,f
  1510     038A  0CA2               	rrf	___lmul@multiplier+2,f
  1511     038B  0CA1               	rrf	___lmul@multiplier+1,f
  1512     038C  0CA0               	rrf	___lmul@multiplier,f
  1513     038D  0B89               	decfsz	9,f
  1514     038E  2B89               	goto	u825
  1515     038F  0823               	movf	___lmul@multiplier+3,w
  1516     0390  0422               	iorwf	___lmul@multiplier+2,w
  1517     0391  0421               	iorwf	___lmul@multiplier+1,w
  1518     0392  0420               	iorwf	___lmul@multiplier,w
  1519     0393  1D03               	skipz
  1520     0394  2B96               	goto	u831
  1521     0395  2B97               	goto	u830
  1522     0396                     u831:
  1523     0396  2B75               	goto	l1181
  1524     0397                     u830:
  1525     0397                     l1189:
  1526     0397  082B               	movf	___lmul@product+3,w
  1527     0398  00A3               	movwf	?___lmul+3
  1528     0399  082A               	movf	___lmul@product+2,w
  1529     039A  00A2               	movwf	?___lmul+2
  1530     039B  0829               	movf	___lmul@product+1,w
  1531     039C  00A1               	movwf	?___lmul+1
  1532     039D  0828               	movf	___lmul@product,w
  1533     039E  00A0               	movwf	?___lmul
  1534     039F                     l205:
  1535     039F  0008               	return
  1536     03A0                     __end_of___lmul:
  1537                           
  1538                           	psect	text6
  1539     0254                     __ptext6:	
  1540 ;; *************** function ___lldiv *****************
  1541 ;; Defined at:
  1542 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\__lldiv.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  divisor         4   12[BANK0 ] unsigned long 
  1545 ;;  dividend        4   16[BANK0 ] unsigned long 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  quotient        4   21[BANK0 ] unsigned long 
  1548 ;;  counter         1   25[BANK0 ] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  4   12[BANK0 ] unsigned long 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0
  1558 ;;      Params:         0       8
  1559 ;;      Locals:         0       5
  1560 ;;      Temps:          0       1
  1561 ;;      Totals:         0      14
  1562 ;;Total ram usage:       14 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 1
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572     0254                     ___lldiv:	
  1573                           ;psect for function ___lldiv
  1574                           
  1575     0254                     l1193:	
  1576                           ;incstack = 0
  1577                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1578                           
  1579     0254  3000               	movlw	0
  1580     0255  0020               	movlb	0	; select bank0
  1581     0256  00B8               	movwf	___lldiv@quotient+3
  1582     0257  3000               	movlw	0
  1583     0258  00B7               	movwf	___lldiv@quotient+2
  1584     0259  3000               	movlw	0
  1585     025A  00B6               	movwf	___lldiv@quotient+1
  1586     025B  3000               	movlw	0
  1587     025C  00B5               	movwf	___lldiv@quotient
  1588     025D  082F               	movf	___lldiv@divisor+3,w
  1589     025E  042E               	iorwf	___lldiv@divisor+2,w
  1590     025F  042D               	iorwf	___lldiv@divisor+1,w
  1591     0260  042C               	iorwf	___lldiv@divisor,w
  1592     0261  1903               	skipnz
  1593     0262  2A64               	goto	u841
  1594     0263  2A65               	goto	u840
  1595     0264                     u841:
  1596     0264  2AA6               	goto	l1213
  1597     0265                     u840:
  1598     0265                     l1195:
  1599     0265  01B9               	clrf	___lldiv@counter
  1600     0266  0AB9               	incf	___lldiv@counter,f
  1601     0267  2A73               	goto	l1199
  1602     0268                     l1197:
  1603     0268  3001               	movlw	1
  1604     0269                     u855:
  1605     0269  35AC               	lslf	___lldiv@divisor,f
  1606     026A  0DAD               	rlf	___lldiv@divisor+1,f
  1607     026B  0DAE               	rlf	___lldiv@divisor+2,f
  1608     026C  0DAF               	rlf	___lldiv@divisor+3,f
  1609     026D  0B89               	decfsz	9,f
  1610     026E  2A69               	goto	u855
  1611     026F  3001               	movlw	1
  1612     0270  00B4               	movwf	??___lldiv
  1613     0271  0834               	movf	??___lldiv,w
  1614     0272  07B9               	addwf	___lldiv@counter,f
  1615     0273                     l1199:
  1616     0273  1FAF               	btfss	___lldiv@divisor+3,7
  1617     0274  2A76               	goto	u861
  1618     0275  2A77               	goto	u860
  1619     0276                     u861:
  1620     0276  2A68               	goto	l1197
  1621     0277                     u860:
  1622     0277                     l1201:
  1623     0277  3001               	movlw	1
  1624     0278                     u875:
  1625     0278  35B5               	lslf	___lldiv@quotient,f
  1626     0279  0DB6               	rlf	___lldiv@quotient+1,f
  1627     027A  0DB7               	rlf	___lldiv@quotient+2,f
  1628     027B  0DB8               	rlf	___lldiv@quotient+3,f
  1629     027C  0B89               	decfsz	9,f
  1630     027D  2A78               	goto	u875
  1631     027E                     l1203:
  1632     027E  082F               	movf	___lldiv@divisor+3,w
  1633     027F  0233               	subwf	___lldiv@dividend+3,w
  1634     0280  1D03               	skipz
  1635     0281  2A8C               	goto	u885
  1636     0282  082E               	movf	___lldiv@divisor+2,w
  1637     0283  0232               	subwf	___lldiv@dividend+2,w
  1638     0284  1D03               	skipz
  1639     0285  2A8C               	goto	u885
  1640     0286  082D               	movf	___lldiv@divisor+1,w
  1641     0287  0231               	subwf	___lldiv@dividend+1,w
  1642     0288  1D03               	skipz
  1643     0289  2A8C               	goto	u885
  1644     028A  082C               	movf	___lldiv@divisor,w
  1645     028B  0230               	subwf	___lldiv@dividend,w
  1646     028C                     u885:
  1647     028C  1C03               	skipc
  1648     028D  2A8F               	goto	u881
  1649     028E  2A90               	goto	u880
  1650     028F                     u881:
  1651     028F  2A99               	goto	l1209
  1652     0290                     u880:
  1653     0290                     l1205:
  1654     0290  082C               	movf	___lldiv@divisor,w
  1655     0291  02B0               	subwf	___lldiv@dividend,f
  1656     0292  082D               	movf	___lldiv@divisor+1,w
  1657     0293  3BB1               	subwfb	___lldiv@dividend+1,f
  1658     0294  082E               	movf	___lldiv@divisor+2,w
  1659     0295  3BB2               	subwfb	___lldiv@dividend+2,f
  1660     0296  082F               	movf	___lldiv@divisor+3,w
  1661     0297  3BB3               	subwfb	___lldiv@dividend+3,f
  1662     0298                     l1207:
  1663     0298  1435               	bsf	___lldiv@quotient,0
  1664     0299                     l1209:
  1665     0299  3001               	movlw	1
  1666     029A                     u895:
  1667     029A  36AF               	lsrf	___lldiv@divisor+3,f
  1668     029B  0CAE               	rrf	___lldiv@divisor+2,f
  1669     029C  0CAD               	rrf	___lldiv@divisor+1,f
  1670     029D  0CAC               	rrf	___lldiv@divisor,f
  1671     029E  0B89               	decfsz	9,f
  1672     029F  2A9A               	goto	u895
  1673     02A0                     l1211:
  1674     02A0  3001               	movlw	1
  1675     02A1  02B9               	subwf	___lldiv@counter,f
  1676     02A2  1D03               	btfss	3,2
  1677     02A3  2AA5               	goto	u901
  1678     02A4  2AA6               	goto	u900
  1679     02A5                     u901:
  1680     02A5  2A77               	goto	l1201
  1681     02A6                     u900:
  1682     02A6                     l1213:
  1683     02A6  0838               	movf	___lldiv@quotient+3,w
  1684     02A7  00AF               	movwf	?___lldiv+3
  1685     02A8  0837               	movf	___lldiv@quotient+2,w
  1686     02A9  00AE               	movwf	?___lldiv+2
  1687     02AA  0836               	movf	___lldiv@quotient+1,w
  1688     02AB  00AD               	movwf	?___lldiv+1
  1689     02AC  0835               	movf	___lldiv@quotient,w
  1690     02AD  00AC               	movwf	?___lldiv
  1691     02AE                     l227:
  1692     02AE  0008               	return
  1693     02AF                     __end_of___lldiv:
  1694                           
  1695                           	psect	text7
  1696     03A0                     __ptext7:	
  1697 ;; *************** function _PWMinit *****************
  1698 ;; Defined at:
  1699 ;;		line 25 in file "KF1.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0
  1713 ;;      Params:         0       0
  1714 ;;      Locals:         0       0
  1715 ;;      Temps:          0       0
  1716 ;;      Totals:         0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 1
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727     03A0                     _PWMinit:	
  1728                           ;psect for function _PWMinit
  1729                           
  1730     03A0                     l1135:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _PWMinit: [wreg+status,2+status,0]
  1733                           
  1734                           
  1735                           ;KF1.c: 27:     TRISAbits.TRISA2 = 1;
  1736     03A0  0021               	movlb	1	; select bank1
  1737     03A1  150C               	bsf	12,2	;volatile
  1738     03A2                     l1137:
  1739                           
  1740                           ;KF1.c: 28:     PWM1CON = 0x00;
  1741     03A2  002C               	movlb	12	; select bank12
  1742     03A3  0193               	clrf	19	;volatile
  1743     03A4                     l1139:
  1744                           
  1745                           ;KF1.c: 29:     PWM1CONbits.PWM1POL = 0;
  1746     03A4  1213               	bcf	19,4	;volatile
  1747     03A5                     l1141:
  1748                           
  1749                           ;KF1.c: 30:     PR2 = 200;
  1750     03A5  30C8               	movlw	200
  1751     03A6  0020               	movlb	0	; select bank0
  1752     03A7  009B               	movwf	27	;volatile
  1753     03A8                     l1143:
  1754                           
  1755                           ;KF1.c: 31:     PWM1DCH = 0x00;
  1756     03A8  002C               	movlb	12	; select bank12
  1757     03A9  0192               	clrf	18	;volatile
  1758     03AA                     l1145:
  1759                           
  1760                           ;KF1.c: 32:     PWM1DCL = 0x00;
  1761     03AA  0191               	clrf	17	;volatile
  1762     03AB                     l1147:
  1763                           
  1764                           ;KF1.c: 33:     INTCONbits.GIE = 1;
  1765     03AB  178B               	bsf	11,7	;volatile
  1766     03AC                     l1149:
  1767                           
  1768                           ;KF1.c: 34:     INTCONbits.PEIE = 1;
  1769     03AC  170B               	bsf	11,6	;volatile
  1770     03AD                     l1151:
  1771                           
  1772                           ;KF1.c: 35:     PIE1bits.TMR2IE = 1;
  1773     03AD  0021               	movlb	1	; select bank1
  1774     03AE  1491               	bsf	17,1	;volatile
  1775     03AF                     l1153:
  1776                           
  1777                           ;KF1.c: 36:     PIR1bits.TMR2IF = 0;
  1778     03AF  0020               	movlb	0	; select bank0
  1779     03B0  1091               	bcf	17,1	;volatile
  1780     03B1                     l1155:
  1781                           
  1782                           ;KF1.c: 37:     T2CONbits.T2CKPS = 3;
  1783     03B1  3003               	movlw	3
  1784     03B2  049C               	iorwf	28,f	;volatile
  1785     03B3                     l1157:
  1786                           
  1787                           ;KF1.c: 38:     PWM1CONbits.PWM1EN = 1;
  1788     03B3  002C               	movlb	12	; select bank12
  1789     03B4  1793               	bsf	19,7	;volatile
  1790     03B5                     l1159:
  1791                           
  1792                           ;KF1.c: 39:     TRISAbits.TRISA2 = 0;
  1793     03B5  0021               	movlb	1	; select bank1
  1794     03B6  110C               	bcf	12,2	;volatile
  1795     03B7                     l1161:
  1796                           
  1797                           ;KF1.c: 40:     PWM1CONbits.PWM1OE = 1;
  1798     03B7  002C               	movlb	12	; select bank12
  1799     03B8  1713               	bsf	19,6	;volatile
  1800     03B9                     l1163:
  1801                           
  1802                           ;KF1.c: 41:     T2CONbits.TMR2ON = 1;
  1803     03B9  0020               	movlb	0	; select bank0
  1804     03BA  151C               	bsf	28,2	;volatile
  1805     03BB                     l123:
  1806     03BB  0008               	return
  1807     03BC                     __end_of_PWMinit:
  1808                           
  1809                           	psect	intentry
  1810     0004                     __pintentry:	
  1811 ;; *************** function _ISR *****************
  1812 ;; Defined at:
  1813 ;;		line 65 in file "main.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  p               2    4[COMMON] short 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0
  1827 ;;      Params:         0       0
  1828 ;;      Locals:         2       0
  1829 ;;      Temps:          4       0
  1830 ;;      Totals:         6       0
  1831 ;;Total ram usage:        6 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		Interrupt level 1
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840     0004                     _ISR:
  1841                           
  1842                           ;incstack = 0
  1843     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1844                           
  1845                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  1846     0005  3180               	pagesel	$
  1847     0006                     i1l1025:
  1848                           
  1849                           ;main.c: 67:     short p;;main.c: 68:     if(PIR1bits.TMR2IF == 1)
  1850     0006  0020               	movlb	0	; select bank0
  1851     0007  1C91               	btfss	17,1	;volatile
  1852     0008  280A               	goto	u58_21
  1853     0009  280B               	goto	u58_20
  1854     000A                     u58_21:
  1855     000A  283F               	goto	i1l1051
  1856     000B                     u58_20:
  1857     000B                     i1l1027:
  1858                           
  1859                           ;main.c: 69:  {;main.c: 70:   PIE1bits.TMR2IE = 0;
  1860     000B  0021               	movlb	1	; select bank1
  1861     000C  1091               	bcf	17,1	;volatile
  1862                           
  1863                           ;main.c: 71:         T2CONbits.TMR2ON = 0;
  1864     000D  0020               	movlb	0	; select bank0
  1865     000E  111C               	bcf	28,2	;volatile
  1866                           
  1867                           ;main.c: 72:         PIR1bits.TMR2IF = 0;
  1868     000F  1091               	bcf	17,1	;volatile
  1869     0010                     i1l1029:
  1870                           
  1871                           ;main.c: 73:   if(PWM1DCH >= PR2)
  1872     0010  081B               	movf	27,w	;volatile
  1873     0011  002C               	movlb	12	; select bank12
  1874     0012  0212               	subwf	18,w	;volatile
  1875     0013  1C03               	skipc
  1876     0014  2816               	goto	u59_21
  1877     0015  2817               	goto	u59_20
  1878     0016                     u59_21:
  1879     0016  281C               	goto	i1l1033
  1880     0017                     u59_20:
  1881     0017                     i1l1031:
  1882                           
  1883                           ;main.c: 74:         {;main.c: 75:             p = -1;
  1884     0017  30FF               	movlw	255
  1885     0018  00FA               	movwf	ISR@p
  1886     0019  30FF               	movlw	255
  1887     001A  00FB               	movwf	ISR@p+1
  1888                           
  1889                           ;main.c: 76:   }
  1890     001B  2825               	goto	i1l1037
  1891     001C                     i1l1033:
  1892     001C  0812               	movf	18,w	;volatile
  1893     001D  1D03               	btfss	3,2
  1894     001E  2820               	goto	u60_21
  1895     001F  2821               	goto	u60_20
  1896     0020                     u60_21:
  1897     0020  2825               	goto	i1l1037
  1898     0021                     u60_20:
  1899     0021                     i1l1035:
  1900                           
  1901                           ;main.c: 78:         {;main.c: 79:    p = 1;
  1902     0021  3001               	movlw	1
  1903     0022  00FA               	movwf	ISR@p
  1904     0023  3000               	movlw	0
  1905     0024  00FB               	movwf	ISR@p+1
  1906     0025                     i1l1037:
  1907                           
  1908                           ;main.c: 81:         if(p == 1)
  1909     0025  037A               	decf	ISR@p,w
  1910     0026  047B               	iorwf	ISR@p+1,w
  1911     0027  1D03               	btfss	3,2
  1912     0028  282A               	goto	u61_21
  1913     0029  282B               	goto	u61_20
  1914     002A                     u61_21:
  1915     002A  2830               	goto	i1l1041
  1916     002B                     u61_20:
  1917     002B                     i1l1039:
  1918                           
  1919                           ;main.c: 82:         {;main.c: 83:             PWM1DCH++;
  1920     002B  3001               	movlw	1
  1921     002C  00F6               	movwf	??_ISR
  1922     002D  0876               	movf	??_ISR,w
  1923     002E  0792               	addwf	18,f	;volatile
  1924                           
  1925                           ;main.c: 84:         }
  1926     002F  283A               	goto	i1l1045
  1927     0030                     i1l1041:
  1928     0030  0A7A               	incf	ISR@p,w
  1929     0031  1D03               	skipz
  1930     0032  2837               	goto	u62_21
  1931     0033  0A7B               	incf	ISR@p+1,w
  1932     0034  1D03               	btfss	3,2
  1933     0035  2837               	goto	u62_21
  1934     0036  2838               	goto	u62_20
  1935     0037                     u62_21:
  1936     0037  283A               	goto	i1l1045
  1937     0038                     u62_20:
  1938     0038                     i1l1043:
  1939                           
  1940                           ;main.c: 86:         {;main.c: 87:             PWM1DCH--;
  1941     0038  3001               	movlw	1
  1942     0039  0292               	subwf	18,f	;volatile
  1943     003A                     i1l1045:
  1944                           
  1945                           ;main.c: 89:         TMR2 = 0x00;
  1946     003A  0020               	movlb	0	; select bank0
  1947     003B  019A               	clrf	26	;volatile
  1948     003C                     i1l1047:
  1949                           
  1950                           ;main.c: 90:   T2CONbits.TMR2ON = 1;
  1951     003C  151C               	bsf	28,2	;volatile
  1952     003D                     i1l1049:
  1953                           
  1954                           ;main.c: 91:         PIE1bits.TMR2IE = 1;
  1955     003D  0021               	movlb	1	; select bank1
  1956     003E  1491               	bsf	17,1	;volatile
  1957     003F                     i1l1051:
  1958                           
  1959                           ;main.c: 94:     if(PIR1bits.ADIF == 1)
  1960     003F  0020               	movlb	0	; select bank0
  1961     0040  1F11               	btfss	17,6	;volatile
  1962     0041  2843               	goto	u63_21
  1963     0042  2844               	goto	u63_20
  1964     0043                     u63_21:
  1965     0043  28D6               	goto	i1l87
  1966     0044                     u63_20:
  1967     0044                     i1l1053:
  1968                           
  1969                           ;main.c: 95:     {;main.c: 96:         PIE1bits.ADIE = 0;
  1970     0044  0021               	movlb	1	; select bank1
  1971     0045  1311               	bcf	17,6	;volatile
  1972                           
  1973                           ;main.c: 97:         PIR1bits.ADIF = 0;
  1974     0046  0020               	movlb	0	; select bank0
  1975     0047  1311               	bcf	17,6	;volatile
  1976     0048                     i1l1055:
  1977                           
  1978                           ;main.c: 99:         if(ADCON0bits.CHS == 0x00)
  1979     0048  0021               	movlb	1	; select bank1
  1980     0049  0C1D               	rrf	29,w	;volatile
  1981     004A  0C89               	rrf	9,f
  1982     004B  391F               	andlw	31
  1983     004C  3A00               	xorlw	0
  1984     004D  1D03               	skipz
  1985     004E  2850               	goto	u64_21
  1986     004F  2851               	goto	u64_20
  1987     0050                     u64_21:
  1988     0050  289D               	goto	i1l1069
  1989     0051                     u64_20:
  1990     0051                     i1l1057:
  1991                           
  1992                           ;main.c: 100:         {;main.c: 101:             for(i = 0; i < 80; i++)
  1993     0051  01F0               	clrf	_i
  1994     0052  01F1               	clrf	_i+1
  1995     0053                     i1l1059:
  1996     0053  0871               	movf	_i+1,w
  1997     0054  3A80               	xorlw	128
  1998     0055  00F6               	movwf	??_ISR
  1999     0056  3080               	movlw	128
  2000     0057  0276               	subwf	??_ISR,w
  2001     0058  1D03               	skipz
  2002     0059  285C               	goto	u65_25
  2003     005A  3050               	movlw	80
  2004     005B  0270               	subwf	_i,w
  2005     005C                     u65_25:
  2006     005C  1C03               	skipc
  2007     005D  285F               	goto	u65_21
  2008     005E  2860               	goto	u65_20
  2009     005F                     u65_21:
  2010     005F  2861               	goto	i1l1063
  2011     0060                     u65_20:
  2012     0060  28D4               	goto	i1l82
  2013     0061                     i1l1063:
  2014                           
  2015                           ;main.c: 102:             {;main.c: 103:                 if(Rt >= TABLE[i])
  2016     0061  0871               	movf	_i+1,w
  2017     0062  0085               	movwf	5
  2018     0063  0870               	movf	_i,w
  2019     0064  0084               	movwf	4
  2020     0065  3584               	lslf	4,f
  2021     0066  0D85               	rlf	5,f
  2022     0067  30B4               	movlw	low _TABLE
  2023     0068  0784               	addwf	4,f
  2024     0069  3001               	movlw	high _TABLE
  2025     006A  3D05               	addwfc	5,w
  2026     006B  3880               	iorlw	128
  2027     006C  0085               	movwf	5
  2028     006D  3F00               	moviw [0]fsr0
  2029     006E  00F6               	movwf	??_ISR
  2030     006F  3F01               	moviw [1]fsr0
  2031     0070  00F7               	movwf	??_ISR+1
  2032     0071  01F8               	clrf	??_ISR+2
  2033     0072  01F9               	clrf	??_ISR+3
  2034     0073  0879               	movf	??_ISR+3,w
  2035     0074  0020               	movlb	0	; select bank0
  2036     0075  0242               	subwf	_Rt+3,w
  2037     0076  1D03               	skipz
  2038     0077  2882               	goto	u66_25
  2039     0078  0878               	movf	??_ISR+2,w
  2040     0079  0241               	subwf	_Rt+2,w
  2041     007A  1D03               	skipz
  2042     007B  2882               	goto	u66_25
  2043     007C  0877               	movf	??_ISR+1,w
  2044     007D  0240               	subwf	_Rt+1,w
  2045     007E  1D03               	skipz
  2046     007F  2882               	goto	u66_25
  2047     0080  0876               	movf	??_ISR,w
  2048     0081  023F               	subwf	_Rt,w
  2049     0082                     u66_25:
  2050     0082  1C03               	skipc
  2051     0083  2885               	goto	u66_21
  2052     0084  2886               	goto	u66_20
  2053     0085                     u66_21:
  2054     0085  288B               	goto	i1l1067
  2055     0086                     u66_20:
  2056     0086                     i1l1065:
  2057                           
  2058                           ;main.c: 104:                 {;main.c: 105:                     v = i;
  2059     0086  0871               	movf	_i+1,w
  2060     0087  00F3               	movwf	_v+1
  2061     0088  0870               	movf	_i,w
  2062     0089  00F2               	movwf	_v
  2063                           
  2064                           ;main.c: 106:                     break;
  2065     008A  28D4               	goto	i1l82
  2066     008B                     i1l1067:
  2067                           
  2068                           ;main.c: 108:             }
  2069     008B  3001               	movlw	1
  2070     008C  07F0               	addwf	_i,f
  2071     008D  3000               	movlw	0
  2072     008E  3DF1               	addwfc	_i+1,f
  2073     008F  0871               	movf	_i+1,w
  2074     0090  3A80               	xorlw	128
  2075     0091  00F6               	movwf	??_ISR
  2076     0092  3080               	movlw	128
  2077     0093  0276               	subwf	??_ISR,w
  2078     0094  1D03               	skipz
  2079     0095  2898               	goto	u67_25
  2080     0096  3050               	movlw	80
  2081     0097  0270               	subwf	_i,w
  2082     0098                     u67_25:
  2083     0098  1C03               	skipc
  2084     0099  289B               	goto	u67_21
  2085     009A  289C               	goto	u67_20
  2086     009B                     u67_21:
  2087     009B  2861               	goto	i1l1063
  2088     009C                     u67_20:
  2089     009C  28D4               	goto	i1l82
  2090     009D                     i1l1069:
  2091     009D  0C1D               	rrf	29,w	;volatile
  2092     009E  0C89               	rrf	9,f
  2093     009F  391F               	andlw	31
  2094     00A0  3A03               	xorlw	3
  2095     00A1  1D03               	skipz
  2096     00A2  28A4               	goto	u68_21
  2097     00A3  28A5               	goto	u68_20
  2098     00A4                     u68_21:
  2099     00A4  28D4               	goto	i1l82
  2100     00A5                     u68_20:
  2101     00A5                     i1l1071:
  2102                           
  2103                           ;main.c: 111:         {;main.c: 112:             if(v <= (t - 2))
  2104     00A5  0874               	movf	_t,w
  2105     00A6  3EFE               	addlw	254
  2106     00A7  00F6               	movwf	??_ISR
  2107     00A8  30FF               	movlw	255
  2108     00A9  3D75               	addwfc	_t+1,w
  2109     00AA  00F7               	movwf	??_ISR+1
  2110     00AB  0877               	movf	??_ISR+1,w
  2111     00AC  3A80               	xorlw	128
  2112     00AD  00F8               	movwf	??_ISR+2
  2113     00AE  0873               	movf	_v+1,w
  2114     00AF  3A80               	xorlw	128
  2115     00B0  0278               	subwf	??_ISR+2,w
  2116     00B1  1D03               	skipz
  2117     00B2  28B5               	goto	u69_25
  2118     00B3  0872               	movf	_v,w
  2119     00B4  0276               	subwf	??_ISR,w
  2120     00B5                     u69_25:
  2121     00B5  1C03               	skipc
  2122     00B6  28B8               	goto	u69_21
  2123     00B7  28B9               	goto	u69_20
  2124     00B8                     u69_21:
  2125     00B8  28C2               	goto	i1l1077
  2126     00B9                     u69_20:
  2127     00B9                     i1l1073:
  2128                           
  2129                           ;main.c: 113:             {;main.c: 114:                 PORTAbits.RA1 = 1;
  2130     00B9  0020               	movlb	0	; select bank0
  2131     00BA  148C               	bsf	12,1	;volatile
  2132                           
  2133                           ;main.c: 115:                 PIE1bits.TMR2IE = 0;
  2134     00BB  0021               	movlb	1	; select bank1
  2135     00BC  1091               	bcf	17,1	;volatile
  2136     00BD                     i1l1075:
  2137                           
  2138                           ;main.c: 116:                 PWM1DCH = PR2;
  2139     00BD  0020               	movlb	0	; select bank0
  2140     00BE  081B               	movf	27,w	;volatile
  2141     00BF  002C               	movlb	12	; select bank12
  2142     00C0  0092               	movwf	18	;volatile
  2143                           
  2144                           ;main.c: 117:             }
  2145     00C1  28D4               	goto	i1l82
  2146     00C2                     i1l1077:
  2147     00C2  0875               	movf	_t+1,w
  2148     00C3  3A80               	xorlw	128
  2149     00C4  00F6               	movwf	??_ISR
  2150     00C5  0873               	movf	_v+1,w
  2151     00C6  3A80               	xorlw	128
  2152     00C7  0276               	subwf	??_ISR,w
  2153     00C8  1D03               	skipz
  2154     00C9  28CC               	goto	u70_25
  2155     00CA  0872               	movf	_v,w
  2156     00CB  0274               	subwf	_t,w
  2157     00CC                     u70_25:
  2158     00CC  1803               	skipnc
  2159     00CD  28CF               	goto	u70_21
  2160     00CE  28D0               	goto	u70_20
  2161     00CF                     u70_21:
  2162     00CF  28D4               	goto	i1l82
  2163     00D0                     u70_20:
  2164     00D0                     i1l1079:
  2165                           
  2166                           ;main.c: 119:             {;main.c: 120:                 PORTAbits.RA1 = 0;
  2167     00D0  0020               	movlb	0	; select bank0
  2168     00D1  108C               	bcf	12,1	;volatile
  2169                           
  2170                           ;main.c: 121:                 PIE1bits.TMR2IE = 1;
  2171     00D2  0021               	movlb	1	; select bank1
  2172     00D3  1491               	bsf	17,1	;volatile
  2173     00D4                     i1l82:
  2174                           
  2175                           ;main.c: 125:         PIE1bits.ADIE = 1;
  2176     00D4  0021               	movlb	1	; select bank1
  2177     00D5  1711               	bsf	17,6	;volatile
  2178     00D6                     i1l87:
  2179     00D6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2180     00D7  0009               	retfie
  2181     00D8                     __end_of_ISR:
  2182     007E                     btemp	set	126	;btemp
  2183     007E                     int$flags	set	126
  2184     007E                     wtemp0	set	126
  2185                           
  2186                           	psect	config
  2187                           
  2188                           ;Config register CONFIG1 @ 0x8007
  2189                           ;	Oscillator Selection Bits
  2190                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2191                           ;	Watchdog Timer Enable
  2192                           ;	WDTE = OFF, WDT disabled
  2193                           ;	Power-up Timer Enable
  2194                           ;	PWRTE = OFF, PWRT disabled
  2195                           ;	MCLR Pin Function Select
  2196                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2197                           ;	Flash Program Memory Code Protection
  2198                           ;	CP = OFF, Program memory code protection is disabled
  2199                           ;	Brown-out Reset Enable
  2200                           ;	BOREN = OFF, Brown-out Reset disabled
  2201                           ;	Clock Out Enable
  2202                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2203     8007                     	org	32775
  2204     8007  39E4               	dw	14820
  2205                           
  2206                           ;Config register CONFIG2 @ 0x8008
  2207                           ;	Flash Memory Self-Write Protection
  2208                           ;	WRT = OFF, Write protection off
  2209                           ;	Stack Overflow/Underflow Reset Enable
  2210                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  2211                           ;	Brown-out Reset Voltage Selection
  2212                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2213                           ;	Low-Power Brown Out Reset
  2214                           ;	LPBOR = OFF, Low-Power BOR is disabled
  2215                           ;	Low-Voltage Programming Enable
  2216                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2217     8008                     	org	32776
  2218     8008  1DFF               	dw	7679

Data Sizes:
    Strings     0
    Constant    160
    Data        0
    BSS         20
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            48     31      45

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    _getADS->_getADCValue
    ___lldiv->___lmul

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2357
                                             26 BANK0      5     5      0
                            _PWMinit
                            ___lldiv
                             ___lmul
                            ___lwdiv
                        _getADCValue
                             _getADS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getADS                                              12    10      2     768
                                             10 BANK0     12    10      2
                            ___lwdiv
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         10     8      2      31
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     421
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWMinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  6     6      0      46
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMinit
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___lwdiv
   _getADCValue
   _getADS
     ___lwdiv
     _getADCValue
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              30      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            30      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               30     1F      2D       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      39       6        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
DATA                 0      0      39       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 21 15:39:57 2023

                      _i 0070                        _t 0074                        _v 0072  
                     l62 036B                       l65 02F3                       l59 034A  
                     _VR 0049                       _Rt 003F                      l120 03CF  
                    l123 03BB                      l205 039F                      l227 02AE  
                    l471 0330                      _PR2 001B                      _ISR 0004  
                    u710 034E                      u711 034D                      u800 0379  
                    u801 0378                      u730 02FD                      u731 02FC  
                    u900 02A6                      u901 02A5                      u725 0352  
                    u830 0397                      u750 030D                      u910 0106  
                    u831 0396                      u815 0382                      u751 030C  
                    u911 0105                      u840 0265                      u920 014A  
                    u841 0264                      u825 0389                      u745 0301  
                    u770 031C                      u771 031B                      u860 0277  
                    u861 0276                      u765 030E                      u925 0146  
                    u790 032C                      u855 0269                      u791 032B  
                    u775 0318                      u880 0290                      u881 028F  
                    u785 0322                      u937 00F8                      u875 0278  
                    u947 02B9                      u885 028C                      u957 02C6  
                    u895 029A                      u967 02D3                      u977 0343  
                    _ad1 0043                      _ad2 0047                      wreg 0009  
                   ?_ISR 0076                     ISR@p 007A                     l1101 0309  
                   l1111 0326                     l1103 030D                     l1201 0277  
                   l1105 031C                     l1113 032C                     l1121 03C1  
                   l1211 02A0                     l1203 027E                     l1107 0320  
                   l1131 03CC                     l1123 03C3                     l1141 03A5  
                   l1205 0290                     l1213 02A6                     l1109 0321  
                   l1133 03CE                     l1125 03C5                     l1117 03BC  
                   l1221 00EF                     l1151 03AD                     l1143 03A8  
                   l1135 03A0                     l1207 0298                     l1127 03C9  
                   l1119 03BF                     l1231 0129                     l1223 00F2  
                   l1161 03B7                     l1153 03AF                     l1145 03AA  
                   l1137 03A2                     l1209 0299                     l1081 0333  
                   l1129 03CA                     l1233 0154                     l1225 00FF  
                   l1217 00EA                     l1163 03B9                     l1155 03B1  
                   l1147 03AB                     l1139 03A4                     l1091 02F4  
                   l1083 033F                     l1171 02C9                     l1235 0194  
                   l1227 0106                     l1219 00EC                     l1157 03B3  
                   l1149 03AC                     l1181 0375                     l1093 02F7  
                   l1085 0348                     l1173 02D2                     l1165 02AF  
                   l1229 0111                     l1237 0196                     l1159 03B5  
                   l1183 0379                     l1095 02FD                     l1087 034E  
                   l1175 02EF                     l1167 02B8                     l1239 01AE  
                   l1193 0254                     l1185 0381                     l1097 0300  
                   l1169 02BC                     l1195 0265                     l1187 0388  
                   l1179 036C                     l1099 0305                     l1197 0268  
                   l1189 0397                     l1199 0273                     i1l82 00D4  
                   i1l87 00D6                     _TMR2 001A                     _main 00EA  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   btemp 007E                     start 00D8          __end_of_PWMinit 03BC  
                  ??_ISR 0076                    ?_main 0076          __end_of___lldiv 02AF  
        __end_of___lwdiv 0331                    _TABLE 01B4                    u60_20 0021  
                  u60_21 0020                    u61_20 002B                    u61_21 002A  
                  u70_20 00D0                    u62_20 0038                    u70_21 00CF  
                  u62_21 0037                    u70_25 00CC                    u63_20 0044  
                  u63_21 0043                    u64_20 0051                    u64_21 0050  
                  u65_20 0060                    u65_21 005F                    u65_25 005C  
                  u66_20 0086                    u58_20 000B                    u66_21 0085  
                  u58_21 000A                    u66_25 0082                    u67_20 009C  
                  u59_20 0017                    u67_21 009B                    u59_21 0016  
                  u67_25 0098                    u68_20 00A5                    u68_21 00A4  
                  u69_20 00B9                    u69_21 00B8                    u69_25 00B5  
    ___lmul@multiplicand 0024                    _setup 03BC                    status 0003  
                  wtemp0 007E          __initialization 00D9             __end_of_main 01B4  
                 ??_main 003A                   _ADCON1 009E                   _ADRESH 009C  
                 _ADRESL 009B                   ?_setup 0076                   i1l1031 0017  
                 i1l1041 0030                   i1l1033 001C                   i1l1025 0006  
                 i1l1043 0038                   i1l1035 0021                   i1l1027 000B  
                 i1l1051 003F                   i1l1053 0044                   i1l1045 003A  
                 i1l1037 0025                   i1l1029 0010                   i1l1071 00A5  
                 i1l1063 0061                   i1l1055 0048                   i1l1047 003C  
                 i1l1039 002B                   i1l1073 00B9                   i1l1065 0086  
                 i1l1057 0051                   i1l1049 003D                   i1l1075 00BD  
                 i1l1067 008B                   i1l1059 0053                   i1l1077 00C2  
                 i1l1069 009D                   i1l1079 00D0                ??_PWMinit 0020  
                 _OSCCON 0099                   ___lmul 036C                   _getADS 02AF  
              ??___lldiv 0034                ??___lwdiv 0024  __end_of__initialization 00E7  
     getADCValue@channel 0029            __end_of_TABLE 0254           __pcstackCOMMON 0076  
          __end_of_setup 03D0                  ??_setup 0020               __pbssBANK0 003F  
             __pmaintext 00EA                  ?___lmul 0020                  ?_getADS 002A  
             __pintentry 0004           ___lmul@product 0028                  _PWM1DCH 0612  
                _PWM1DCL 0611                  _PWM1CON 0613                  _PWMinit 03A0  
          ??_getADCValue 0022                  ___lldiv 0254                  ___lwdiv 02F4  
                __ptext1 03BC                  __ptext2 02AF                  __ptext3 0331  
                __ptext4 02F4                  __ptext5 036C                  __ptext6 0254  
                __ptext7 03A0                _T2CONbits 001C                  main@add 003E  
                clrloop0 03D1     end_of_initialization 00E7          ___lldiv@divisor 002C  
        ___lldiv@counter 0039      __end_of_getADCValue 036C                _PORTAbits 000C  
              _TRISAbits 008C           __end_of___lmul 03A0           __end_of_getADS 02F4  
    start_initialization 00D9              __end_of_ISR 00D8              _getADCValue 0331  
               ??___lmul 0028                 ??_getADS 002C              __pbssCOMMON 0070  
              ___latbits 0000            __pcstackBANK0 0020                 ?_PWMinit 0076  
       ___lwdiv@dividend 0022                 ?___lldiv 002C                 ?___lwdiv 0020  
              getADS@ac1 002E                getADS@ac2 0030                getADS@ac3 0032  
              getADS@acd 0034         ___lwdiv@quotient 0026                clear_ram0 03D0  
               _PIE1bits 0091                 _PIR1bits 0011               _ADCON0bits 009D  
      ___lmul@multiplier 0020               _ANSELAbits 018C          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0025             ?_getADCValue 0020                 int$flags 007E  
             _INTCONbits 000B              _PWM1CONbits 0613                 intlevel1 0000  
       ___lldiv@dividend 0030            __pstringtext1 01B4         ___lldiv@quotient 0035  
